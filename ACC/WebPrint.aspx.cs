using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using iTextSharp.text.pdf;
using System.IO;
using System.Web.Configuration;
using BLL;
using System.Threading;
using System.Globalization;
using System.Configuration;
using System.Reflection;
using System.Drawing;
using System.Text;


namespace ACC
{
    public partial class WebPrint : System.Web.UI.Page
    {
        public string AreaNo
        {
            get
            {
                if (ViewState["AreaNo"] == null)
                {
                    ViewState["AreaNo"] = "00001";
                }
                return ViewState["AreaNo"].ToString();
            }
            set { ViewState["AreaNo"] = value; }
        }
        public CostCenter SiteInfo
        {
            get
            {
                if (ViewState["SiteInfo"] == null)
                {
                    ViewState["SiteInfo"] = new CostCenter();
                }
                return (CostCenter)ViewState["SiteInfo"];
            }
            set { ViewState["SiteInfo"] = value; }
        }
        public short LocNumber
        {
            get
            {
                if (ViewState["LocNumber"] == null)
                {
                    ViewState["LocNumber"] = 1;
                }
                return short.Parse(ViewState["LocNumber"].ToString());
            }
            set { ViewState["LocNumber"] = value; }
        }
        public short LocType
        {
            get
            {
                if (ViewState["LocType"] == null)
                {
                    ViewState["LocType"] = 1;
                }
                return short.Parse(ViewState["LocType"].ToString());
            }
            set { ViewState["LocType"] = value; }
        }

        protected override void InitializeCulture()
        {
            HttpCookie cultureCookie = Request.Cookies["Lang"];
            String Lang = (cultureCookie != null) ? cultureCookie.Value : null;
            if (!string.IsNullOrEmpty(Lang))
            {
                String selectedLanguage = Lang;
                UICulture = selectedLanguage;
                Culture = selectedLanguage;

                Thread.CurrentThread.CurrentCulture =
                    CultureInfo.CreateSpecificCulture(selectedLanguage);
                Thread.CurrentThread.CurrentUICulture = new
                    CultureInfo(selectedLanguage);
            }
            CultureInfo newCulture = (CultureInfo)System.Threading.Thread.CurrentThread.CurrentCulture.Clone();
            newCulture.NumberFormat.CurrencyDecimalDigits = 2;
            newCulture.NumberFormat.NumberNegativePattern = 0;
            newCulture.NumberFormat.CurrencyNegativePattern = 0;
            newCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy";
            newCulture.DateTimeFormat.DateSeparator = "/";
            Thread.CurrentThread.CurrentCulture = newCulture;
            Thread.CurrentThread.CurrentUICulture = newCulture;
            base.InitializeCulture();
        }

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!Page.IsPostBack)
            {
                Session["Branch"] = "1";
                if (Request.QueryString["AreaNo"] != null)
                {
                    AreaNo = Request.QueryString["AreaNo"].ToString();
                    CostCenter myCost = new CostCenter();
                    myCost.Branch = 1;
                    if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), myCost.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCost.Code = Request.QueryString["AreaNo"].ToString();
                    myCost = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                              where citm.Code == myCost.Code
                              select citm).FirstOrDefault();
                    if (myCost != null) SiteInfo = myCost;
                }
                else
                {
                    // AreaNo = Session["AreaNo"].ToString();
                    // SiteInfo = (CostCenter)Session["SiteInfo"];
                }
                if (Request.QueryString["LocType"] != null) LocType = short.Parse(Request.QueryString["LocType"].ToString());
                if (Request.QueryString["LocNumber"] != null)
                {
                    LocNumber = short.Parse(Request.QueryString["LocNumber"].ToString());
                    if (Request.QueryString["AreaNo"] == null)
                    {
                        AreaNo = Request.QueryString["LocNumber"].ToString();
                        CostCenter myCost = new CostCenter();
                        myCost.Branch = 1;
                        if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), myCost.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        myCost.Code = Request.QueryString["LocNumber"].ToString();
                        myCost = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                                  where citm.Code == myCost.Code
                                  select citm).FirstOrDefault();
                        if (myCost != null) SiteInfo = myCost;
                    }
                }
                if (Request.QueryString["FType"] != null && Request.QueryString["Number"] != null)
                {
                    if (Request.QueryString["FType"].ToString() == "1") PrintCarMove(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "2") PrintCarMoveRCV(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "3") PrintCarRCV(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "4") PrintInvBack();
                    else if (Request.QueryString["FType"].ToString() == "40") PrintInvBack2();
                    else if (Request.QueryString["FType"].ToString() == "5") PrintInv(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "555") PrintInvOnline(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "50") PrintInv2(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "51") PrintInv3(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "52") PrintPriceList(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "6") PrintRVou(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "7") PrintPay(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "101") PrintVou(1, int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "102") PrintVou(2, int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "103") PrintJVou(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "106") PrintBankTransfer(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "107") PrintVou2(2, int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "201") PrintPurchaseRequest(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "202") PrintPurchaseOrder(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "203") PrintDeliveryNote(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "204") PrintPurchaseInvoice(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "205") PrintReturnPurchaseInvoice(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "206") PrintIssueNote(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "207") PrintUImportNote(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "222") PrintClaim(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "800") PrintCheckList(int.Parse(Request.QueryString["Number"].ToString()), short.Parse(Request.QueryString["VouType"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "801") PrintFastRepair(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "802") PrintPettyCash(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "951") PrintMyNo(int.Parse(Request.QueryString["Loc"].ToString()), int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "952") PrintMyNo2(int.Parse(Request.QueryString["Loc"].ToString()), int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "953") PrintReqPay(int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "9101") PrinteVou(Request.QueryString["DocType"].ToString(),int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "9201") PrinteVou201(Request.QueryString["DocType"].ToString(), int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "9301") PrinteVou301(Request.QueryString["DocType"].ToString(), int.Parse(Request.QueryString["Number"].ToString()));
                    else if (Request.QueryString["FType"].ToString() == "9401") PrinteVou401(Request.QueryString["DocType"].ToString(), int.Parse(Request.QueryString["Number"].ToString()));
                }
            }
        }
        //--------------- التشغيل ------------------------------------------------------------------------------------------------------------------------------------------


        #region 1 Print of CarMove

        public void PrintCarMove(int MyNumber)
        {
            try
            {
                CarMove myInv = new CarMove();
                myInv.Branch = short.Parse(Session["Branch"].ToString());
                myInv.VouLoc = AreaNo;
                myInv.Number = MyNumber;
                myInv = myInv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString).FirstOrDefault();
                if (myInv == null) return;

                Cities FromCity = new Cities();
                FromCity.Branch = short.Parse(Session["Branch"].ToString());
                FromCity.Code = myInv.FromLoc;
                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), FromCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                FromCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                          where sitm.Code == FromCity.Code
                          select sitm).FirstOrDefault();
                if (FromCity == null) return;

                Cities ToCity = new Cities();
                ToCity.Branch = short.Parse(Session["Branch"].ToString());
                ToCity.Code = myInv.ToLoc;
                ToCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                          where sitm.Code == ToCity.Code
                          select sitm).FirstOrDefault();
                if (ToCity == null) return;

                string Car = "";
                string Driver = "";
                string DriverCode = "";
                string Sponsor = "               ";
                string IqamaNo = "               ";
                if (!(bool)myInv.Rent)
                {
                    Drivers myDrive = new Drivers();
                    myDrive.Branch = short.Parse(Session["Branch"].ToString());
                    if (Cache["Drivers" + Session["CNN2"].ToString()] == null) Cache.Insert("Drivers" + Session["CNN2"].ToString(), myDrive.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myDrive.Code = myInv.DriverCode;
                    myDrive = (from sitm in (List<Drivers>)(Cache["Drivers" + Session["CNN2"].ToString()])
                               where sitm.Code == myDrive.Code
                               select sitm).FirstOrDefault();
                    if (myDrive == null) return;
                    Driver = myDrive.Name1;
                    DriverCode = myDrive.Code;
                    Sponsor = myDrive.Sponsor;
                    IqamaNo = myDrive.IqamaNo;

                    Cars myCar = new Cars();
                    myCar.Branch = short.Parse(Session["Branch"].ToString());
                    if (Cache["Cars" + Session["CNN2"].ToString()] == null) Cache.Insert("Cars" + Session["CNN2"].ToString(), myCar.GetAll21(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCar.Code = myInv.CarCode;
                    myCar = (from sitm in (List<Cars>)(Cache["Cars" + Session["CNN2"].ToString()])
                             where sitm.Code == myCar.Code
                             select sitm).FirstOrDefault();
                    if (myCar == null) return;
                    Car = myCar.CarType + " " + myCar.PlateNo;
                }
                else
                {
                    Car = myInv.RentPlateNo;
                    Driver = myInv.RentDriver;
                }

                CostCenter CarMoveArea = new CostCenter();
                CarMoveArea.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), CarMoveArea.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                CarMoveArea.Code = myInv.VouLoc;
                CarMoveArea = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                               where citm.Code == CarMoveArea.Code
                               select citm).FirstOrDefault();
                if (CarMoveArea == null) return;

                string Number = MyNumber.ToString();
                string Branch = "/" + short.Parse(AreaNo).ToString();
                string From2 = FromCity.Name1;
                string To2 = ToCity.Name1;
                string Hdate = HDate.RotateDate2(myInv.HDate) + " هـ ";
                string GDate = myInv.GDate + " م " + myInv.FTime;
                List<myInv2> lstCar = new List<myInv2>();
                lstCar = myInv.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4.Rotate(), -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage1 page = new pdfPage1();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                page.vStr4 = CarMoveArea.Name1;
                //-------------------------------------------------------------------------------------------                    
                document.Open();
                //-------------------------------------------------------------------------------------------                    

                //string arialunicodepath = Server.MapPath("Fonts") + @"\arial.ttf";
                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont9 = new iTextSharp.text.Font(nationalBase, 9f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------                    
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------                    
                var cols = new[] { 200, 200, 150, 250, 400 };
                document.Open();
                PdfPTable table = new PdfPTable(5);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);

                PdfPCell Mycell = new PdfPCell();
                Mycell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                Mycell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                Mycell.FixedHeight = 20f;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell22 = new PdfPCell();
                cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;


                cell2.Border = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell2);

                cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell2.Phrase = new iTextSharp.text.Phrase(" بيان ترحيل رقم ", nationalTextFont16);
                table.AddCell(cell2);

                cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell22.Phrase = new iTextSharp.text.Phrase(Number + Branch, nationalTextFont16);
                table.AddCell(cell22);

                cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell2);


                var TextCell = new PdfPCell(table.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = Branch + Number;
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table.AddCell(TextCell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                cols = new[] { 400, 120, 210, 120, 170, 120 };
                table = new PdfPTable(6);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.FixedHeight = 20f;

                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242); //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("من", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(From2, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("إلى", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(To2, nationalTextFont2);                
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الشاحنة", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(Car + " نقل السعودية ", nationalTextFont2);
                table.AddCell(cell);
                //
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(Hdate, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الموافق", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(GDate, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);    // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("السائق", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(Driver, nationalTextFont2);
                table.AddCell(cell);
                //
                if ((bool)myInv.Rent)
                {
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("رقم الجوال", nationalTextFont2);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(myInv.RentMobileNo, nationalTextFont2);
                    table.AddCell(cell);

                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("مبلغ الايجار", nationalTextFont2);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    //cell.Phrase = new iTextSharp.text.Phrase(myInv.RentValue.ToString(), nationalTextFont2);
                    cell.Phrase = new iTextSharp.text.Phrase("حسب الأتفاق", nationalTextFont2);
                    table.AddCell(cell);

                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);    // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("وصف الشحنة", nationalTextFont2);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont2);
                }
                table.AddCell(cell);
                document.Add(table);

                cols = new[] { 1020, 120 };
                table = new PdfPTable(2);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.FixedHeight = 20f;
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("المرفقات", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase(myInv.Remark, nationalTextFont2);
                table.AddCell(cell);
                document.Add(table);

                //-------------------------------------------------------------------------------------------
                // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                bool vClient = false;
                string vClientName = "-1";

                    int ColCount = 9;
                    cols = new[] { 200, 175, 250, 150, 150, 150, 120, 250, 50 };
                    table = new PdfPTable(ColCount);
                    table.TotalWidth = document.PageSize.Width; //100f;
                    table.SetWidths(cols);
                    cell = new PdfPCell();
                    cell.FixedHeight = 20f;
                    cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    //cell.Border = 0;
                    cell.Phrase = new iTextSharp.text.Phrase("م", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("مرسل السيارة", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("رقم الفاتورة", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("نوع السيارة", nationalTextFont);
                    table.AddCell(cell);

                    //cell.Phrase = new iTextSharp.text.Phrase("رقم اللوحة أو الهيكل", nationalTextFont);
                    cell.Phrase = new iTextSharp.text.Phrase("رقم اللوحة", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("الموديل و اللون", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("أسم مستلم السيارة", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("جهة الترحيل", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("ملاحظات", nationalTextFont);
                    table.AddCell(cell);

                    //-------------------------------------------------------------------------------------------
                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    int FNo = 1;
                    if (lstCar != null && lstCar.Count > 0)
                    {
                        foreach (myInv2 inv in lstCar)
                        {

                            cell.Phrase = new iTextSharp.text.Phrase(FNo.ToString(), nationalTextFont);
                            table.AddCell(cell);
                            if (vClientName == "-1") vClientName = inv.Name;
                            else if (vClientName != inv.Name) vClient = false;
                            cell.Phrase = new iTextSharp.text.Phrase(inv.Name, nationalTextFont);
                            table.AddCell(cell);
                            // Arabic  (char)0x202B;
                            // English  (char)0x202A;
                            cell.Phrase = new iTextSharp.text.Phrase((char)0x202A + inv.Flag + (char)0x202A + int.Parse(inv.InvoiceVouLoc).ToString() + (char)0x202A + '/' + (char)0x202A + inv.VouNo.ToString() + (char)0x202A, nationalTextFont);
                            table.AddCell(cell);

                            cell.Phrase = new iTextSharp.text.Phrase(inv.CarType, nationalTextFont);
                            table.AddCell(cell);

                            if (inv.PlateNo != "") cell.Phrase = new iTextSharp.text.Phrase(inv.PlateNo, nationalTextFont);
                            else cell.Phrase = new iTextSharp.text.Phrase(inv.ChassisNo, nationalTextFont);
                            table.AddCell(cell);

                            cell.Phrase = new iTextSharp.text.Phrase(inv.Model + " " + inv.Color, nationalTextFont);
                            table.AddCell(cell);

                            cell.Phrase = new iTextSharp.text.Phrase(inv.RecName, nationalTextFont);
                            table.AddCell(cell);

                            cell.Phrase = new iTextSharp.text.Phrase(inv.DestinationName1, nationalTextFont);
                            table.AddCell(cell);

                            cell.Phrase = new iTextSharp.text.Phrase("    ", nationalTextFont);
                            table.AddCell(cell);
                            FNo++;
                        }
                    }
                    cell.Border = 0;
                    cell.Phrase = new iTextSharp.text.Phrase("    ", nationalTextFont);
                    table.AddCell(cell);
                    table.AddCell(cell);
                    table.AddCell(cell);
                    table.AddCell(cell);
                    table.AddCell(cell);
                    table.AddCell(cell);
                    table.AddCell(cell);
                    table.AddCell(cell);
                    document.Add(table);
                    //document.Add(Environment.NewLine);
                    //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                    //-------------------------------------------------------------------------------------------
                    string vs = "\nأقر أنا السائق / " + Driver + " هوية رقم ";
                    vs += IqamaNo + " على كفالة " + Sponsor + "أنني أستلمت السيارات الموضحة أعلاه.";
                    if (vClient) vs += "وعددها " + (FNo - 1).ToString() + " سليمة و مسئول عنها و عن محتوياتها حتى يتم تسليمها إلى العميل/ " + vClientName + " وعلى ذلك أوقع. ";
                    else vs += "وعددها " + (FNo - 1).ToString() + " سليمة و مسئول عنها و عن محتوياتها حتى يتم تسليمها إلى /  " + To2 + " وعلى ذلك أوقع. ";
                    table = new PdfPTable(3);
                    table.TotalWidth = document.PageSize.Width; //100f;
                    cols = new[] { 500, 300, 500 };
                    table.SetWidths(cols);
                    table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell = new PdfPCell();
                    cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell.Border = 0;
                    cell.Phrase = new iTextSharp.text.Phrase(vs, nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont2);
                    table.AddCell(cell);

                    if (vClient) vs = "\nأقر أنا المستلم/" + vClientName + " بأنني أستلمت السيارات الموضحة بعالية كماهي مثبتة بالفواتير أو بالملاحظات المثبتة بأعلاه ";
                    else vs = "\nأقر أنا المستلم (موظف الفرع) /                                 بأنني أستلمت السيارات الموضحة بعالية كماهي مثبتة بالفواتير أو بالملاحظات المثبتة بأعلاه ";
                    cell.Phrase = new iTextSharp.text.Phrase(vs, nationalTextFont2);
                    table.AddCell(cell);

                    document.Add(table);

                //  document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                table = new PdfPTable(7);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cols = new[] { 125, 300, 75, 300, 100, 300, 100 };
                table.SetWidths(cols);

                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("السائق :", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("المرسل : (موظف الفرع)", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                if (vClient) cell.Phrase = new iTextSharp.text.Phrase("المرسل إليه : (العميل)", nationalTextFont2);
                else cell.Phrase = new iTextSharp.text.Phrase("المرسل إليه : (موظف الفرع)", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الاســم : " + Driver, nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الاســم : " + page.UserName, nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                if (vClient) cell.Phrase = new iTextSharp.text.Phrase("الاســم : " + vClientName, nationalTextFont2);
                else cell.Phrase = new iTextSharp.text.Phrase("الاســم : ", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التوقيع : ", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التوقيع : ", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التوقيع : ", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                //-------------------------------------------------------------------------------------------
                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage1 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";

                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\DTNASKH1.TTF";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 300, 450, 350 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);


                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 2 Print of CarMoveRCV
        public void PrintCarMoveRCV(int MyNumber)
        {
            try
            {

            }
            catch (Exception)
            {
            }
        }
        #endregion

        #region 3 Print of CarRCV
        public void PrintCarRCV(int MyNumber)
        {
            try
            {
                List<CarRcv> lJv = new List<CarRcv>();
                List<CarRcv> VouData = new List<CarRcv>();
                CarRcv myJv = new CarRcv();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.LocNumber = short.Parse(AreaNo);
                myJv.Number = MyNumber;
                lJv = myJv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (lJv == null || lJv.Count == 0)
                {
                    return;
                }
                else
                {
                    for (int i = 0; i < lJv.Count(); i++)
                    {
                        if (lJv[i].InvNo[0] == 'L')
                        {
                            string InvNo = lJv[i].InvNo.Substring(1, lJv[i].InvNo.Length - 1);
                            LShipment myInv = new LShipment();
                            myInv.Branch = short.Parse(Session["Branch"].ToString());
                            myInv.VouLoc = moh.MakeMask(InvNo.Split('/')[0], 5);
                            myInv.VouNo = int.Parse(InvNo.Split('/')[1]);
                            myInv = myInv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                            ShipDetails Inv = new ShipDetails();
                            Inv.Branch = short.Parse(Session["Branch"].ToString());
                            Inv.VouLoc = moh.MakeMask(InvNo.Split('/')[0], 5);
                            Inv.VouNo = int.Parse(InvNo.Split('/')[1]);
                            Inv.FNo = (short)lJv[i].InvFNo;
                            Inv = Inv.GetFNo(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                            if (myInv != null && Inv != null)
                            {
                                Cities myCity = new Cities();
                                myCity.Branch = short.Parse(Session["Branch"].ToString());
                                myCity.Code = myInv.Destination;
                                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                          where sitm.Code == myCity.Code
                                          select sitm).FirstOrDefault();
                                if (myCity != null)
                                {
                                    VouData.Add(new CarRcv { FNo = (short)(VouData.Count() + 1), InvNo = lJv[i].InvNo, Name = myInv.Name, PlateNo = Inv.Name, Destination = myInv.Destination, DestinationName1 = myCity.Name1, DestinationName2 = myCity.Name2 });
                                }
                            }
                        }
                        else if (lJv[i].InvNo[0] == 'E')
                        {
                            string InvNo = lJv[i].InvNo.Substring(1, lJv[i].InvNo.Length - 1);
                            Shipment myInv = new Shipment();
                            myInv.Branch = short.Parse(Session["Branch"].ToString());
                            myInv.VouLoc = moh.MakeMask(InvNo.Split('/')[0], 5);
                            myInv.VouNo = int.Parse(InvNo.Split('/')[1]);
                            myInv = myInv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                            if (myInv != null)
                            {
                                Cities myCity = new Cities();
                                myCity.Branch = short.Parse(Session["Branch"].ToString());
                                myCity.Code = myInv.Destination;
                                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                          where sitm.Code == myCity.Code
                                          select sitm).FirstOrDefault();
                                if (myCity != null)
                                {
                                    VouData.Add(new CarRcv { FNo = (short)(VouData.Count() + 1), InvNo = lJv[i].InvNo, Name = myInv.Name, PlateNo = "مغلف", Destination = myInv.Destination, DestinationName1 = myCity.Name1, DestinationName2 = myCity.Name2 });
                                }
                            }
                        }
                        else
                        {
                            Invoice myInv = new Invoice();
                            myInv.Branch = short.Parse(Session["Branch"].ToString());
                            myInv.VouLoc = moh.MakeMask(lJv[i].InvNo.Split('/')[0], 5);
                            myInv.VouNo = int.Parse(lJv[i].InvNo.Split('/')[1]);
                            myInv = myInv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                            InvDetails Inv = new InvDetails();
                            Inv.Branch = short.Parse(Session["Branch"].ToString());
                            Inv.VouLoc = moh.MakeMask(lJv[i].InvNo.Split('/')[0], 5);
                            Inv.VouNo = int.Parse(lJv[i].InvNo.Split('/')[1]);
                            Inv.FNo = (short)lJv[i].InvFNo;
                            Inv = Inv.GetFNo(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                            if (myInv != null && Inv != null)
                            {
                                Cities myCity = new Cities();
                                myCity.Branch = short.Parse(Session["Branch"].ToString());
                                myCity.Code = myInv.Destination;
                                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                          where sitm.Code == myCity.Code
                                          select sitm).FirstOrDefault();
                                if (myCity != null)
                                {
                                    VouData.Add(new CarRcv { FNo = (short)(VouData.Count() + 1), InvNo = lJv[i].InvNo, Name = myInv.Name, PlateNo = Inv.PlateNo, Destination = myInv.Destination, DestinationName1 = myCity.Name1, DestinationName2 = myCity.Name2 });
                                }
                            }
                        }
                    }
                }
                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage3 page = new pdfPage3();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.vStr1 = "سند أستلام";
                page.vStr2 = "";

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                page.vStr3 = Session["AreaName"].ToString();
                //page.vStr4 = ((Label)this.Master.FindControl("LblBranchName")).Text;
                int ColCount = 5;
                var cols = new[] { 125, 100, 100, 200, 200 };

                document.Open();

                PdfPTable table10 = new PdfPTable(ColCount);
                table10.TotalWidth = document.PageSize.Width; //100f;
                table10.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.Border = 0;
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table10.AddCell(cell);

                cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell.Phrase = new iTextSharp.text.Phrase(" سند أستلام سيارة رقم ", nationalTextFont16);
                table10.AddCell(cell);

                PdfPCell cell22 = new PdfPCell();
                cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell22.Phrase = new iTextSharp.text.Phrase(lJv[0].Number.ToString() + "/" + lJv[0].LocNumber.ToString(), nationalTextFont16);
                table10.AddCell(cell22);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table10.AddCell(cell);

                var TextCell = new PdfPCell(table10.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = lJv[0].LocNumber.ToString() + "/" + lJv[0].Number.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table10.AddCell(TextCell);
                document.Add(table10);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------

                ColCount = 4;
                cols = new[] { 275, 125, 280, 120 };
                PdfPTable table11 = new PdfPTable(ColCount);
                table11.TotalWidth = document.PageSize.Width; //100f;
                table11.SetWidths(cols);
                cell = new PdfPCell();
                cell.Border = 0;
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table11.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table11.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                cell.Phrase = new iTextSharp.text.Phrase("التاريخ:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(lJv[0].GDate, nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("وقت التسليم:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(lJv[0].GTime, nationalTextFont);   // (ChkDeleteInv.Checked ? "              الغاء فاتورة" : "")
                table11.AddCell(cell);

                //
                cell.Phrase = new iTextSharp.text.Phrase("اسم المستلم:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(lJv[0].Customer, nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("ملاحظات:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(lJv[0].Remark, nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);
                table11.AddCell(cell);
                table11.AddCell(cell);
                table11.AddCell(cell);
                document.Add(table11);

                cols = new[] { 150, 250, 120, 120, 50 };
                PdfPTable table = new PdfPTable(5);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.FixedHeight = 20f;
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);   // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("م", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("رقم الفاتورة", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("رقم اللوحة", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("العميل", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("جهة الترحيل", nationalTextFont);
                table.AddCell(cell);
                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                if (VouData.Count() > 0)
                {
                    foreach (CarRcv itm in VouData)
                    {
                        cell.Phrase = new iTextSharp.text.Phrase(itm.FNo.ToString(), nationalTextFont);
                        table.AddCell(cell);

                        // Arabic  (char)0x202B;
                        // English  (char)0x202A;
                        if (itm.InvNo.Substring(0, 1) == "L" || itm.InvNo.Substring(0, 1) == "E") cell.Phrase = new iTextSharp.text.Phrase((char)0x202A + itm.InvNo.Substring(0, 1) + (char)0x202A + itm.InvNo.Substring(1, itm.InvNo.Length - 1).Split('/')[0] + (char)0x202A + '/' + (char)0x202A + itm.InvNo.Substring(1, itm.InvNo.Length - 1).Split('/')[1] + (char)0x202A, nationalTextFont);
                        else cell.Phrase = new iTextSharp.text.Phrase((char)0x202A + itm.InvNo.Split('/')[0] + (char)0x202A + '/' + (char)0x202A + itm.InvNo.Split('/')[1] + (char)0x202A, nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(itm.PlateNo, nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(itm.Name, nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(itm.DestinationName1, nationalTextFont);
                        table.AddCell(cell);
                    }
                }
                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("    ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                document.Add(table);

                table = new PdfPTable(2);
                table.TotalWidth = 100f;
                cell = new PdfPCell();
                var cols5 = new[] { 400, 400 };
                table.SetWidths(cols5);
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("أستلمت انا الموقع أدناه السياره بحالتها الراهنه دون أدنى مسئولية على الناقل.", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("    ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);

                PdfPTable table50 = new PdfPTable(5);
                table50.TotalWidth = 100f;
                PdfPCell cell5 = new PdfPCell();
                cols5 = new[] { 150, 150, 150, 150, 150 };
                table50.SetWidths(cols5);
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table50.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("المستلم", nationalTextFont14);
                cell5.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("إدخلت بواسطة", nationalTextFont14);
                cell5.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(lJv[0].Customer, nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                string UserName = "";
                TblUsers ax = new TblUsers();
                if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                ax.UserName = lJv[0].UserName;
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax != null)
                {
                    UserName = ax.FName;
                }

                cell5.Phrase = new iTextSharp.text.Phrase(UserName, nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);


                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 2;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 2;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                //
                for (int i = 0; i < 2; i++)
                {
                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);
                }

                document.Add(table50);
                document.Add(new iTextSharp.text.pdf.draw.LineSeparator());
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                document.Close();
            }
            catch (Exception)
            {
            }
        }

        public class pdfPage3 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 225, 450, 350 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                vStr1 = " ";
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                //cell.PaddingRight = 5;
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);

                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }

        #endregion

        #region 4 Print of Back of Invoice
        public void PrintInvBack()
        {
            try
            {
                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 40, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage4 page = new pdfPage4();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                int ColCount = 3;
                var cols = new[] { 28, 350, 322 };
                document.Open();
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 10.5f, iTextSharp.text.Font.NORMAL);
                cell.Border = 0;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("شروط النقل البري", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("LAND TRANSIT CONDITIONS", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("1- تعنى العبارة (المقاول) و (الناقل) في هذه الشروط – مؤسسة الناقلات البرية العربية – أو و كلائه وأي شخص أو أشخاص يقومون بنقل السيارات بموجب عقد من الباطن مع المقاول", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("In these Land Transit Condition the 'Contractor' or 'Transporter' means Arab Land Transporters Est. And includes the servants. Agents and any person or persons effecting the transport of vehicles for Contractor and/or under a sub-contract with the Contractor", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[1]", nationalTextFont);
                table.AddCell(cell);


                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("2- شروط النقل هذه جزء لا يتحزأ من مستندات العقد المبرم مع العميل – ووثيقة رسمية لا يحق لأي شخص تعديل أي منها في أي وجه من الأوجه إلا بموجب أتفاق مستبق وتفويضاً صريحاً بذلك من المقاول", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("These Land Transit Conditions are part of the Contract documents. Witch are executed with the customer. Therefore no one will have any authority to vary these conditions in any way unless he is expressly authorized to do so by the contractor", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[2]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("3- يجب على العميل التأكد من صحة كافة البيانات المعبأة من قبله أو من يمثله والموضحة في هذه الاتفاقية وإذا اتضح عدم صحة أي من هذه البيانات فإن العميل سيتحمل كافة ما ينتج عن ذلك.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("It is the customer's responsibility to make sure of the required relevant information that he or his representative should fill out on the cover side of this contract, if any given information are wrong customer is responsible for consequence", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[3]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("4- تقتصر مسؤولية المقاول إزاء العميل عن ضرر سيارته / سياراته على المسؤولية التي تغطيها بوليصة التأمين ولا يكون الناقل مسؤولاً عن الأضرار غير المباشرة أو المترتبة عن الخسائر والأضرار الناتجة عن تعرض السيارة للأعطال الميكانيكية و الكهربائية أو كسر بالزجاج أو أي أضرار أخرى ناتجة بسبب حادث مروري قبل استلام السيارة من قبل الناقل ، كما لا يتحمل الناقل أي مسؤولية تجاه تلف أو فقدان الأمتعة الشخصية داخل السيارة.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The Contractor's liability to the customer for damage or loss of his vehicle/vehicles shall be limited to that covered by the Contractor's  Land Transit Insurance policy. The Contractor shall not be limited to that covered by the Contract's land Transit Insurance police. The Contractor shall not be liable forindirect  or consequential damage to the vehicle/vehicles; or  loss or damage happen Electro-Mechanical work or break down of grass or any other damage due to traffic accident before receiving the vehicle by Transporter. Also the Transporter is not liable for the loss or damage to the personal effects or luggage inside the vehicle", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[4]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("5- على المقاول أن يبذل كل جهد معقول لضمان توريد السيارة / السيارات بأمان إلى العنوان الموضح على وجه هذه الاتفاقية وتسليمها إلى العميل أو من ينوب عنه.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The Contractor  shall  make reasonable effect to see that the vehicle/vehicles are safely delivered at the address indicated on the cover side of this contract  to an apparently member of the consignee's staff", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[5]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("6- الناقل غير مسؤول عن أي أضرار للسيارة بعد استلام العميل لها أو من ينوب عنه وتقتصر مسؤولية الناقل في الفترة من تاريخ الاستلام إلى تاريخ التسليم.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The Contractor shall  not be liable  for any damage or loss to the vehicle after receipt by customer or his representative. The Transporter liability towards vehicle/vehicles are only limited during the period from the date of received to the time of delivery", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[6]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("7- يلتزم العميل باستلام سيارته أو من ينوب عنه مباشرة في موقع التسليم للمقاول والمدن في هذه الاتفاقية وفي مدة أقصاها سبعة أيام من تاريخ وصول السيارة وبعد هذا التاريخ مباشرة يلتزم العميل بدفع مبلغ وقدره (10) ريالات رسوم أرضية عن كل يوم تأخير.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The costumer is obliged to receive his vehicle from Contractor's place of delivery mentioned in this contract within seven days of arrived .After passing this date the costumer has to pay demurrage charges SR: 10 per each day", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[7]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("8- يمنع منعاً باتاً وضع أي مواد قالبة للاشتعال أو أسلحة غير مرخصة أو أي ممنوعات أخرى يحظر تداولها طبقاً للأنظمة المعمول بها في المملكة العربية السعودية داخل السيارة المنقولة ويتحمل العميل كامل المسؤولية تجاه ما يترتب على ذلك ، كما أنه الناقل غير مسؤول عن ترك أي أشياء ثمينة من قبل العميل داخل السيارة عند نقلها.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("It is totally prohibited to place inside the transported vehicle any inflammable item or arms without license or any other forbidden goods according  to the law of Kingdom  of Saudi Arabia and the customer shall be fully responsible for violating this act. Also the Transporter is not responsible for any valuable things left out by customer in the vehicle", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[8]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("9- تدفع رسوم النقل الخاصة بالمقابل بواسطة العميل دون أن يؤثر ذلك على حقوق المقاول ضد المرسل أو المرسل إليه أو أي شخص أخر ويجب ألا يؤخذ أي أدعاء كمبرر لتأخير أو احتجاز مدفوعات مستحقة للمقاول أو مسؤوليات يتكبدها المقاول.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The Contractor 's charge shall by  payable by the customer without prejudice to the Contractor 's right against the consignor, consignee or any other person. A claim or counterclaim shall not be made the reason for deferring or withholding payment of money or liabilities owing to the Contractor", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[9]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("10- على العميل أن يبري ذمة المقاول ويحميه ضد كل الدعاوي والتكاليف والمطالبات التي تقدم من أي جهة كانت و تتجاوز قيمتها المسؤوليات القانونية للمقاول وفقاً لأحكام هذه الشروط", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The customer shall save harmless and keep the Contractor indemnified from and against all claim, cost and demands by whosoever made or preferred in excess of the legal liabilities of the Contractor under the terms of these conditions", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[10]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("11- في حالة الغاء اتفاقية الشحن يلتزم العميل بسداد مبلغ 50 ريال مصاريف أدارية", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("In case of cancellation shipping invoice customer shall pay an amount of SR 50 administrative expenses", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[11]", nationalTextFont); 
                table.AddCell(cell);


                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("12- في حال مضى على تاريخ اصدار فاتوره الذهاب والعوده 3 شهور يتحمل العميل ٢٥٪(رسوم اداريه)من اجمالي قيمة الشحن عند العوده بالاضافه الى قيمة مصاريف الشحن الاساسية وذلك بدون سابق اشعار ", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("If the Go and Return invoice date of issuance has passed three       25% months The customer will bear administrative fees of the total value of shipping upon return in addition to the value of the basic shipping charges without prior notice", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[12]", nationalTextFont);
                table.AddCell(cell);


                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("13- في حال مضى على تاريخ اصدار فاتوره الذهاب والعوده ٦ شهور  تلغى الفاتوره نهائيا ولا يحق للعميل استبدالها او استرجاع قيمتها او جزء من قيمتها وذلك بدون سابق اشعار ", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("If the Go and Return invoice date of issuance has passed six months Invoice is expired and gone the customer is not entitled to replace it or refund it or part of its value without prior notice", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[13]", nationalTextFont);
                table.AddCell(cell);


                document.Add(table);

                document.Close();
            }
            catch (Exception)
            {

            }
        }

        public class pdfPage4 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                /*
                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 300, 600, 300 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document

                
                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
                 */
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                //cell.PaddingRight = 5;
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }

        #endregion

        #region 5 Print of Invoice
        public void PrintInv(int MyNumber)
        {
            try
            {
                bool vPrices = true;

                if (Request.QueryString["Prices"] != null)
                {
                    vPrices = (Request.QueryString["Prices"].ToString() == "1");
                }

                Invoice myInv = new Invoice();
                myInv.Branch = short.Parse(Session["Branch"].ToString());
                myInv.VouLoc = AreaNo;
                myInv.VouNo = MyNumber;
                myInv = myInv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myInv == null) return;

               
                InvDetails sinv = new InvDetails();
                sinv.Branch = short.Parse(Session["Branch"].ToString());
                sinv.VouLoc = AreaNo;
                sinv.VouNo = MyNumber;
                List<InvDetails> VouData = new List<InvDetails>();
                VouData = sinv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 68, 23);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage5 page = new pdfPage5();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.Customer = myInv.Customer;
                page.UserName = Session["FullUser"].ToString();
                page.vStr4 = SiteInfo.Name1;                    //((Label)this.Master.FindControl("LblBranchName")).Text;    //Session["AreaName"].ToString();
                page.vStr2 = "/" + short.Parse(AreaNo).ToString();
                page.vStr3 = MyNumber.ToString();
                page.vStr5 = AreaNo;
                page.vStr6 = myInv.GDate;
                page.vOnLine = "";
                if (Request.QueryString["OnLine"] != null) page.vOnLine = Request.QueryString["OnLine"].ToString();

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont6 = new iTextSharp.text.Font(nationalBase, 6f, iTextSharp.text.Font.NORMAL); 
                iTextSharp.text.Font nationalTextFont8 = new iTextSharp.text.Font(nationalBase, 8f, iTextSharp.text.Font.NORMAL); 
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont12 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------
                document.Open();
                //-------------------------------------------------------------------------------------------

                int ColCount = 3;
                var cols = new[] { 80, 550, 70 };
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                table.AddCell(cell);

                PdfPTable TblInside = new PdfPTable(3);
                var colsInside = new[] { 100, 340, 100 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                PdfPCell cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                PdfPCell cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase(HDate.RotateDate2(myInv.HDate) + " هـ ", nationalTextFont);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                if (myInv.VouType == 0)
                {
                    cell0.Phrase = new iTextSharp.text.Phrase("ذهاب", nationalTextFont12);
                    TblInside.AddCell(cell0);
                }
                else
                {
                    cell0.Phrase = new iTextSharp.text.Phrase("ذهاب و عوده", nationalTextFont12);
                    TblInside.AddCell(cell0);
                }

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.GDate + " م ", nationalTextFont);
                TblInside.AddCell(cell0);

                table.AddCell(cellInside);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Date", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);     // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n\r\n" + "بيانات المرسل و المرسل إليه", nationalTextFont);
                table.AddCell(cell);

                TblInside = new PdfPTable(3);
                colsInside = new[] { 140, 300, 100 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("الاســم:", nationalTextFont);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Name, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consigner Name", nationalTextFont2);
                TblInside.AddCell(cell0);

                if (myInv.IDNo.Length > 14)
                {
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase("الرقم الضريبي:", nationalTextFont);
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.IDNo, nationalTextFont);
                    TblInside.AddCell(cell0);
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell0.Phrase = new iTextSharp.text.Phrase("VAT#", nationalTextFont2);
                    TblInside.AddCell(cell0);
                }
                else
                {
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase("رقم الهوية:", nationalTextFont);
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.IDNo + " " + (myInv.IDType == 0 ? "هوية" : "بطاقة"), nationalTextFont);
                    TblInside.AddCell(cell0);
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell0.Phrase = new iTextSharp.text.Phrase("I.D.No./Iqama", nationalTextFont2);
                    TblInside.AddCell(cell0);
                }

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مصدرها/تاريخها:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.IDFrom + "   " + myInv.IDDate, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Place of Issue/Date", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("العنوان:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Address + (myInv.MobileNo != "" ? " جوال رقم " + myInv.MobileNo : ""), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Address", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مكان الشحن:", nationalTextFont);
                TblInside.AddCell(cell0);

                string City = "";
                Cities myCity = new Cities();
                myCity.Branch = short.Parse(Session["Branch"].ToString());
                myCity.Code = myInv.PlaceofLoading;
                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                          where sitm.Code == myCity.Code
                          select sitm).FirstOrDefault();
                if (myCity != null) City = myCity.Name1;

                cell0.Phrase = new iTextSharp.text.Phrase(City, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Place of Loading", nationalTextFont2);
                TblInside.AddCell(cell0);

                City = "";
                myCity = new Cities();
                myCity.Branch = short.Parse(Session["Branch"].ToString());
                myCity.Code = myInv.Destination;
                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                          where sitm.Code == myCity.Code
                          select sitm).FirstOrDefault();
                if (myCity != null) City = myCity.Name1;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("جهه الترحيل:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(City, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Destination", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("أسم المستلم:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.RecName, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consignee Name", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("عنوان المستلم:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.RecAddress + (myInv.RecMobileNo != "" ? " جوال رقم " + myInv.RecMobileNo : ""), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consignee Address", nationalTextFont2);
                TblInside.AddCell(cell0);


                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مدة التسليم:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(" خلال " + moh.DaysToString[(int)myInv.DPeriod], nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Delivery Period", nationalTextFont2);
                TblInside.AddCell(cell0);

                table.AddCell(cellInside);


                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n\r\n" + "Consigner and Consignee Information", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n" + "بيانات السيارة المرسلة", nationalTextFont);
                table.AddCell(cell);

                TblInside = new PdfPTable(7);
                colsInside = new[] { 60, 60, 100, 70, 80, 100, 80 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cellInside.PaddingRight = 0;


                PdfPCell cell1 = new PdfPCell();
                cell1.FixedHeight = 15f;
                //cell1.Border = 0;
                cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell0 = new PdfPCell();
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.FixedHeight = 15f;
                //cell0.Border = 0;
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("نوع السيارة", nationalTextFont);
                cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("الطراز", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("الموديل", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("رقم اللوحة", nationalTextFont);
                TblInside.AddCell(cell0);

                if (myInv.IDNo.Length > 14)
                {
                    if (!vPrices)
                    {
                        cell0.Phrase = new iTextSharp.text.Phrase("رقم الهيكل", nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("اللون", nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("أخرى", nationalTextFont);
                        TblInside.AddCell(cell0);
                    }
                    else if (moh.doTax(myInv.GDate, myInv.Customer))
                    {
                        cell0.Phrase = new iTextSharp.text.Phrase("السعر", nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase(moh.doTax(myInv.GDate,1), nationalTextFont8);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("سعر شامل الضريبة", nationalTextFont6);
                        TblInside.AddCell(cell0);
                    }
                    else
                    {
                        cell0.Phrase = new iTextSharp.text.Phrase("رقم الهيكل", nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("اللون", nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("السعر", nationalTextFont);
                        TblInside.AddCell(cell0);
                    }
                }
                else
                {
                    cell0.Phrase = new iTextSharp.text.Phrase("رقم الهيكل", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("اللون", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase((vPrices ? "السعر" : "أخرى"), nationalTextFont);
                    TblInside.AddCell(cell0);
                }

                cell0.Phrase = new iTextSharp.text.Phrase("Brand Name", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Type", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Model", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Plate No.", nationalTextFont2);
                TblInside.AddCell(cell0);

                if (myInv.IDNo.Length > 14)
                {
                    if (!vPrices)
                    {
                        cell0.Phrase = new iTextSharp.text.Phrase("Chassis No.", nationalTextFont2);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("Color", nationalTextFont2);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("Other", nationalTextFont2);
                        TblInside.AddCell(cell0);

                    }
                    else if (moh.doTax(myInv.GDate, myInv.Customer))
                    {
                        cell0.Phrase = new iTextSharp.text.Phrase("Price", nationalTextFont2);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase(moh.doTax(myInv.GDate, 2), nationalTextFont2);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("Price + VAT", nationalTextFont8);
                        TblInside.AddCell(cell0);
                    }
                    else
                    {
                        cell0.Phrase = new iTextSharp.text.Phrase("Chassis No.", nationalTextFont2);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("Color", nationalTextFont2);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("Price", nationalTextFont2);
                        TblInside.AddCell(cell0);
                    }
                }
                else
                {
                    cell0.Phrase = new iTextSharp.text.Phrase("Chassis No.", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Color", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase((vPrices ? "Price" : "Other"), nationalTextFont2);
                    TblInside.AddCell(cell0);
                }

                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell1.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                double Total = 0;
                foreach (InvDetails itm in VouData)
                {
                    string CarType = "";
                    CarType myCarType = new CarType();
                    myCarType.Branch = short.Parse(Session["Branch"].ToString());
                    myCarType.Code = itm.CarType;
                    myCarType = myCarType.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (myCarType != null) CarType = myCarType.Name1;

                    cell0.Phrase = new iTextSharp.text.Phrase(CarType, nationalTextFont2);
                    TblInside.AddCell(cell0);

                    CarType = "";
                    myCarType = new CarType();
                    myCarType.Branch = short.Parse(Session["Branch"].ToString());
                    myCarType.Code = itm.Model;
                    myCarType = myCarType.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (myCarType != null) CarType = myCarType.Name1;

                    cell0.Phrase = new iTextSharp.text.Phrase(CarType, nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(itm.Brand, nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell1.Phrase = new iTextSharp.text.Phrase((itm.ChassisNo.Trim() != "" ? itm.ChassisNo : itm.PlateNo), nationalTextFont8);
                    TblInside.AddCell(cell1);

                    if (!vPrices)
                    {
                        cell1.Phrase = new iTextSharp.text.Phrase(itm.ChassisNo, nationalTextFont2);
                        TblInside.AddCell(cell1);

                        cell0.Phrase = new iTextSharp.text.Phrase(itm.Color, nationalTextFont2);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("---", nationalTextFont2);
                        TblInside.AddCell(cell0);
                    }
                    else if (myInv.IDNo.Length > 14)
                    {
                        if (moh.doTax(myInv.GDate, myInv.Customer))
                        {
                            cell0.Phrase = new iTextSharp.text.Phrase(itm.Price.ToString(), nationalTextFont2);
                            TblInside.AddCell(cell0);

                            cell0.Phrase = new iTextSharp.text.Phrase((itm.Price * moh.doTax(myInv.GDate)).ToString(), nationalTextFont2);
                            TblInside.AddCell(cell0);

                            cell0.Phrase = new iTextSharp.text.Phrase((itm.Price * (1+moh.doTax(myInv.GDate))).ToString(), nationalTextFont2);
                            TblInside.AddCell(cell0);
                        }
                        else
                        {
                            cell1.Phrase = new iTextSharp.text.Phrase(itm.ChassisNo, nationalTextFont2);
                            TblInside.AddCell(cell1);

                            cell0.Phrase = new iTextSharp.text.Phrase(itm.Color, nationalTextFont2);
                            TblInside.AddCell(cell0);

                            cell0.Phrase = new iTextSharp.text.Phrase(itm.Price.ToString(), nationalTextFont2);
                            TblInside.AddCell(cell0);
                        }
                    }
                    else
                    {
                        cell1.Phrase = new iTextSharp.text.Phrase(itm.ChassisNo, nationalTextFont2);
                        TblInside.AddCell(cell1);

                        cell0.Phrase = new iTextSharp.text.Phrase(itm.Color, nationalTextFont2);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase((vPrices ? itm.Price.ToString() : "---"), nationalTextFont2);
                        TblInside.AddCell(cell0);
                    }
                    Total += (double)itm.Price;
                }

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("عدد السيارات", nationalTextFont);
                cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Qty.ToString(), nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Total of Cars", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Colspan = 2;
                cell0.Phrase = new iTextSharp.text.Phrase((vPrices ? "اجمالي أجور الشحن" : " "), nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Colspan = 1;
                cell0.Phrase = new iTextSharp.text.Phrase((vPrices ? "Amount" : " "), nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase((vPrices ? Total.ToString() : " "), nationalTextFont);
                TblInside.AddCell(cell0);

                //-------------------------------------------------------------------------------------------------------------------
                if (vPrices)
                {
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell0.Phrase = new iTextSharp.text.Phrase("نوع الخصم", nationalTextFont);
                    cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.DiscountTerm, nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Term", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 2;
                    cell0.Phrase = new iTextSharp.text.Phrase("الخصم", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 1;
                    cell0.Phrase = new iTextSharp.text.Phrase("Discount", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Discount.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    //-------------------------------------------------------------------------------------------------------------------
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 2;
                    if (moh.doTax(myInv.GDate, myInv.Customer)) cell0.Phrase = new iTextSharp.text.Phrase("الاجمالي قبل الضريبة", nationalTextFont);
                    else cell0.Phrase = new iTextSharp.text.Phrase("الصافي", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 1;
                    cell0.Phrase = new iTextSharp.text.Phrase("Net", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase((Total - myInv.Discount).ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);
                    //-------------------------------------------------------------------------------------------------------------------
                    if (moh.doTax(myInv.GDate, myInv.Customer))
                    {
                        cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell0.Phrase = new iTextSharp.text.Phrase("اجمالي " + moh.doTax(myInv.GDate,1), nationalTextFont8);
                        cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase(myInv.Tax.ToString(), nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase("T." + moh.doTax(myInv.GDate,2), nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Colspan = 2;
                        cell0.Phrase = new iTextSharp.text.Phrase("الاجمالي شامل الضريبة", nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Colspan = 1;
                        cell0.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase((Total - myInv.Discount + myInv.Tax).ToString(), nationalTextFont);
                        TblInside.AddCell(cell0);
                    }
                    //-------------------------------------------------------------------------------------------------------------------
                }
 
                
                table.AddCell(cellInside);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n" + "The Consignment Information", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                PdfPCell cell90 = new PdfPCell();
                if (vPrices)
                {

                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    //cell.Border = 0;
                    cell.Phrase = new iTextSharp.text.Phrase("طريقة الدفع", nationalTextFont);
                    table.AddCell(cell);

                    TblInside = new PdfPTable(6);
                    colsInside = new[] { 90, 90, 90, 40, 140, 90 };
                    TblInside.SetWidths(colsInside);
                    TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cellInside = new PdfPCell(TblInside);
                    cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cellInside.PaddingRight = 0;

                    cell0 = new PdfPCell();
                    //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell0.Border = 0;

                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase("نقداً:", nationalTextFont);
                    cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell90 = new PdfPCell();
                    cell90.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell90.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    if ((double)myInv.CashAmount == 0)
                    {
                        cell90.Phrase = new iTextSharp.text.Phrase(myInv.CashAmount.ToString(), nationalTextFont);
                    }
                    else
                    {
                        cell90.Phrase = new iTextSharp.text.Phrase(myInv.CashAmount.ToString() + " ريال", nationalTextFont);
                    }
                    TblInside.AddCell(cell90);

                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell0.Phrase = new iTextSharp.text.Phrase("Cash", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //

                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase("شبكة مدى:", nationalTextFont);
                    cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell90 = new PdfPCell();
                    cell90.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell90.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    if ((double)myInv.ShAmount == 0)
                    {
                        cell90.Phrase = new iTextSharp.text.Phrase(myInv.ShAmount.ToString(), nationalTextFont);
                    }
                    else
                    {
                        cell90.Phrase = new iTextSharp.text.Phrase(myInv.ShAmount.ToString() + " ريال", nationalTextFont);
                    }
                    TblInside.AddCell(cell90);

                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell0.Phrase = new iTextSharp.text.Phrase("Mada", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //


                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase("آجل فرع:", nationalTextFont);
                    TblInside.AddCell(cell0);


                    if (myInv.Site == "-1") cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    else
                    {
                        CostCenter myCostCenter = new CostCenter();
                        myCostCenter.Branch = short.Parse(Session["Branch"].ToString());
                        if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), myCostCenter.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        myCostCenter.Code = myInv.Site;
                        myCostCenter = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                                        where citm.Code == myCostCenter.Code
                                        select citm).FirstOrDefault();
                        if (myCostCenter != null) cell0.Phrase = new iTextSharp.text.Phrase(myCostCenter.Name1, nationalTextFont);
                        else cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    }
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);

                    if (myInv.SiteAmount == 0)
                    {
                        cell90.Phrase = new iTextSharp.text.Phrase(myInv.SiteAmount.ToString(), nationalTextFont);
                    }
                    else
                    {
                        cell90.Phrase = new iTextSharp.text.Phrase(myInv.SiteAmount.ToString() + " ريال", nationalTextFont);
                    }
                    TblInside.AddCell(cell90);
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell0.Phrase = new iTextSharp.text.Phrase("Credit", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase("حساب عميل:", nationalTextFont);
                    TblInside.AddCell(cell0);

                    if (myInv.Customer == "-1") cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    else
                    {
                        Acc myacc = new Acc();
                        myacc.Branch = short.Parse(Session["Branch"].ToString());
                        myacc.Code = myInv.Customer;
                        if (myacc.GetAcc2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                        {
                            cell0.Phrase = new iTextSharp.text.Phrase(myacc.Name1, nationalTextFont8);
                        }
                        else cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    }
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);

                    if (myInv.CustomerAmount == 0)
                    {
                        cell90.Phrase = new iTextSharp.text.Phrase(myInv.CustomerAmount.ToString(), nationalTextFont);
                    }
                    else
                    {
                        cell90.Phrase = new iTextSharp.text.Phrase(myInv.CustomerAmount.ToString() + " ريال", nationalTextFont);
                    }
                    TblInside.AddCell(cell90);
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell0.Phrase = new iTextSharp.text.Phrase("Bill to Co", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    table.AddCell(cellInside);

                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell.Phrase = new iTextSharp.text.Phrase("Method of Payment", nationalTextFont2);
                    table.AddCell(cell);
                }

                //-------------------------------------------------------------------------------------------

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("حالة السيارة" + "\r\n\r\n\r\n\r\n" + "العودة خلال ستة شهور فقط", nationalTextFont);
                table.AddCell(cell);

                TblInside = new PdfPTable(1);
                colsInside = new[] { 550 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/Car.jpg"));
                logo.ScalePercent(38);
                PdfPCell cell20 = new PdfPCell(logo);
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell20.PaddingTop = 5;
                cell20.PaddingBottom = 5;
                cell20.PaddingRight = 0;
                cell20.Border = 0;
                TblInside.AddCell(cell20);

                //--------------
                PdfPTable TblInside20 = new PdfPTable(8);
                colsInside = new[] { 125, 30, 30, 125, 125, 30, 30, 125 };
                TblInside20.SetWidths(colsInside);
                TblInside20.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                PdfPCell cellInside20 = new PdfPCell(TblInside20);
                cellInside20.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside20.PaddingRight = 0;
                cellInside20.Border = 0;

                cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell90 = new PdfPCell();
                cell90.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell90.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell90.PaddingTop = 3;
                //cell90.PaddingBottom = 3;
                //cell90.PaddingLeft = 1;
                //cell90.PaddingRight = 1;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("الاســتـمــــارة", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access1 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Registration", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("الايـــريــــال", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access2 ? "X" : "  ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Anten", nationalTextFont2);
                TblInside20.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("الكــنـداســـة", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access3 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Silencer", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("راديـو و مسـجــل", nationalTextFont);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access4 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Radio Casete", nationalTextFont2);
                TblInside20.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("سقف السيارة الخارجي", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access5 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Top Roof", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("الاطـار الاحتيــاطي", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access6 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Spare Tyre", nationalTextFont2);
                TblInside20.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مرآة جانبية يمين يسار", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access7 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access8 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Side Mirror", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("طاسات كفرات أمامية", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access9 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access10 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Wheel Cover Front", nationalTextFont2);
                TblInside20.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("لوحات أمامية وخلفية", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access11 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access12 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Number Plates", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("طاسات كفرات خلفية", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access13 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access14 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Wheel Cover Rear", nationalTextFont2);
                TblInside20.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("انوار أمامية وخلفية", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access15 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access16 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Head & Back Lights", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("زجاج أمامي وخلفي", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access17 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access18 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Wind Screen", nationalTextFont2);
                TblInside20.AddCell(cell0);

                TblInside.AddCell(cellInside20);
                //--------------

                cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell0.Border = 0;
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("علامة (X) تعني ملاحظة على السيارة", nationalTextFont2);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("1- " + myInv.Remark1, nationalTextFont2);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("2- " + myInv.Remark2, nationalTextFont2);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("المرفقات: " + myInv.Attached, nationalTextFont2);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);

                //--------------
                PdfPTable TblInside2 = new PdfPTable(3);
                colsInside = new[] { 120, 210, 210 };
                TblInside2.SetWidths(colsInside);
                TblInside2.RunDirection = PdfWriter.RUN_DIRECTION_LTR;
                TblInside2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                PdfPCell cellInside2 = new PdfPCell(TblInside2);
                cellInside2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside2.PaddingRight = 0;
                cellInside2.Border = 0;

                cell0 = new PdfPCell();
                cell0.FixedHeight = 14f;
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                //-----------------------------------------------------------------------
                MessagingToolkit.QRCode.Codec.QRCodeEncoder encoder = new MessagingToolkit.QRCode.Codec.QRCodeEncoder();
                encoder.QRCodeVersion = 0;
                System.Drawing.Bitmap obj = new System.Drawing.Bitmap(encoder.Encode("شركة الناقلات البرية العربية للنقل والتخزين" + System.Environment.NewLine + "310330321200003" + System.Environment.NewLine + myInv.GDate + " " + myInv.FTime + System.Environment.NewLine + string.Format("{0:N2}", myInv.Tax) + System.Environment.NewLine + string.Format("{0:N2}", (Total - myInv.Discount + myInv.Tax)), System.Text.Encoding.UTF8));
                MemoryStream ms = new MemoryStream();
                obj.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                byte[] byteImage = ms.ToArray();
                System.Drawing.Image sdi = System.Drawing.Image.FromStream(ms);
                iTextSharp.text.Image logo2 = iTextSharp.text.Image.GetInstance(sdi, System.Drawing.Imaging.ImageFormat.Png);
                logo2.ScalePercent(30);

                PdfPCell cell200 = new PdfPCell(logo2);
                cell200.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell200.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell200.PaddingTop = 0;
                cell200.PaddingRight = 0;
                cell200.Rowspan = 6;
                cell200.Border = 0;
                TblInside2.AddCell(cell200);


                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("مرسل السيارة", nationalTextFont2);
                TblInside2.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                string UserName = "";
                TblUsers ax = new TblUsers();
                if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                ax.UserName = myInv.UserName;
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax != null)
                {
                    UserName = ax.FName;
                }
                cell0.Phrase = new iTextSharp.text.Phrase("موظف الأستقبال: " + UserName, nationalTextFont2);
                TblInside2.AddCell(cell0);
                //---------------------------------------------------------------------------------------------
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("(قرأت الشروط بالخلف و أوافق عليها)", nationalTextFont2);
                TblInside2.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("التوقيع", nationalTextFont2);
                TblInside2.AddCell(cell0);
                //--------------------------------------------------------------------------------------------

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("الاســم: " + myInv.Name, nationalTextFont2);
                TblInside2.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside2.AddCell(cell0);

                //----------------------------------------------------------------------------------------
                //cell0.Phrase = new iTextSharp.text.Phrase("الاســم: " + myInv.RecName, nationalTextFont2);
                //TblInside2.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("التوقيع", nationalTextFont2);
                TblInside2.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("المستلم: " + myInv.RecName, nationalTextFont2);
                TblInside2.AddCell(cell0);

                //---------------------------------------------------------------------------------------
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside2.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("التوقيع", nationalTextFont2);
                TblInside2.AddCell(cell0);
                //---------------------------------------------------------------------------------------
                //cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                //TblInside2.AddCell(cell0);
                //TblInside2.AddCell(cell0);
                //---------------------------------------------------------------------------------------

                for (int r = ((int)myInv.Qty); r < 6; r++)
                {
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    TblInside2.AddCell(cell0);
                    TblInside2.AddCell(cell0);
                    TblInside2.AddCell(cell0);
                }
                TblInside.AddCell(cellInside2);

                table.AddCell(cellInside);
                //--------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("Status of Consignment Vehicle", nationalTextFont2);
                table.AddCell(cell);
                //------------------------------------------------------------------------------------------
                document.Add(table);

                PdfPTable foot = new PdfPTable(20);
                colsInside = new[] { 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30 };
                foot.TotalWidth = document.PageSize.Width; //100f;
                foot.SetWidths(colsInside);
                foot.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                foot.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell901 = new PdfPCell(foot);
                cell901.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell901.Phrase = new iTextSharp.text.Phrase("X", nationalTextFont2);
                cell901.Border = 0;

                PdfPCell cell902 = new PdfPCell(foot);
                cell902.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                cell902.Border = 0;

                //0
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S1 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell((bool)myInv.S2 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S3 ? cell901 : cell902);

                foot.AddCell((bool)myInv.S4 ? cell901 : cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S5 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S6 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                //1
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S7 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell((bool)myInv.S8 ? cell901 : cell902);
                foot.AddCell((bool)myInv.S9 ? cell901 : cell902);
                foot.AddCell((bool)myInv.S10 ? cell901 : cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S11 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S12 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S13 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell((bool)myInv.S14 ? cell901 : cell902);

                foot.AddCell((bool)myInv.S15 ? cell901 : cell902);

                foot.AddCell((bool)myInv.S16 ? cell901 : cell902);

                foot.AddCell((bool)myInv.S17 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                //2
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S18 ? cell901 : cell902);
                foot.AddCell((bool)myInv.S19 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell((bool)myInv.S21 ? cell901 : cell902);

                foot.AddCell((bool)myInv.S22 ? cell901 : cell902);

                foot.AddCell(cell902);

                foot.AddCell((bool)myInv.S23 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                //3
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                //4
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                //5
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell((bool)myInv.S24 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S25 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell((bool)myInv.S26 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S27 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell((bool)myInv.S28 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                //6
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell((bool)myInv.S29 ? cell901 : cell902);


                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S30 ? cell901 : cell902);


                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell((bool)myInv.S31 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S32 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell((bool)myInv.S33 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                //7
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell((bool)myInv.S34 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S35 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell((bool)myInv.S36 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell((bool)myInv.S37 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell((bool)myInv.S38 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                //8
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                //9
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                foot.WriteSelectedRows(0, foot.Rows.Count(), 0, 500 - (15 * ((int)myInv.Qty - 1)), writer.DirectContent);


                foot = new PdfPTable(5);
                colsInside = new[] { 23, 75, 500, 65, 23 };
                foot.TotalWidth = document.PageSize.Width; //100f;
                foot.SetWidths(colsInside);
                foot.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                foot.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell901 = new PdfPCell(foot);
                cell901.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell901.FixedHeight = 15f;
                cell901.Border = 0;

                //0
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess1, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess2, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                //1
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess3, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess4, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                //2
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess5, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess6, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                //3
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess7 + " " + myInv.sAccess8, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess9 + " " + myInv.sAccess10, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                //4
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess11 + " " + myInv.sAccess12, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess13 + " " + myInv.sAccess14, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                //5
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess15 + " " + myInv.sAccess16, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess17 + " " + myInv.sAccess18, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                foot.WriteSelectedRows(0, foot.Rows.Count(), 0, 407 - (15 * ((int)myInv.Qty - 1)), writer.DirectContent);


                cols = new[] { 700 };
                table = new PdfPTable(1);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;
                //cell.Phrase = new iTextSharp.text.Phrase("شركة ناقلات البرية - لمتابعة شحنتك على موقعنا www.naqelat.net للاستفسار اتصل على 0115283100 100 خط \n الرقم الموحد 920028833 (تخضع المكالمة لرسوم شركة الأتصالات) ", nationalTextFont8);
                cell.Phrase = new iTextSharp.text.Phrase("شركة ناقلات البرية - لمتابعة شحنتك على موقعنا www.naqelat.net للاستفسار اتصل على 0115283100 100 خط  الرقم الموحد 920028833 (تخضع لرسوم شركة الأتصالات) ", nationalTextFont8);
                table.AddCell(cell);
                //-------------------------------------------------------------------------------------------
                document.Add(table);

                if (Request.QueryString["DoubleSide"] != null)
                {
                    if (Request.QueryString["DoubleSide"].ToString() == "1")
                    {
                        document.NewPage();
                        ColCount = 3;
                        cols = new[] { 28, 350, 322 };
                        table = new PdfPTable(ColCount);
                        table.TotalWidth = document.PageSize.Width; //100f;
                        table.SetWidths(cols);
                        cell = new PdfPCell();
                        cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        nationalTextFont = new iTextSharp.text.Font(nationalBase, 10.5f, iTextSharp.text.Font.NORMAL);
                        cell.Border = 0;

                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell.Phrase = new iTextSharp.text.Phrase("شروط النقل البري", nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("LAND TRANSIT CONDITIONS", nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        table.AddCell(cell);

                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("1- تعنى العبارة (المقاول) و (الناقل) في هذه الشروط – مؤسسة الناقلات البرية العربية – أو و كلائه وأي شخص أو أشخاص يقومون بنقل السيارات بموجب عقد من الباطن مع المقاول", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("In these Land Transit Condition the 'Contractor' or 'Transporter' means Arab Land Transporters Est. And includes the servants. Agents and any person or persons effecting the transport of vehicles for Contractor and/or under a sub-contract with the Contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[1]", nationalTextFont);
                        table.AddCell(cell);


                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("2- شروط النقل هذه جزء لا يتحزأ من مستندات العقد المبرم مع العميل – ووثيقة رسمية لا يحق لأي شخص تعديل أي منها في أي وجه من الأوجه إلا بموجب أتفاق مستبق وتفويضاً صريحاً بذلك من المقاول", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("These Land Transit Conditions are part of the Contract documents. Witch are executed with the customer. Therefore no one will have any authority to vary these conditions in any way unless he is expressly authorized to do so by the contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[2]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("3- يجب على العميل التأكد من صحة كافة البيانات المعبأة من قبله أو من يمثله والموضحة في هذه الاتفاقية وإذا اتضح عدم صحة أي من هذه البيانات فإن العميل سيتحمل كافة ما ينتج عن ذلك.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("It is the customer's responsibility to make sure of the required relevant information that he or his representative should fill out on the cover side of this contract, if any given information are wrong customer is responsible for consequence", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[3]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("4- تقتصر مسؤولية المقاول إزاء العميل عن ضرر سيارته / سياراته على المسؤولية التي تغطيها بوليصة التأمين ولا يكون الناقل مسؤولاً عن الأضرار غير المباشرة أو المترتبة عن الخسائر والأضرار الناتجة عن تعرض السيارة للأعطال الميكانيكية و الكهربائية أو كسر بالزجاج أو أي أضرار أخرى ناتجة بسبب حادث مروري قبل استلام السيارة من قبل الناقل ، كما لا يتحمل الناقل أي مسؤولية تجاه تلف أو فقدان الأمتعة الشخصية داخل السيارة.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor's liability to the customer for damage or loss of his vehicle/vehicles shall be limited to that covered by the Contractor's  Land Transit Insurance policy. The Contractor shall not be limited to that covered by the Contract's land Transit Insurance police. The Contractor shall not be liable forindirect  or consequential damage to the vehicle/vehicles; or  loss or damage happen Electro-Mechanical work or break down of grass or any other damage due to traffic accident before receiving the vehicle by Transporter. Also the Transporter is not liable for the loss or damage to the personal effects or luggage inside the vehicle", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[4]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("5- على المقاول أن يبذل كل جهد معقول لضمان توريد السيارة / السيارات بأمان إلى العنوان الموضح على وجه هذه الاتفاقية وتسليمها إلى العميل أو من ينوب عنه.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor  shall  make reasonable effect to see that the vehicle/vehicles are safely delivered at the address indicated on the cover side of this contract  to an apparently member of the consignee's staff", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[5]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("6- الناقل غير مسؤول عن أي أضرار للسيارة بعد استلام العميل لها أو من ينوب عنه وتقتصر مسؤولية الناقل في الفترة من تاريخ الاستلام إلى تاريخ التسليم.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor shall  not be liable  for any damage or loss to the vehicle after receipt by customer or his representative. The Transporter liability towards vehicle/vehicles are only limited during the period from the date of received to the time of delivery", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[6]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("7- يلتزم العميل باستلام سيارته أو من ينوب عنه مباشرة في موقع التسليم للمقاول والمدن في هذه الاتفاقية وفي مدة أقصاها سبعة أيام من تاريخ وصول السيارة وبعد هذا التاريخ مباشرة يلتزم العميل بدفع مبلغ وقدره (10) ريالات رسوم أرضية عن كل يوم تأخير.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The costumer is obliged to receive his vehicle from Contractor's place of delivery mentioned in this contract within seven days of arrived .After passing this date the costumer has to pay demurrage charges SR: 10 per each day", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[7]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("8- يمنع منعاً باتاً وضع أي مواد قالبة للاشتعال أو أسلحة غير مرخصة أو أي ممنوعات أخرى يحظر تداولها طبقاً للأنظمة المعمول بها في المملكة العربية السعودية داخل السيارة المنقولة ويتحمل العميل كامل المسؤولية تجاه ما يترتب على ذلك ، كما أنه الناقل غير مسؤول عن ترك أي أشياء ثمينة من قبل العميل داخل السيارة عند نقلها.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("It is totally prohibited to place inside the transported vehicle any inflammable item or arms without license or any other forbidden goods according  to the law of Kingdom  of Saudi Arabia and the customer shall be fully responsible for violating this act. Also the Transporter is not responsible for any valuable things left out by customer in the vehicle", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[8]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("9- تدفع رسوم النقل الخاصة بالمقابل بواسطة العميل دون أن يؤثر ذلك على حقوق المقاول ضد المرسل أو المرسل إليه أو أي شخص أخر ويجب ألا يؤخذ أي أدعاء كمبرر لتأخير أو احتجاز مدفوعات مستحقة للمقاول أو مسؤوليات يتكبدها المقاول.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor 's charge shall by  payable by the customer without prejudice to the Contractor 's right against the consignor, consignee or any other person. A claim or counterclaim shall not be made the reason for deferring or withholding payment of money or liabilities owing to the Contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[9]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("10- على العميل أن يبري ذمة المقاول ويحميه ضد كل الدعاوي والتكاليف والمطالبات التي تقدم من أي جهة كانت و تتجاوز قيمتها المسؤوليات القانونية للمقاول وفقاً لأحكام هذه الشروط", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The customer shall save harmless and keep the Contractor indemnified from and against all claim, cost and demands by whosoever made or preferred in excess of the legal liabilities of the Contractor under the terms of these conditions", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[10]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("11- في حالة الغاء اتفاقية الشحن يلتزم العميل بسداد مبلغ 50 ريال مصاريف أدارية", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("In case of cancellation shipping invoice customer shall pay an amount of SR 50 administrative expenses", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[11]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("12- في حال مضى على تاريخ اصدار فاتوره الذهاب والعوده 3 شهور يتحمل العميل ٢٥٪(رسوم اداريه)من اجمالي قيمة الشحن عند العوده بالاضافه الى قيمة مصاريف الشحن الاساسية وذلك بدون سابق اشعار ", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("If the Go and Return invoice date of issuance has passed three       25% months The customer will bear administrative fees of the total value of shipping upon return in addition to the value of the basic shipping charges without prior notice", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[12]", nationalTextFont);
                        table.AddCell(cell);


                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("13- في حال مضى على تاريخ اصدار فاتوره الذهاب والعوده ٦ شهور  تلغى الفاتوره نهائيا ولا يحق للعميل استبدالها او استرجاع قيمتها او جزء من قيمتها وذلك بدون سابق اشعار ", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("If the Go and Return invoice date of issuance has passed six months Invoice is expired and gone the customer is not entitled to replace it or refund it or part of its value without prior notice", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[13]", nationalTextFont);
                        table.AddCell(cell);

                        document.Add(table);
                    }
                }

                document.Close();
            }
            catch (Exception)
            {
            }
        }

        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage5 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, vStr5, vStr6, UserName, PageNo, vCompanyName,vOnLine,Customer;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 8f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                string arialunicodepath2 = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                BaseFont nationalBase2;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                nationalBase2 = BaseFont.CreateFont(arialunicodepath2, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase2, 12f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(4);
                var cols2 = new[] { 300, 100, 400, 400 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                if (moh.doTax(vStr6,Customer)) cell2.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية" + "\n" + "للنقل والتخزين - " + vStr4 + "\n" + "الرقم الضريبي#310330321200003", nationalTextFont16);
                else cell2.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية" + "\n" + "للنقل والتخزين - " + vStr4, nationalTextFont16);

                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;                
                if(vOnLine =="") cell2.Phrase = new iTextSharp.text.Phrase("\n" + "إتفاقية شحن (فاتورة) \n رقم " + moh.MakeMask(DateTime.Parse(vStr6).Month.ToString(), 2) + moh.MakeMask(DateTime.Parse(vStr6).Day.ToString(), 2) + " " + vStr3 + " " + (100 + int.Parse(vStr5)).ToString(), nationalTextFont16);
                else cell2.Phrase = new iTextSharp.text.Phrase("\n" + "إتفاقية شحن (فاتورة) \n رقم " + vOnLine, nationalTextFont16);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                var TextCell = new PdfPCell(headerTbl.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //TextCell.Border = 0;
                TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = vStr2 + vStr3;
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.PaddingTop = 10;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                headerTbl.AddCell(TextCell);



                //var cols = new[] { 200, 150, 150, 300, 350 };
                //document.Open();
                //PdfPTable table = new PdfPTable(5);
                //table.TotalWidth = document.PageSize.Width; //100f;
                //table.SetWidths(cols);
                //PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell2.Border = 0;
                ////cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                //cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //PdfPCell cell22 = new PdfPCell();
                //cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                //cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                //table.AddCell(cell2);

                //cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                //cell2.Phrase = new iTextSharp.text.Phrase("إتفاقية شحن (فاتورة) رقم", nationalTextFont16);
                //table.AddCell(cell2);

                //cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                //cell22.Phrase = new iTextSharp.text.Phrase(txtVouNo.Text + lblBranch.Text, nationalTextFont16);
                //table.AddCell(cell22);

                //cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                //table.AddCell(cell2);


                //var TextCell = new PdfPCell(table.DefaultCell);
                //TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                ////TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                //PdfContentByte cb = writer.DirectContent;
                //var bc128 = new Barcode128();
                //bc128.CodeType = Barcode.CODE128;
                //bc128.Code = lblBranch.Text + txtVouNo.Text;
                //bc128.GenerateChecksum = true;
                //bc128.AltText = "";
                //bc128.StartStopText = true;


                ////bc128.BarHeight = 8;
                ////bc128.Extended = true; 

                ////bc128.Baseline = 20;   // Doesn't affect rendering.
                ////bc128.Size = 20;       // Doesn't affect rendering.
                ////bc128.BarHeight = 60;  // DOES affect rendering.
                ////bc128.X = 2;                          

                //TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                ////cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                //var bi = bc128.CreateImageWithBarcode(cb, null, null);
                //bi.ScalePercent(100);
                //bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                //TextCell.AddElement(bi);

                ////cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                ////table.AddCell(cell);
                //table.AddCell(TextCell);
                //document.Add(table);


                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);


                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }


        #endregion

        #region 6 Print of Receipt Voucher
        public void PrintRVou(int MyNumber)
        {
            try
            {
                List<vJv> lJv = new List<vJv>();
                Jv myJv = new Jv();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.FType = 101;
                myJv.LocType = 2;
                myJv.LocNumber = LocNumber;
                myJv.Number = MyNumber;
                lJv = myJv.find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (lJv == null || lJv.Count == 0) return;

                double vLand = 0 , vCust = 0 , vOthers = 0 , vCashAmount = 0 , vShAmount = 0;
                string vCustomer = "";
                if (lJv[0].DocType == 0 || lJv[0].DocType == 2 )
                {
                    for (int i = 0; i < lJv.Count(); i++)
                    {
                        if (lJv[i].DbCode != "")
                        {

                            if (lJv[i].DbCode == moh.MadaAcc)
                            {
                                vShAmount = vShAmount + (double)lJv[i].Amount;
                            }
                            else if (lJv[i].DbCode.StartsWith("120102"))
                            {
                                vCashAmount = (double)lJv[i].Amount;
                            }
                            else if (lJv[i].DbCode == "310102027")
                            {
                                vShAmount = vShAmount + (double)lJv[i].Amount;
                            }
                            continue;
                        }

                        if (lJv[i].CrCode != "" && lJv[i].CrCode == SiteInfo.LateAcc)
                        {
                            vLand  = (double)lJv[i].Amount;
                            continue;
                        }
                        else if (lJv[i].CrCode != "" && lJv[i].CrCode == SiteInfo.InComeAcc)
                        {
                            vOthers = (double)lJv[i].Amount;
                            continue;
                        }
                        else if (lJv[i].InvNo == "" && lJv[i].CrCode != "" && vCustomer != "" && lJv[i].CrCode == vCustomer)
                        {
                            vCust  = (double)lJv[i].Amount;
                            continue;
                        }
                        else if(vCustomer == "")
                        {
                            if (lJv[i].InvNo[0] == 'L')
                            {
                                LShipment myInv2 = new LShipment();
                                myInv2.Branch = short.Parse(Session["Branch"].ToString());
                                string vVouNo2 = lJv[i].InvNo.Substring(1, lJv[i].InvNo.Length - 1);
                                myInv2.VouLoc = moh.MakeMask(vVouNo2.Split('/')[0], 5);
                                myInv2.VouNo = int.Parse(vVouNo2.Split('/')[1]);
                                myInv2 = myInv2.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                                if (myInv2 != null)
                                {
                                        vCustomer = myInv2.Customer;
                                }
                            }
                            else if (lJv[i].InvNo[0] == 'E')
                            {
                                Shipment myInv1 = new Shipment();
                                string vVouNo2 = lJv[i].InvNo.Substring(1, lJv[i].InvNo.Length - 1);
                                myInv1.Branch = short.Parse(Session["Branch"].ToString());
                                myInv1.VouLoc = moh.MakeMask(vVouNo2.Split('/')[0], 5);
                                myInv1.VouNo = int.Parse(vVouNo2.Split('/')[1]);
                                myInv1 = myInv1.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                                if (myInv1 != null)
                                {
                                       vCustomer = myInv1.Customer;
                                }
                            }
                            else
                            {
                                Invoice myInv = new Invoice();
                                myInv.Branch = short.Parse(Session["Branch"].ToString());
                                myInv.VouLoc = moh.MakeMask(lJv[i].InvNo.Split('/')[0], 5);
                                myInv.VouNo = int.Parse(lJv[i].InvNo.Split('/')[1]);
                                myInv = myInv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                                if (myInv != null)
                                {
                                    InvDetails Inv = new InvDetails();
                                    Inv.Branch = short.Parse(Session["Branch"].ToString());
                                    Inv.VouLoc = moh.MakeMask(lJv[i].InvNo.Split('/')[0], 5);
                                    Inv.VouNo = int.Parse(lJv[i].InvNo.Split('/')[1]);
                                    Inv.FNo = 1;
                                    Inv = Inv.GetFNo(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                                    if (myInv != null && Inv != null)
                                    {
                                        vCustomer = myInv.Customer;
                                    }
                                }
                                else
                                {
                                    myInv = new Invoice();
                                    myInv.Branch = short.Parse(Session["Branch"].ToString());
                                    myInv.VouLoc = moh.MakeMask(lJv[i].InvNo.Split('/')[0], 5);
                                    myInv.VouNo = int.Parse(lJv[i].InvNo.Split('/')[1]);
                                    myInv = myInv.Find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                                    if (myInv != null)
                                    {
                                        vCustomer = myInv.Customer;
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    for (int i = 0; i < lJv.Count(); i++)
                    {
                        if (lJv[i].CrCode != "" && lJv[i].CrCode == SiteInfo.LateAcc)
                        {
                            vLand = (double)lJv[i].Amount;
                            continue;
                        }
                        else if (lJv[i].CrCode != "" && lJv[i].CrCode == SiteInfo.InComeAcc)
                        {
                            vOthers = (double)lJv[i].Amount;
                            continue;
                        }
                    }

                    /*
                    if (lJv.Count() > 2 && lJv[lJv.Count() - 1].CrCode == SiteInfo.LateAcc)
                    {
                        vLand = (double)lJv[lJv.Count() - 1].Amount;
                    }
                     */
                }                



                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage6 page = new pdfPage6();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.vStr1 = "سند القبض";
                page.vStr2 = "أستلمنا من:";

                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                page.vStr3 = Session["AreaName"].ToString();

                string arialunicodepath = Server.MapPath("Fonts")  + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                document.Open();
                int ColCount = 5;
                var cols = new[] { 125, 125, 125, 150, 225 };
                PdfPTable table10 = new PdfPTable(ColCount);
                table10.TotalWidth = document.PageSize.Width; //100f;
                table10.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.Border = 0;
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table10.AddCell(cell);

                cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell.Phrase = new iTextSharp.text.Phrase(" سند قبض رقم ", nationalTextFont16);
                table10.AddCell(cell);

                PdfPCell cell22 = new PdfPCell();
                cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell22.Phrase = new iTextSharp.text.Phrase(lJv[0].Number.ToString() + "/" + lJv[0].LocNumber.ToString(), nationalTextFont16);
                table10.AddCell(cell22);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table10.AddCell(cell);

                var TextCell = new PdfPCell(table10.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //TextCell.Border = 0;
                TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = lJv[0].LocNumber.ToString() + "/" + lJv[0].Number.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table10.AddCell(TextCell);
                document.Add(table10);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                ColCount = 4;
                cols = new[] { 275, 125, 280, 120 };
                PdfPTable table11 = new PdfPTable(ColCount);
                table11.TotalWidth = document.PageSize.Width; //100f;
                table11.SetWidths(cols);
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.Border = 0;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table11.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table11.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //---------------------------------------------------------------------------------------
                cell.Phrase = new iTextSharp.text.Phrase("التـاريــخ:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(HDate.DatetoHjiri(lJv[0].FDate) + " هـ", nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("المـوافــق:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(HDate.RotateDate(lJv[0].FDate) + " م", nationalTextFont);
                table11.AddCell(cell);
                //---------------------------------------------------------------------------------------
                int start = 1;
                if (lJv[1].DbCode != "")
                {
                    start++;
                    cell.Phrase = new iTextSharp.text.Phrase("الاجمــالـي:", nationalTextFont14);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", lJv[0].Amount + lJv[1].Amount), nationalTextFont);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("الخصــــم:", nationalTextFont14);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", lJv[1].Amount), nationalTextFont);
                    table11.AddCell(cell);
                }
                //---------------------------------------------------------------------------------------
                if (vLand != 0 || vCust != 0)
                {
                    cell.Phrase = new iTextSharp.text.Phrase("الارضيات:", nationalTextFont14);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", vLand), nationalTextFont);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("العميل:", nationalTextFont14);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", vCust), nationalTextFont);
                    table11.AddCell(cell);                    
                }
                //-------------------------------------------------------------------------------------------------   //
                if (vOthers != 0)
                {
                    cell.Phrase = new iTextSharp.text.Phrase("إيرادات أخرى:", nationalTextFont14);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", vOthers), nationalTextFont);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table11.AddCell(cell);
                }
                //-------------------------------------------------------------------------------------------------   //



                //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase(page.vStr2, nationalTextFont14);
                table11.AddCell(cell);

                List<myInv2> VouData = new List<myInv2>();
                VouData.Clear();

                if ((int)lJv[0].DocType == 0 || (int)lJv[0].DocType == 2)
                {
                    for (int i = start; i < lJv.Count(); i++)
                    {
                        if (lJv[i].InvNo == "") continue;
                        string vVouNo2 = "";


                        if (lJv[i].InvNo.Split('/').Count() < 2 || lJv[i].InvNo.StartsWith("0/"))
                        {
                            Jv mJv = new Jv();
                            mJv.Branch = short.Parse(Session["Branch"].ToString());
                            mJv.FType = 100;
                            mJv.LocNumber = 1;
                            mJv.LocType = 1;
                            mJv.Number = (lJv[i].InvNo.Split('/').Count() < 2 ? int.Parse(lJv[i].InvNo) : int.Parse(lJv[i].InvNo.Split('/')[1]));
                            mJv = (from sitm in mJv.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString)
                                   where sitm.DbCode == lJv[i].CrCode
                                   select sitm).FirstOrDefault();
                            if (mJv != null)
                            {
                                Acc myAcc = new Acc();
                                myAcc.Branch = short.Parse(Session["Branch"].ToString());
                                myAcc.Code = mJv.DbCode;
                                myAcc.GetAcc(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                                VouData.Add(new myInv2
                                {
                                    FNo = VouData.Count() + 1,
                                    VouNo = mJv.Number,
                                    InvoiceVouLoc = "00000",
                                    Flag = "",
                                    Name = myAcc.Name1,
                                    Amount = mJv.Amount,
                                    PlateNo = "",
                                    Destination = "تسوية",
                                    DestinationName1 = "تسوية",
                                    DestinationName2 = "Adjust",
                                    Site = "-1",
                                    Customer = mJv.DbCode,
                                    SiteAmount = 0,
                                    CustomerAmount = mJv.Amount,
                                    Claim = lJv[i].Claim
                                });
                            }
                        }
                        else
                        {
                            if (lJv[i].InvNo[0] == 'L')
                            {
                                LShipment myInv2 = new LShipment();
                                myInv2.Branch = short.Parse(Session["Branch"].ToString());
                                vVouNo2 = lJv[i].InvNo.Substring(1, lJv[i].InvNo.Length - 1);
                                myInv2.VouLoc = moh.MakeMask(vVouNo2.Split('/')[0], 5);
                                myInv2.VouNo = int.Parse(vVouNo2.Split('/')[1]);
                                myInv2 = myInv2.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                                if (myInv2 != null)
                                {
                                    Cities myCity = new Cities();
                                    myCity.Branch = short.Parse(Session["Branch"].ToString());
                                    myCity.Code = myInv2.Destination;
                                    if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                    myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                              where sitm.Code == myCity.Code
                                              select sitm).FirstOrDefault();
                                    if (myCity != null)
                                    {
                                        if (myInv2.Customer == lJv[i].CrCode) VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = myInv2.VouNo, InvoiceVouLoc = myInv2.VouLoc, Name = myInv2.RecName, Amount = lJv[i].Amount, CustomerAmount = lJv[i].Amount, PlateNo = "", Destination = myInv2.Destination, DestinationName1 = myCity.Name1, DestinationName2 = myCity.Name2, Site = "-1", Customer = myInv2.Customer });
                                        else VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = myInv2.VouNo, InvoiceVouLoc = myInv2.VouLoc, Name = myInv2.RecName, Amount = lJv[i].Amount, SiteAmount = lJv[i].Amount, PlateNo = "", Destination = myInv2.Destination, DestinationName1 = myCity.Name1, DestinationName2 = myCity.Name2, Site = myInv2.Site, Customer = myInv2.Customer });
                                    }
                                }
                            }
                            else if (lJv[i].InvNo[0] == 'E')
                            {
                                Shipment myInv1 = new Shipment();
                                myInv1.Branch = short.Parse(Session["Branch"].ToString());
                                vVouNo2 = lJv[i].InvNo.Substring(1, lJv[i].InvNo.Length - 1);
                                myInv1.VouLoc = moh.MakeMask(vVouNo2.Split('/')[0], 5);
                                myInv1.VouNo = int.Parse(vVouNo2.Split('/')[1]);
                                myInv1 = myInv1.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                                if (myInv1 != null)
                                {
                                    Cities myCity = new Cities();
                                    myCity.Branch = short.Parse(Session["Branch"].ToString());
                                    myCity.Code = myInv1.Destination;
                                    if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                    myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                              where sitm.Code == myCity.Code
                                              select sitm).FirstOrDefault();
                                    if (myCity != null)
                                    {
                                        if (myInv1.Customer == lJv[i].CrCode) VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = myInv1.VouNo, InvoiceVouLoc = myInv1.VouLoc, Name = myInv1.RecName, Amount = lJv[i].Amount, CustomerAmount = lJv[i].Amount, PlateNo = "", Destination = myInv1.Destination, DestinationName1 = myCity.Name1, DestinationName2 = myCity.Name2, Site = "-1", Customer = myInv1.Customer });
                                        else VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = myInv1.VouNo, InvoiceVouLoc = myInv1.VouLoc, Name = myInv1.RecName, Amount = lJv[i].Amount, SiteAmount = lJv[i].Amount, PlateNo = "", Destination = myInv1.Destination, DestinationName1 = myCity.Name1, DestinationName2 = myCity.Name2, Site = myInv1.Site, Customer = myInv1.Customer });
                                    }
                                }
                            }
                            else
                            {
                                Invoice myInv = new Invoice();
                                myInv.Branch = short.Parse(Session["Branch"].ToString());
                                myInv.VouLoc = moh.MakeMask(lJv[i].InvNo.Split('/')[0], 5);
                                myInv.VouNo = int.Parse(lJv[i].InvNo.Split('/')[1]);
                                myInv = myInv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                                if (myInv != null)
                                {
                                    InvDetails Inv = new InvDetails();
                                    Inv.Branch = short.Parse(Session["Branch"].ToString());
                                    Inv.VouLoc = moh.MakeMask(lJv[i].InvNo.Split('/')[0], 5);
                                    Inv.VouNo = int.Parse(lJv[i].InvNo.Split('/')[1]);
                                    Inv.FNo = 1;
                                    Inv = Inv.GetFNo(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                                    if (myInv != null && Inv != null)
                                    {
                                        Cities myCity = new Cities();
                                        myCity.Branch = short.Parse(Session["Branch"].ToString());
                                        myCity.Code = myInv.Destination;
                                        if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                        myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                                  where sitm.Code == myCity.Code
                                                  select sitm).FirstOrDefault();
                                        if (myCity != null)
                                        {
                                            if (myInv.Customer == lJv[i].CrCode) VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = myInv.VouNo, InvoiceVouLoc = myInv.VouLoc, Name = myInv.RecName, Amount = lJv[i].Amount, CustomerAmount = lJv[i].Amount, PlateNo = Inv.PlateNo, Destination = myInv.Destination, DestinationName1 = myCity.Name1, DestinationName2 = myCity.Name2, Site = "-1", Customer = myInv.Customer });
                                            else VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = myInv.VouNo, InvoiceVouLoc = myInv.VouLoc, Name = myInv.RecName, Amount = lJv[i].Amount, SiteAmount = lJv[i].Amount, PlateNo = Inv.PlateNo, Destination = myInv.Destination, DestinationName1 = myCity.Name1, DestinationName2 = myCity.Name2, Site = myInv.Site, Customer = myInv.Customer });
                                        }
                                    }
                                }
                                else
                                {
                                    myInv = new Invoice();
                                    myInv.Branch = short.Parse(Session["Branch"].ToString());
                                    myInv.VouLoc = moh.MakeMask(lJv[i].InvNo.Split('/')[0], 5);
                                    myInv.VouNo = int.Parse(lJv[i].InvNo.Split('/')[1]);
                                    myInv = myInv.Find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                                    if (myInv != null)
                                    {
                                        Cities myCity = new Cities();
                                        myCity.Branch = short.Parse(Session["Branch"].ToString());
                                        myCity.Code = myInv.Destination;
                                        if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                        myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                                  where sitm.Code == myCity.Code
                                                  select sitm).FirstOrDefault();
                                        if (myCity != null)
                                        {
                                            if (myInv.Customer == lJv[i].CrCode) VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = myInv.VouNo, InvoiceVouLoc = myInv.VouLoc, Name = myInv.RecName, Amount = lJv[i].Amount, CustomerAmount = lJv[i].Amount, PlateNo = myInv.PlateNo.Replace('@', '-'), Destination = myInv.Destination, DestinationName1 = myCity.Name1, DestinationName2 = myCity.Name2, Site = "-1", Customer = myInv.Customer });
                                            else VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = myInv.VouNo, InvoiceVouLoc = myInv.VouLoc, Name = myInv.RecName, Amount = lJv[i].Amount, SiteAmount = lJv[i].Amount, PlateNo = myInv.PlateNo.Replace('@', '-'), Destination = myInv.Destination, DestinationName1 = myCity.Name1, DestinationName2 = myCity.Name2, Site = myInv.Site, Customer = myInv.Customer });
                                        }
                                    }
                                }
                            }
                        }
                    }
                }


                //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                /*
                if ((int)lJv[0].DocType == 0 || (int)lJv[0].DocType == 2)
                {
                    if (lJv.Count()-start > 0) cell.Phrase = new iTextSharp.text.Phrase(VouData[0].Name, nationalTextFont);
                    else cell.Phrase = new iTextSharp.text.Phrase(lJv[0].Remark, nationalTextFont);
                }
                else cell.Phrase = new iTextSharp.text.Phrase(lJv[0].Remark, nationalTextFont);
                table11.AddCell(cell);
                 */
                cell.Phrase = new iTextSharp.text.Phrase(lJv[0].Person, nationalTextFont);
                table11.AddCell(cell);



                cell.Phrase = new iTextSharp.text.Phrase("نوع القبض:", nationalTextFont14);
                table11.AddCell(cell);

                if (lJv[0].Payment == 1) cell.Phrase = new iTextSharp.text.Phrase("بشيك", nationalTextFont);
                else cell.Phrase = new iTextSharp.text.Phrase(lJv[0].Payment == 0 ? "نقداً" : "شبكة", nationalTextFont);

                table11.AddCell(cell);
                //-------------------------------------------------------------------    

                //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("المبلـــغ:", nationalTextFont14);
                table11.AddCell(cell);

                //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2} ريال", lJv[0].Amount), nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("مطالبة رقم:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase((lJv[0].Claim == 0 ? " " : lJv[0].Claim.ToString()), nationalTextFont);
                table11.AddCell(cell);

                //---------------------------------------------------------------------------------------

                //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("مبلغ وقدرة:", nationalTextFont14);
                table11.AddCell(cell);

                //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Colspan = 3;
                cell.Phrase = new iTextSharp.text.Phrase(moh.NTOC((double)lJv[0].Amount,1), nationalTextFont);
                table11.AddCell(cell);

    //
                cell.Colspan = 1;
                cell.Phrase = new iTextSharp.text.Phrase("وذلك عن:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Colspan = 3;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[0].Remark, nationalTextFont14);
                table11.AddCell(cell);

                cell.Colspan = 1;
                //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                /*
                cell.Phrase = new iTextSharp.text.Phrase("الاجمالي:", nationalTextFont14);
                table11.AddCell(cell);

                //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(txtAmount.Text, nationalTextFont);
                table11.AddCell(cell);

                //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الخصم:", nationalTextFont14);
                table11.AddCell(cell);

                //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(txtDiscount.Text, nationalTextFont);
                table11.AddCell(cell);
                */
                //

                if (lJv[0].Payment == 1) //lJv[0].ChequeDate != "" || lJv[0].ChequeNo != "" || lJv[0].BankName != "")
                {
                    //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("تاريخ الشيك:", nationalTextFont14);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[0].ChequeDate, nationalTextFont);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("رقم الشيك:", nationalTextFont14);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[0].ChequeNo, nationalTextFont);
                    table11.AddCell(cell);


                    //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("مسحوب على بنك:", nationalTextFont14);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[0].BankName, nationalTextFont);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table11.AddCell(cell);
                }
                else
                {
                    //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("نقـــداً:", nationalTextFont14);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2} ريال", vCashAmount), nationalTextFont);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("شبكة مدى:", nationalTextFont14);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2} ريال", vShAmount), nationalTextFont);
                    table11.AddCell(cell);
                }

                //---------------------------------------------------------------------------------------
    //
                document.Add(table11);

                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                PdfPTable table40 = new PdfPTable(5);
                if ((int)lJv[0].DocType == 0 || (int)lJv[0].DocType == 2)
                {
                    table40.TotalWidth = 100f;
                    PdfPCell cell4 = new PdfPCell();
                    var cols4 = new[] { 150, 150, 150, 150, 150 };
                    table40.SetWidths(cols4);
                    cell4.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    table40.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table40.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell4.FixedHeight = 20f;
                    cell4.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell4.Phrase = new iTextSharp.text.Phrase("رقم الفاتورة", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase("رقم اللوحه", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase("المستلم", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase("جهة الترحيل", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont);
                    table40.AddCell(cell4);
                    cell4.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                    foreach (myInv2 itm in VouData)
                    {
                        if (itm.VouNo > 0)
                        {
                            if (itm.VouNo2.Split('/').Count() > 1)
                            {
                                // Arabic  (char)0x202B;
                                // English  (char)0x202A;
                                if (itm.VouNo2.Substring(0, 1) == "L" || itm.VouNo2.Substring(0, 1) == "E") cell4.Phrase = new iTextSharp.text.Phrase((char)0x202A + itm.VouNo2.Substring(0, 1) + (char)0x202A + itm.VouNo2.Substring(1, itm.VouNo2.Length - 1).Split('/')[0] + (char)0x202A + '/' + (char)0x202A + itm.VouNo2.Substring(1, itm.VouNo2.Length - 1).Split('/')[1] + (char)0x202A, nationalTextFont);
                                else cell4.Phrase = new iTextSharp.text.Phrase((char)0x202A + itm.VouNo2.Split('/')[0] + (char)0x202A + '/' + (char)0x202A + itm.VouNo2.Split('/')[1] + (char)0x202A, nationalTextFont);

                                // cell4.Phrase = new iTextSharp.text.Phrase(itm.VouNo2.Split('/')[1] + "/" + itm.VouNo2.Split('/')[0], nationalTextFont);
                                table40.AddCell(cell4);
                            }
                            else
                            {
                                cell4.Phrase = new iTextSharp.text.Phrase((char)0x202A + itm.VouNo2.Split('/')[0] + (char)0x202A + '/' + (char)0x202A + itm.VouNo2.Split('/')[1] + (char)0x202A, nationalTextFont);
                                table40.AddCell(cell4);
                            }

                            cell4.Phrase = new iTextSharp.text.Phrase(itm.PlateNo, nationalTextFont);
                            table40.AddCell(cell4);

                            cell4.Phrase = new iTextSharp.text.Phrase(itm.Name, nationalTextFont);
                            table40.AddCell(cell4);

                            cell4.Phrase = new iTextSharp.text.Phrase(itm.DestinationName1, nationalTextFont);
                            table40.AddCell(cell4);

                            cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.Amount), nationalTextFont);
                            table40.AddCell(cell4);
                        }
                    }

                    document.Add(table40);
                    document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                }
                   
                PdfPTable table50 = new PdfPTable(5);
                table50.TotalWidth = 100f;
                PdfPCell cell5 = new PdfPCell();
                var cols5 = new[] { 150, 150,150, 150, 150 };
                table50.SetWidths(cols5);
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table50.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("المستلم", nationalTextFont14);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("إدخلت بواسطة", nationalTextFont14);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

    //
                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);



                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                TblUsers ax = new TblUsers();
                if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                ax.UserName = lJv[0].UserName;
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax == null)
                {
                    cell5.Phrase = new iTextSharp.text.Phrase(lJv[0].UserName, nationalTextFont);
                }
                else
                {
                    cell5.Phrase = new iTextSharp.text.Phrase(ax.FName, nationalTextFont);
                }

                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

    //
                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);


                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 2;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(lJv[0].UserDate, nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 2;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
    //
                for (int i = 0; i < 3; i++)
                {
                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);
                }

                document.Add(table50);

                /*
                document.Add(new iTextSharp.text.pdf.draw.LineSeparator());
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-----------------------------------------------------------------------------------------------------------------

                string harialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont hnationalBase;
                hnationalBase = BaseFont.CreateFont(harialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font hnationalTextFont = new iTextSharp.text.Font(hnationalBase, 16f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 200 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = document.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(page.vCompanyName + "\n" + page.vStr3, hnationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                page.vStr1 = " ";
                cell2.Phrase = new iTextSharp.text.Phrase(page.vStr1, hnationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                document.Add(headerTbl);

                document.Add(table10);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                document.Add(table11);
                if ((int)lJv[0].DocType == 0 || (int)lJv[0].DocType == 2)
                {
                    document.Add(table40);
                    document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                }
                document.Add(table50);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                */
                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage6 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo , vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 250, 250, 300 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName +"\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                vStr1=" ";
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 }; 
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);


                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 7 Print of Payment Voucher
        public void PrintPay(int MyNumber)
        {
            try
            {
                    List<vJv> lJv = new List<vJv>();
                    Jv myJv = new Jv();
                    myJv.Branch = short.Parse(Session["Branch"].ToString());
                    myJv.FType = 102;
                    myJv.LocType = LocType;
                    myJv.LocNumber = LocNumber;
                    myJv.Number = MyNumber;
                    lJv = myJv.find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (lJv == null || lJv.Count == 0) return;
                    int myItem = lJv.Count - 1;

                    iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                    HttpContext.Current.Response.ContentType = "application/pdf";
                    PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                    pdfPage7 page = new pdfPage7();
                    MyConfig mySetting = new MyConfig();
                    mySetting.Branch = short.Parse(Session["Branch"].ToString());
                    if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                    if (mySetting != null)
                    {
                        page.vCompanyName = mySetting.CompanyName;
                    }

                    writer.PageEvent = page;
                    page.vStr1 = "سند الصرف";
                    page.vStr2 = "صرفنا على:";

                    string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                    iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                    iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                    page.PageNo = "1";
                    page.UserName = Session["FullUser"].ToString();
                    page.vStr3 = (LocType == 2 ? Session["AreaName"].ToString() : LocType == 4 ? "الصيانة" : "الشئون الإدارية");
                    int ColCount = 5;
                    var cols = new[] { 125, 125, 125, 150, 225 };

                    document.Open();

                    PdfPTable table10 = new PdfPTable(ColCount);
                    table10.TotalWidth = document.PageSize.Width; //100f;
                    table10.SetWidths(cols);
                    PdfPCell cell = new PdfPCell();
                    cell.Border = 0;
                    cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table10.AddCell(cell);

                    cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                    cell.Phrase = new iTextSharp.text.Phrase(" سند صرف رقم ", nationalTextFont16);
                    table10.AddCell(cell);

                    PdfPCell cell22 = new PdfPCell();
                    cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                    cell22.Phrase = new iTextSharp.text.Phrase(lJv[myItem].Number.ToString() + "/" + (LocType == 2 ? lJv[myItem].LocNumber.ToString() : LocType == 4 ? "001"  : "01") , nationalTextFont16);
                    table10.AddCell(cell22);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table10.AddCell(cell);

                    var TextCell = new PdfPCell(table10.DefaultCell);
                    TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    //TextCell.Border = 0;
                    TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                    PdfContentByte cb = writer.DirectContent;
                    var bc128 = new Barcode128();
                    bc128.CodeType = Barcode.CODE128;
                    bc128.Code = (LocType == 2 ? lJv[myItem].LocNumber.ToString() : LocType == 3 ? "001" : "01") + "/" + lJv[myItem].Number.ToString();
                    bc128.GenerateChecksum = true;
                    bc128.AltText = "";
                    bc128.StartStopText = true;

                    TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                    var bi = bc128.CreateImageWithBarcode(cb, null, null);
                    bi.ScalePercent(100);
                    bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                    TextCell.AddElement(bi);

                    //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                    //table.AddCell(cell);
                    table10.AddCell(TextCell);
                    document.Add(table10);
                    document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                    //-------------------------------------------------------------------------------------------

                    ColCount = 4;
                    cols = new[] { 275, 125, 280, 120 };
                    PdfPTable table11 = new PdfPTable(ColCount);
                    table11.TotalWidth = document.PageSize.Width; //100f;
                    table11.SetWidths(cols);
                    cell = new PdfPCell();
                    //cell.FixedHeight = 20f;
                    cell.Border = 0;
                    cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    table11.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table11.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    //cell.Border = 0;
                    //cell.Phrase = new iTextSharp.text.Phrase("رقم السند:", nationalTextFont14);
                    //table.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    //cell.Phrase = new iTextSharp.text.Phrase(txtVouNo.Text + "/" + int.Parse(AreaNo).ToString(), nationalTextFont);
                    //table.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("التاريخ:", nationalTextFont);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[myItem].FDate, nationalTextFont);
                    table11.AddCell(cell);
                    //
                    //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("نوع الدفع:", nationalTextFont);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    if (lJv[myItem].BankName != "" || lJv[myItem].ChequeDate != "" || lJv[myItem].ChequeNo != "") cell.Phrase = new iTextSharp.text.Phrase("بشيك", nationalTextFont);
                    else cell.Phrase = new iTextSharp.text.Phrase("نقداً", nationalTextFont);
                    table11.AddCell(cell);

                    List<myInv2> VouData = new List<myInv2>();
                    double Discount = 0;
                    if (lJv[myItem - 1].FNo2 == -1 && lJv[myItem].DocType.ToString() == "0")
                    {
                        Discount = (double)lJv[myItem - 1].Amount;
                    }
                    if (lJv[myItem].DocType.ToString() != "0")  Discount = 0;
                    if (lJv[myItem].DocType.ToString() != "3")
                    {
                        VouData.Clear();
                        for (int i = 0; i < lJv.Count(); i++)
                        {
                            if (lJv[i].FNo2 != -1)
                            {
                                if (lJv[i].Area != "-1")
                                {
                                    //ddlArea.SelectedValue = lJv[i].Area;
                                    //ddlCostAcc.SelectedValue = lJv[i].CostAcc;
                                    //ddlCostCenter.SelectedValue = lJv[i].CostCenter;
                                    //ddlEmp.SelectedValue = lJv[i].EmpCode;
                                    //ddlProject.SelectedValue = lJv[i].Project;
                                    //ddlCarNo.SelectedValue = lJv[i].CarNo;
                                }

                                if (lJv[i].DocType == 2)
                                {
                                    CarMove myCar = new CarMove();
                                    myCar.Branch = short.Parse(Session["Branch"].ToString());
                                    myCar.VouLoc = moh.MakeMask(lJv[i].InvNo.Split('/')[0], 5);
                                    myCar.Number = int.Parse(lJv[i].InvNo.Split('/')[1]);
                                    myCar = myCar.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString).FirstOrDefault();
                                    if (myCar != null)
                                    {
                                        if ((bool)myCar.Rent)
                                        {
                                            VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = myCar.Number, InvoiceVouLoc = myCar.VouLoc, Name = myCar.RentDriver, Amount = lJv[i].Amount, DocType = (short)lJv[i].DocType, Site = lJv[i].DbCode, FNo2 = lJv[i].FNo2 });
                                        }
                                        else
                                        {
                                            Drivers myDrive = new Drivers();
                                            myDrive.Branch = short.Parse(Session["Branch"].ToString());
                                            if (Cache["Drivers" + Session["CNN2"].ToString()] == null) Cache.Insert("Drivers" + Session["CNN2"].ToString(), myDrive.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                            myDrive.Code = myCar.DriverCode;
                                            myDrive = (from sitm in (List<Drivers>)(Cache["Drivers" + Session["CNN2"].ToString()])
                                                       where sitm.Code == myDrive.Code
                                                       select sitm).FirstOrDefault();
                                            if (myDrive != null)
                                            {
                                                VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = myCar.Number, InvoiceVouLoc = myCar.VouLoc, Name = myDrive.Name1, Amount = lJv[i].Amount, DocType = (short)lJv[i].DocType, Site = lJv[i].DbCode, FNo2 = lJv[i].FNo2 });
                                            }
                                        }
                                    }
                                }
                                else if (lJv[i].DocType == 0)
                                {
                                    MyPO inv = new MyPO();
                                    inv.Branch = short.Parse(Session["Branch"].ToString());
                                    inv.FType = 1;
                                    inv.LocNumber = short.Parse(lJv[i].InvNo.Split('/')[0]);
                                    inv.Number = int.Parse(lJv[i].InvNo.Split('/')[1]);
                                    inv.FNo = (short)lJv[i].FNo2;
                                    inv = inv.Find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                                    if (inv != null)
                                    {
                                        VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = inv.Number, InvoiceVouLoc = moh.MakeMask(inv.LocNumber.ToString(), 5), Name = inv.Item, Amount = lJv[i].Amount, DocType = (short)lJv[i].DocType, Site = lJv[i].DbCode, FNo2 = lJv[i].FNo2 });
                                    }
                                }
                                else if (lJv[i].DocType == 2)
                                {
                                    MyPO inv = new MyPO();
                                    inv.Branch = short.Parse(Session["Branch"].ToString());
                                    inv.FType = 2;
                                    inv.LocNumber = short.Parse(lJv[i].InvNo.Split('/')[0]);
                                    inv.Number = int.Parse(lJv[i].InvNo.Split('/')[1]);
                                    inv.FNo = (short)lJv[i].FNo2;
                                    inv = inv.Find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                                    if (inv != null)
                                    {
                                        VouData.Add(new myInv2 { FNo = VouData.Count() + 1, VouNo = inv.Number, InvoiceVouLoc = moh.MakeMask(inv.LocNumber.ToString(), 5), Name = inv.Item, Amount = inv.Amount, DocType = (short)lJv[i].DocType, Site = lJv[i].DbCode, FNo2 = lJv[i].FNo2 });
                                    }
                                }
                                else if (lJv[i].DocType == 5)
                                {
                                    if (lJv[i].DbCode != "")
                                        VouData.Add(new myInv2 { FNo = VouData.Count() + 1, LocType = (short)(lJv[i].InvNo.Split('/')[0] == "001" ? 3 : 2 ) , VouNo = int.Parse(lJv[i].InvNo.Split('/')[1]), InvoiceVouLoc = moh.MakeMask(lJv[i].InvNo.Split('/')[0], 5), Name = lJv[i].AccName1, Amount = lJv[i].Amount, DocType = (short)lJv[i].DocType, Site = lJv[i].DbCode, FNo2 = lJv[i].FNo2 });
                                }
                                else if (lJv[i].DocType == 9)
                                {
                                    if (lJv[i].DbCode != "")
                                        VouData.Add(new myInv2 { FNo = VouData.Count() + 1, LocType = (short)(lJv[i].InvNo.Split('/')[0] == "001" ? 3 : 2), VouNo = int.Parse(lJv[i].InvNo.Split('/')[1]), InvoiceVouLoc = moh.MakeMask(lJv[i].InvNo.Split('/')[0], 5), Name = lJv[i].AccName1, Amount = lJv[i].Amount, DocType = (short)lJv[i].DocType, Site = lJv[i].DbCode, FNo2 = lJv[i].FNo2 });
                                }
                            }
                        }
                    }
                        
                    //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("مبلغ وقدرة:", nationalTextFont);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", lJv[myItem].Amount), nationalTextFont);
                    table11.AddCell(cell);

                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    if (lJv[myItem].DocType.ToString() == "0")
                    {
                        //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase("فرق مصروف", nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Discount), nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("وذلك عن:", nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(lJv[myItem].Remark, nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        table11.AddCell(cell);
                    }
                    else
                    {
                        //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase(page.vStr2, nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(lJv[myItem].Remark, nationalTextFont);
                        table11.AddCell(cell);


                    }
                    //


                    //
                    if (lJv[myItem].BankName != "" || lJv[myItem].ChequeDate != "" || lJv[myItem].ChequeNo != "")
                    {
                        //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase("تاريخ الشيك:", nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(lJv[myItem].ChequeDate, nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase("رقم الشيك:", nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(lJv[myItem].ChequeNo, nationalTextFont);
                        table11.AddCell(cell);


                        //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase("مسحوب على بنك:", nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(lJv[myItem].BankName, nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                        table11.AddCell(cell);

                        //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                        table11.AddCell(cell);
                    }

                    //
                    document.Add(table11);

                    ColCount = 3;
                    PdfPTable table = new PdfPTable(ColCount);
                    if (lJv[myItem].DocType.ToString() == "0" || lJv[myItem].DocType.ToString() == "5" || lJv[myItem].DocType.ToString() == "2" || lJv[myItem].DocType.ToString() == "9")
                    {
                        // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                        cols = new[] { 200, 400, 150 };
                        table.TotalWidth = document.PageSize.Width; //100f;
                        table.SetWidths(cols);
                        table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell = new PdfPCell();
                        cell.FixedHeight = 20f;
                        cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell.Phrase = new iTextSharp.text.Phrase("رقم المستند", nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("البيان", nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont);
                        table.AddCell(cell);

                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        foreach (myInv2 itm in VouData)
                        {
                            if (itm.VouNo2.Split('/').Count() > 1)
                            {
                                cell.Phrase = new iTextSharp.text.Phrase(itm.VouNo2.Split('/')[1] + "/" + itm.VouNo2.Split('/')[0], nationalTextFont);
                                table.AddCell(cell);
                            }
                            else
                            {
                                cell.Phrase = new iTextSharp.text.Phrase(itm.VouNo2, nationalTextFont);
                                table.AddCell(cell);
                            }

                            cell.Phrase = new iTextSharp.text.Phrase(itm.Name, nationalTextFont);
                            table.AddCell(cell);

                            cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.Amount), nationalTextFont);
                            table.AddCell(cell);
                        }
                        document.Add(table);
                    }


                    document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                    PdfPTable table50 = new PdfPTable(5);
                    table50.TotalWidth = 100f;
                    PdfPCell cell5 = new PdfPCell();
                    var cols5 = new[] { 150, 150, 150, 150, 150 };
                    table50.SetWidths(cols5);
                    cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell5.FixedHeight = 20f;
                    table50.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("المستلم", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("إدخلت بواسطة", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    //
                    cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    TblUsers ax = new TblUsers();
                    if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    ax.UserName = lJv[myItem].UserName;
                    ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                          where uitm.UserName == ax.UserName
                          select uitm).FirstOrDefault();
                    if (ax == null)
                    {
                        cell5.Phrase = new iTextSharp.text.Phrase(lJv[myItem].UserName, nationalTextFont);
                    }
                    else
                    {
                        cell5.Phrase = new iTextSharp.text.Phrase(ax.FName, nationalTextFont);
                    }
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    //
                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);


                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 2;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 2;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    //
                    for (int i = 0; i < 2; i++)
                    {
                        cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                        table50.AddCell(cell5);

                        cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        table50.AddCell(cell5);

                        cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                        table50.AddCell(cell5);

                        cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                        table50.AddCell(cell5);

                        cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                        table50.AddCell(cell5);
                    }

                    document.Add(table50);
                    document.Add(new iTextSharp.text.pdf.draw.LineSeparator());
                    document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                    //-----------------------------------------------------------------------------------------------------------------

                    //string harialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    //BaseFont hnationalBase;
                    //hnationalBase = BaseFont.CreateFont(harialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    //iTextSharp.text.Font hnationalTextFont = new iTextSharp.text.Font(hnationalBase, 16f, iTextSharp.text.Font.NORMAL);

                    ////I use a PdfPtable with 1 column to position my header where I want it
                    //PdfPTable headerTbl = new PdfPTable(3);
                    //var cols2 = new[] { 200, 300, 200 };
                    //headerTbl.SetWidths(cols2);

                    //headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    //headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    ////set the width of the table to be the same as the document
                    //headerTbl.TotalWidth = document.PageSize.Width;

                    //PdfPCell cell2 = new PdfPCell();
                    //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell2.Border = 0;
                    //cell2.PaddingRight = 15;
                    //cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    //cell2.Phrase = new iTextSharp.text.Phrase(page.vCompanyName + "\n" + page.vStr3, hnationalTextFont);
                    //cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    //headerTbl.AddCell(cell2);

                    //cell2.PaddingRight = 0;
                    //page.vStr1 = " ";
                    //cell2.Phrase = new iTextSharp.text.Phrase(page.vStr1, hnationalTextFont);
                    //cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    //cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    //headerTbl.AddCell(cell2);

                    ////I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                    //iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                    ////I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                    //logo.ScalePercent(70);

                    ////create instance of a table cell to contain the logo
                    //PdfPCell cell20 = new PdfPCell(logo);

                    ////align the logo to the right of the cell
                    //cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    ////add a bit of padding to bring it away from the right edge
                    //cell20.PaddingTop = 0;
                    //cell20.PaddingRight = 30;

                    ////remove the border
                    //cell20.Border = 0;

                    ////Add the cell to the table
                    //headerTbl.AddCell(cell20);
                    //document.Add(headerTbl);
                    //document.Add(table10);
                    //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                    //document.Add(table11);                    
                    //if (ddlType.SelectedValue == "0")
                    //{
                    //    //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                    //    document.Add(table);
                    //}
                    //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                    //document.Add(table50);
                    //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                    //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                    document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage7 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 250, 250, 300 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                vStr1 = " ";
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 40 Print of Back of Invoice
        public void PrintInvBack2()
        {
            try
            {
                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 40, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage40 page = new pdfPage40();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                int ColCount = 3;
                var cols = new[] { 28, 350, 322 };
                document.Open();
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                cell.Border = 0;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("شروط النقل البري", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("LAND TRANSIT CONDITIONS", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("1- تعنى العبارة (المقاول) و (الناقل) في هذه الشروط – مؤسسة الناقلات البرية العربية – أو و كلائه وأي شخص أو أشخاص يقومون بنقل السيارات بموجب عقد من الباطن مع المقاول", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("In these Land Transit Condition the 'Contractor' or 'Transporter' means Arab Land Transporters Est. And includes the servants. Agents and any person or persons effecting the transport of vehicles for Contractor and/or under a sub-contract with the Contractor", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[1]", nationalTextFont);
                table.AddCell(cell);


                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("2- شروط النقل هذه جزء لا يتحزأ من مستندات العقد المبرم مع العميل – ووثيقة رسمية لا يحق لأي شخص تعديل أي منها في أي وجه من الأوجه إلا بموجب أتفاق مستبق وتفويضاً صريحاً بذلك من المقاول", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("These Land Transit Conditions are part of the Contract documents. Witch are executed with the customer. Therefore no one will have any authority to vary these conditions in any way unless he is expressly authorized to do so by the contractor", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[2]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("3- يجب على العميل التأكد من صحة كافة البيانات المعبأة من قبله أو من يمثله والموضحة في هذه الاتفاقية وإذا اتضح عدم صحة أي من هذه البيانات فإن العميل سيتحمل كافة ما ينتج عن ذلك.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("It is the customer's responsibility to make sure of the required relevant information that he or his representative should fill out on the cover side of this contract, if any given information are wrong customer is responsible for consequence", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[3]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("4- تقتصر مسؤولية المقاول إزاء العميل عن ضرر سيارته / سياراته على المسؤولية التي تغطيها بوليصة التأمين ولا يكون الناقل مسؤولاً عن الأضرار غير المباشرة أو المترتبة عن الخسائر والأضرار الناتجة عن تعرض السيارة للأعطال الميكانيكية و الكهربائية أو كسر بالزجاج أو أي أضرار أخرى ناتجة بسبب حادث مروري قبل استلام السيارة من قبل الناقل ، كما لا يتحمل الناقل أي مسؤولية تجاه تلف أو فقدان الأمتعة الشخصية داخل السيارة.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The Contractor's liability to the customer for damage or loss of his vehicle/vehicles shall be limited to that covered by the Contractor's  Land Transit Insurance policy. The Contractor shall not be limited to that covered by the Contract's land Transit Insurance police. The Contractor shall not be liable forindirect  or consequential damage to the vehicle/vehicles; or  loss or damage happen Electro-Mechanical work or break down of grass or any other damage due to traffic accident before receiving the vehicle by Transporter. Also the Transporter is not liable for the loss or damage to the personal effects or luggage inside the vehicle", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[4]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("5- على المقاول أن يبذل كل جهد معقول لضمان توريد السيارة / السيارات بأمان إلى العنوان الموضح على وجه هذه الاتفاقية وتسليمها إلى العميل أو من ينوب عنه.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The Contractor  shall  make reasonable effect to see that the vehicle/vehicles are safely delivered at the address indicated on the cover side of this contract  to an apparently member of the consignee's staff", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[5]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("6- الناقل غير مسؤول عن أي أضرار للسيارة بعد استلام العميل لها أو من ينوب عنه وتقتصر مسؤولية الناقل في الفترة من تاريخ الاستلام إلى تاريخ التسليم.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The Contractor shall  not be liable  for any damage or loss to the vehicle after receipt by customer or his representative. The Transporter liability towards vehicle/vehicles are only limited during the period from the date of received to the time of delivery", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[6]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("7- يلتزم العميل باستلام سيارته أو من ينوب عنه مباشرة في موقع التسليم للمقاول والمدن في هذه الاتفاقية وفي مدة أقصاها سبعة أيام من تاريخ وصول السيارة وبعد هذا التاريخ مباشرة يلتزم العميل بدفع مبلغ وقدره (10) ريالات رسوم أرضية عن كل يوم تأخير.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The costumer is obliged to receive his vehicle from Contractor's place of delivery mentioned in this contract within seven days of arrived .After passing this date the costumer has to pay demurrage charges SR: 10 per each day", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[7]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("8- يمنع منعاً باتاً وضع أي مواد قالبة للاشتعال أو أسلحة غير مرخصة أو أي ممنوعات أخرى يحظر تداولها طبقاً للأنظمة المعمول بها في المملكة العربية السعودية داخل السيارة المنقولة ويتحمل العميل كامل المسؤولية تجاه ما يترتب على ذلك ، كما أنه الناقل غير مسؤول عن ترك أي أشياء ثمينة من قبل العميل داخل السيارة عند نقلها.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("It is totally prohibited to place inside the transported vehicle any inflammable item or arms without license or any other forbidden goods according  to the law of Kingdom  of Saudi Arabia and the customer shall be fully responsible for violating this act. Also the Transporter is not responsible for any valuable things left out by customer in the vehicle", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[8]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("9- تدفع رسوم النقل الخاصة بالمقابل بواسطة العميل دون أن يؤثر ذلك على حقوق المقاول ضد المرسل أو المرسل إليه أو أي شخص أخر ويجب ألا يؤخذ أي أدعاء كمبرر لتأخير أو احتجاز مدفوعات مستحقة للمقاول أو مسؤوليات يتكبدها المقاول.", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The Contractor 's charge shall by  payable by the customer without prejudice to the Contractor 's right against the consignor, consignee or any other person. A claim or counterclaim shall not be made the reason for deferring or withholding payment of money or liabilities owing to the Contractor", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[9]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("10- على العميل أن يبري ذمة المقاول ويحميه ضد كل الدعاوي والتكاليف والمطالبات التي تقدم من أي جهة كانت و تتجاوز قيمتها المسؤوليات القانونية للمقاول وفقاً لأحكام هذه الشروط", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("The customer shall save harmless and keep the Contractor indemnified from and against all claim, cost and demands by whosoever made or preferred in excess of the legal liabilities of the Contractor under the terms of these conditions", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[10]", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("11- في حالة الغاء اتفاقية الشحن يلتزم العميل بسداد مبلغ 50 ريال مصاريف أدارية", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("In case of cancellation shipping invoice customer shall pay an amount of SR 50 administrative expenses", nationalTextFont);
                table.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("[11]", nationalTextFont);
                table.AddCell(cell);


                document.Add(table);

                document.Close();
            }
            catch (Exception)
            {

            }
        }

        public class pdfPage40 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                /*
                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 300, 600, 300 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document

                
                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
                 */
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                //cell.PaddingRight = 5;
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }

        #endregion

        #region 50 Print of Invoice
        public void PrintInv2(int MyNumber)
        {
            try
            {
                string[] ShipType = {"","سوائل","منتجات تجميل وعطورات","قابلة للكسر","صلبة","مستندات ورقية","مواد غذائية","مواد بناء","مواد مبردة","مواد سائبة"};
                string[] ShipUnit = {"","كيلو جرام KG","باوند LB","طن"};
                string[] CoverType = {"","مغلف","ظرف","كرتون"};
                string[] CoverSize = {"","صغير","وسط","كبير","مخصص"};
                string[] ShipUse = {"","تجاري","استخدام شخصي","هدية","عينة","إصلاح وإرجاع"};

                Shipment myInv = new Shipment();
                myInv.Branch = short.Parse(Session["Branch"].ToString());
                myInv.VouLoc = AreaNo;
                myInv.VouNo = MyNumber;
                myInv = myInv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myInv == null) return;

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 70, 35);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage50 page = new pdfPage50();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.Customer = myInv.Customer;
                page.UserName = Session["FullUser"].ToString();
                page.vStr4 = SiteInfo.Name1;                    //((Label)this.Master.FindControl("LblBranchName")).Text;    //Session["AreaName"].ToString();
                page.vStr2 = "/E" + short.Parse(AreaNo).ToString();
                page.vStr3 = MyNumber.ToString();
                page.vStr5 = AreaNo;
                page.vStr6 = myInv.GDate;
                page.vOnLine = "";

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont8 = new iTextSharp.text.Font(nationalBase, 8f, iTextSharp.text.Font.NORMAL); iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont12 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------
                document.Open();
                //-------------------------------------------------------------------------------------------

                int ColCount = 3;
                var cols = new[] { 80, 550, 70 };
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                table.AddCell(cell);

                PdfPTable TblInside = new PdfPTable(3);
                var colsInside = new[] { 100, 340, 100 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                PdfPCell cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                PdfPCell cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase(HDate.RotateDate2(myInv.HDate) + " هـ ", nationalTextFont);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont12);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.GDate + " م ", nationalTextFont);
                TblInside.AddCell(cell0);

                table.AddCell(cellInside);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Date", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);     // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n\r\n" + "بيانات المرسل و المرسل إليه", nationalTextFont);
                table.AddCell(cell);

                TblInside = new PdfPTable(3);
                colsInside = new[] { 140, 300, 100 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("الاســم:", nationalTextFont);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Name, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consigner Name", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("رقم الهوية:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.IDNo + " " + (myInv.IDType == 0 ? "هوية" : "بطاقة"), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("I.D.No./Iqama", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مصدرها/تاريخها:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.IDFrom + "   " + myInv.IDDate, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Place of Issue/Date", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("العنوان:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Address + (myInv.MobileNo != "" ? " جوال رقم " + myInv.MobileNo : ""), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Address", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("الايميل:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Mail , nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Email", nationalTextFont2);
                TblInside.AddCell(cell0);


                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مكان الشحن:", nationalTextFont);
                TblInside.AddCell(cell0);

                string City = "";
                Cities myCity = new Cities();
                myCity.Branch = short.Parse(Session["Branch"].ToString());
                myCity.Code = myInv.PlaceofLoading;
                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                          where sitm.Code == myCity.Code
                          select sitm).FirstOrDefault();
                if (myCity != null) City = myCity.Name1;

                cell0.Phrase = new iTextSharp.text.Phrase(City, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Place of Loading", nationalTextFont2);
                TblInside.AddCell(cell0);

                City = "";
                myCity = new Cities();
                myCity.Branch = short.Parse(Session["Branch"].ToString());
                myCity.Code = myInv.Destination;
                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                          where sitm.Code == myCity.Code
                          select sitm).FirstOrDefault();
                if (myCity != null) City = myCity.Name1;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("جهه الترحيل:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(City, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Destination", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("أسم المستلم:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.RecName, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consignee Name", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("عنوان المستلم:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.RecAddress + (myInv.RecMobileNo != "" ? " جوال رقم " + myInv.RecMobileNo : ""), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consignee Address", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("الايميل:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.RecMail , nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Email", nationalTextFont2);
                TblInside.AddCell(cell0);


                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مدة التسليم:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(" خلال " + moh.DaysToString[(int)myInv.DPeriod], nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Delivery Period", nationalTextFont2);
                TblInside.AddCell(cell0);

                table.AddCell(cellInside);


                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n\r\n" + "Consigner and Consignee Information", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n" + "بيانات الشحنة المرسلة", nationalTextFont);
                table.AddCell(cell);

                if (myInv.ShipType == 0)
                {
                    TblInside = new PdfPTable(6);
                    colsInside = new[] { 100, 100, 100, 100, 100, 100 };
                    TblInside.SetWidths(colsInside);
                    TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cellInside = new PdfPCell(TblInside);
                    cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cellInside.PaddingRight = 0;

                    cell0 = new PdfPCell();
                    cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell0.FixedHeight = 15f;
                    //cell0.Border = 0;
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell0.Phrase = new iTextSharp.text.Phrase("نوع الشحنة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(ShipType[(int)myInv.Unit], nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Type", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الوحدة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(ShipUnit[(int)myInv.Unit], nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Unit", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //
                    cell0.Phrase = new iTextSharp.text.Phrase("نوع التغليف", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(CoverType[(int)myInv.CoverType], nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Cover", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("المقاس", nationalTextFont);
                    TblInside.AddCell(cell0);

                    if (myInv.CoverType == 2) cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    else cell0.Phrase = new iTextSharp.text.Phrase(CoverSize[(int)myInv.CoverSize], nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Size", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //
                    cell0.Phrase = new iTextSharp.text.Phrase("عدد القطع", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Qty.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("No. of Pcs", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("وزن الشحنة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Weight.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Weight", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //
                    cell0.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Amount.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Amount", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الغرض من الشحنة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(ShipUse[(int)myInv.ShUse], nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Purpose", nationalTextFont2);
                    TblInside.AddCell(cell0);                    
                    //***************************************************************************************************************



                    //-------------------------------------------------------------------------------------------------------------------
                    cell0.Phrase = new iTextSharp.text.Phrase("نوع الخصم", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.DiscountTerm, nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Term", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الخصم", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Discount", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Discount.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    //-------------------------------------------------------------------------------------------------------------------
                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الصافي", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Net", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase((myInv.Amount - myInv.Discount).ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);
                    //-------------------------------------------------------------------------------------------------------------------
                    cell0.Phrase = new iTextSharp.text.Phrase("اجمالي " + moh.doTax(myInv.GDate,1), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Tax.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(moh.doTax(myInv.GDate, 2), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الاجمالي شامل الضريبة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 1;
                    cell0.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase((myInv.Amount - myInv.Discount + myInv.Tax).ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);
                    //-------------------------------------------------------------------------------------------------------------------

                    //***************************************************************************************************************
                    cell0.Phrase = new iTextSharp.text.Phrase("وصف الشحنة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 4;
                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.ShRemark, nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 1;
                    cell0.Phrase = new iTextSharp.text.Phrase("Description", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //

                    //
                    cell0.Phrase = new iTextSharp.text.Phrase("ملاحظات", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 4;
                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.ShNote, nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 1;
                    cell0.Phrase = new iTextSharp.text.Phrase("Remark", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //
                    table.AddCell(cellInside);
                }
                else
                {
                    TblInside = new PdfPTable(5);
                    colsInside = new[] { 100, 100, 100, 250, 50};
                    TblInside.SetWidths(colsInside);
                    TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cellInside = new PdfPCell(TblInside);
                    cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cellInside.PaddingRight = 0;

                    cell0 = new PdfPCell();
                    cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell0.FixedHeight = 15f;
                    //cell0.Border = 0;
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell0.Phrase = new iTextSharp.text.Phrase("م", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("وصف الشحنة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("العدد", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("السعر", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                    ShipDetails myInv2 = new ShipDetails();
                    myInv2.Branch = short.Parse(Session["Branch"].ToString());
                    myInv2.VouLoc = AreaNo;
                    myInv2.VouNo = MyNumber;
                    double tot = 0;
                    foreach (ShipDetails itm in myInv2.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                    {
                        cell0.Phrase = new iTextSharp.text.Phrase(itm.FNo.ToString(), nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase(itm.Name, nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase(itm.Qty.ToString(), nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase(itm.Price.ToString(), nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase((itm.Price * itm.Qty).ToString(), nationalTextFont);
                        TblInside.AddCell(cell0);
                        tot += (double)(itm.Price * itm.Qty);
                    }
                    cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242); 
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(tot.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);
                    table.AddCell(cellInside);

                    //-------------------------------------------------------------------------------------------------------------------
                    cell0.Phrase = new iTextSharp.text.Phrase("نوع الخصم", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.DiscountTerm, nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Term", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الخصم", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Discount", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Discount.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    //-------------------------------------------------------------------------------------------------------------------
                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الصافي", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Net", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase((myInv.Amount - myInv.Discount).ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);
                    //-------------------------------------------------------------------------------------------------------------------
                    cell0.Phrase = new iTextSharp.text.Phrase("اجمالي " + moh.doTax(myInv.GDate,1), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Tax.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(moh.doTax(myInv.GDate,2), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الاجمالي شامل الضريبة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 1;
                    cell0.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase((myInv.Amount - myInv.Discount + myInv.Tax).ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);
                    //-------------------------------------------------------------------------------------------------------------------







                }

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n" + "The Consignment Information", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("طريقة الدفع", nationalTextFont);
                table.AddCell(cell);

                TblInside = new PdfPTable(6);
                colsInside = new[] { 100, 100, 100, 100, 100, 100 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell0.Border = 0;
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                //                
                cell0.Phrase = new iTextSharp.text.Phrase("نقداً", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.CashAmount.ToString(), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Cash", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("شبكة", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.ShabakaAmount.ToString(), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Mada", nationalTextFont2);
                TblInside.AddCell(cell0);
                //
                cell0.Phrase = new iTextSharp.text.Phrase("أجل فرع", nationalTextFont);
                TblInside.AddCell(cell0);

                if (myInv.Site == "-1") cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                else
                {
                    CostCenter myCostCenter = new CostCenter();
                    myCostCenter.Branch = short.Parse(Session["Branch"].ToString());
                    if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), myCostCenter.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCostCenter.Code = myInv.Site;
                    myCostCenter = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                                    where citm.Code == myCostCenter.Code
                                    select citm).FirstOrDefault();
                    if (myCostCenter != null) cell0.Phrase = new iTextSharp.text.Phrase(myCostCenter.Name1, nationalTextFont);
                    else cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                }
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Branch", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("بمبلغ", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.SiteAmount.ToString(), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Site", nationalTextFont2);
                TblInside.AddCell(cell0);
                //
                cell0.Phrase = new iTextSharp.text.Phrase("حساب عميل", nationalTextFont);
                TblInside.AddCell(cell0);

                if (myInv.Customer == "-1") cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                else
                {
                    Acc myacc = new Acc();
                    myacc.Branch = short.Parse(Session["Branch"].ToString());
                    myacc.Code = myInv.Customer;
                    if (myacc.GetAcc2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                    {
                        cell0.Phrase = new iTextSharp.text.Phrase(myacc.Name1, nationalTextFont);
                    }
                    else cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                }
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Customer", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("بمبلغ", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.CustomerAmount.ToString(), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Credit", nationalTextFont2);
                TblInside.AddCell(cell0);
                //

                cell0.FixedHeight = 14f;
                cell0.Colspan = 2;
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont2);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("مرسل الشحنة", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("موظف الأستقبال", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("(قرأت الشروط بالخلف و أوافق عليها)", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("المستلم", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                string UserName = "";
                TblUsers ax = new TblUsers();
                if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                ax.UserName = myInv.UserName;
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax != null)
                {
                    UserName = ax.FName;
                }

                cell0.Phrase = new iTextSharp.text.Phrase("الاســم: " + UserName, nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("الاســم: " + myInv.Name, nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("الاســم: " + myInv.RecName, nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont2);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                table.AddCell(cellInside);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("Method of Payment", nationalTextFont2);
                table.AddCell(cell);

                document.Add(table);
                cols = new[] { 700 };
                table = new PdfPTable(1);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;
                //cell.Phrase = new iTextSharp.text.Phrase("شركة ناقلات البرية - لمتابعة شحنتك على موقعنا www.naqelat.net للاستفسار اتصل على الرقم الموحد 920028833 ", nationalTextFont);
                cell.Phrase = new iTextSharp.text.Phrase("شركة ناقلات البرية - لمتابعة شحنتك على موقعنا www.naqelat.net للاستفسار اتصل على 0115283100 100 خط \n الرقم الموحد 920028833 (تخضع المكالمة لرسوم شركة الأتصالات) ", nationalTextFont);
                table.AddCell(cell);
                //-------------------------------------------------------------------------------------------
                document.Add(table);

                if (Request.QueryString["DoubleSide"] != null)
                {
                    if (Request.QueryString["DoubleSide"].ToString() == "1")
                    {
                        document.NewPage();
                        ColCount = 3;
                        cols = new[] { 28, 350, 322 };
                        table = new PdfPTable(ColCount);
                        table.TotalWidth = document.PageSize.Width; //100f;
                        table.SetWidths(cols);
                        cell = new PdfPCell();
                        cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                        cell.Border = 0;

                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell.Phrase = new iTextSharp.text.Phrase("شروط النقل البري", nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("LAND TRANSIT CONDITIONS", nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        table.AddCell(cell);

                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("1- تعنى العبارة (المقاول) و (الناقل) في هذه الشروط – مؤسسة الناقلات البرية العربية – أو و كلائه وأي شخص أو أشخاص يقومون بنقل السيارات بموجب عقد من الباطن مع المقاول", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("In these Land Transit Condition the 'Contractor' or 'Transporter' means Arab Land Transporters Est. And includes the servants. Agents and any person or persons effecting the transport of vehicles for Contractor and/or under a sub-contract with the Contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[1]", nationalTextFont);
                        table.AddCell(cell);


                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("2- شروط النقل هذه جزء لا يتحزأ من مستندات العقد المبرم مع العميل – ووثيقة رسمية لا يحق لأي شخص تعديل أي منها في أي وجه من الأوجه إلا بموجب أتفاق مستبق وتفويضاً صريحاً بذلك من المقاول", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("These Land Transit Conditions are part of the Contract documents. Witch are executed with the customer. Therefore no one will have any authority to vary these conditions in any way unless he is expressly authorized to do so by the contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[2]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("3- يجب على العميل التأكد من صحة كافة البيانات المعبأة من قبله أو من يمثله والموضحة في هذه الاتفاقية وإذا اتضح عدم صحة أي من هذه البيانات فإن العميل سيتحمل كافة ما ينتج عن ذلك.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("It is the customer's responsibility to make sure of the required relevant information that he or his representative should fill out on the cover side of this contract, if any given information are wrong customer is responsible for consequence", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[3]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("4- تقتصر مسؤولية المقاول إزاء العميل عن ضرر سيارته / سياراته على المسؤولية التي تغطيها بوليصة التأمين ولا يكون الناقل مسؤولاً عن الأضرار غير المباشرة أو المترتبة عن الخسائر والأضرار الناتجة عن تعرض السيارة للأعطال الميكانيكية و الكهربائية أو كسر بالزجاج أو أي أضرار أخرى ناتجة بسبب حادث مروري قبل استلام السيارة من قبل الناقل ، كما لا يتحمل الناقل أي مسؤولية تجاه تلف أو فقدان الأمتعة الشخصية داخل السيارة.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor's liability to the customer for damage or loss of his vehicle/vehicles shall be limited to that covered by the Contractor's  Land Transit Insurance policy. The Contractor shall not be limited to that covered by the Contract's land Transit Insurance police. The Contractor shall not be liable forindirect  or consequential damage to the vehicle/vehicles; or  loss or damage happen Electro-Mechanical work or break down of grass or any other damage due to traffic accident before receiving the vehicle by Transporter. Also the Transporter is not liable for the loss or damage to the personal effects or luggage inside the vehicle", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[4]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("5- على المقاول أن يبذل كل جهد معقول لضمان توريد السيارة / السيارات بأمان إلى العنوان الموضح على وجه هذه الاتفاقية وتسليمها إلى العميل أو من ينوب عنه.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor  shall  make reasonable effect to see that the vehicle/vehicles are safely delivered at the address indicated on the cover side of this contract  to an apparently member of the consignee's staff", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[5]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("6- الناقل غير مسؤول عن أي أضرار للسيارة بعد استلام العميل لها أو من ينوب عنه وتقتصر مسؤولية الناقل في الفترة من تاريخ الاستلام إلى تاريخ التسليم.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor shall  not be liable  for any damage or loss to the vehicle after receipt by customer or his representative. The Transporter liability towards vehicle/vehicles are only limited during the period from the date of received to the time of delivery", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[6]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("7- يلتزم العميل باستلام سيارته أو من ينوب عنه مباشرة في موقع التسليم للمقاول والمدن في هذه الاتفاقية وفي مدة أقصاها سبعة أيام من تاريخ وصول السيارة وبعد هذا التاريخ مباشرة يلتزم العميل بدفع مبلغ وقدره (10) ريالات رسوم أرضية عن كل يوم تأخير.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The costumer is obliged to receive his vehicle from Contractor's place of delivery mentioned in this contract within seven days of arrived .After passing this date the costumer has to pay demurrage charges SR: 10 per each day", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[7]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("8- يمنع منعاً باتاً وضع أي مواد قالبة للاشتعال أو أسلحة غير مرخصة أو أي ممنوعات أخرى يحظر تداولها طبقاً للأنظمة المعمول بها في المملكة العربية السعودية داخل السيارة المنقولة ويتحمل العميل كامل المسؤولية تجاه ما يترتب على ذلك ، كما أنه الناقل غير مسؤول عن ترك أي أشياء ثمينة من قبل العميل داخل السيارة عند نقلها.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("It is totally prohibited to place inside the transported vehicle any inflammable item or arms without license or any other forbidden goods according  to the law of Kingdom  of Saudi Arabia and the customer shall be fully responsible for violating this act. Also the Transporter is not responsible for any valuable things left out by customer in the vehicle", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[8]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("9- تدفع رسوم النقل الخاصة بالمقابل بواسطة العميل دون أن يؤثر ذلك على حقوق المقاول ضد المرسل أو المرسل إليه أو أي شخص أخر ويجب ألا يؤخذ أي أدعاء كمبرر لتأخير أو احتجاز مدفوعات مستحقة للمقاول أو مسؤوليات يتكبدها المقاول.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor 's charge shall by  payable by the customer without prejudice to the Contractor 's right against the consignor, consignee or any other person. A claim or counterclaim shall not be made the reason for deferring or withholding payment of money or liabilities owing to the Contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[9]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("10- على العميل أن يبري ذمة المقاول ويحميه ضد كل الدعاوي والتكاليف والمطالبات التي تقدم من أي جهة كانت و تتجاوز قيمتها المسؤوليات القانونية للمقاول وفقاً لأحكام هذه الشروط", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The customer shall save harmless and keep the Contractor indemnified from and against all claim, cost and demands by whosoever made or preferred in excess of the legal liabilities of the Contractor under the terms of these conditions", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[10]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("11- في حالة الغاء اتفاقية الشحن يلتزم العميل بسداد مبلغ 50 ريال مصاريف أدارية", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("In case of cancellation shipping invoice customer shall pay an amount of SR 50 administrative expenses", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[11]", nationalTextFont);
                        table.AddCell(cell);

                        document.Add(table);
                    }
                }

                document.Close();
            }
            catch (Exception)
            {
            }
        }

        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage50 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, vStr5, vStr6, UserName, PageNo, vCompanyName, vOnLine,Customer;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                string arialunicodepath2 = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                BaseFont nationalBase2;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                nationalBase2 = BaseFont.CreateFont(arialunicodepath2, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase2, 12f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(4);
                var cols2 = new[] { 300, 100, 400, 400 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                if (moh.doTax(vStr6,Customer)) cell2.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية" + "\n" + "للنقل والتخزين - " + vStr4 + "\n" + "الرقم الضريبي#310330321200003", nationalTextFont16);
                else cell2.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية" + "\n" + "للنقل والتخزين - " + vStr4, nationalTextFont16);
                //cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                if (vOnLine == "") cell2.Phrase = new iTextSharp.text.Phrase("\n" + "إتفاقية شحن طرود (فاتورة) \n رقم " + moh.MakeMask(DateTime.Parse(vStr6).Month.ToString(), 2) + moh.MakeMask(DateTime.Parse(vStr6).Day.ToString(), 2) + " " + vStr3 + " E" + (100 + int.Parse(vStr5)).ToString(), nationalTextFont16);
                else cell2.Phrase = new iTextSharp.text.Phrase("\n" + "إتفاقية شحن طرود (فاتورة) \n رقم E" + vOnLine, nationalTextFont16);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                var TextCell = new PdfPCell(headerTbl.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //TextCell.Border = 0;
                TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = "E"+vStr2 + vStr3;
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.PaddingTop = 10;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                headerTbl.AddCell(TextCell);



                //var cols = new[] { 200, 150, 150, 300, 350 };
                //document.Open();
                //PdfPTable table = new PdfPTable(5);
                //table.TotalWidth = document.PageSize.Width; //100f;
                //table.SetWidths(cols);
                //PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell2.Border = 0;
                ////cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                //cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //PdfPCell cell22 = new PdfPCell();
                //cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                //cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                //table.AddCell(cell2);

                //cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                //cell2.Phrase = new iTextSharp.text.Phrase("إتفاقية شحن (فاتورة) رقم", nationalTextFont16);
                //table.AddCell(cell2);

                //cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                //cell22.Phrase = new iTextSharp.text.Phrase(txtVouNo.Text + lblBranch.Text, nationalTextFont16);
                //table.AddCell(cell22);

                //cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                //table.AddCell(cell2);


                //var TextCell = new PdfPCell(table.DefaultCell);
                //TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                ////TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                //PdfContentByte cb = writer.DirectContent;
                //var bc128 = new Barcode128();
                //bc128.CodeType = Barcode.CODE128;
                //bc128.Code = lblBranch.Text + txtVouNo.Text;
                //bc128.GenerateChecksum = true;
                //bc128.AltText = "";
                //bc128.StartStopText = true;


                ////bc128.BarHeight = 8;
                ////bc128.Extended = true; 

                ////bc128.Baseline = 20;   // Doesn't affect rendering.
                ////bc128.Size = 20;       // Doesn't affect rendering.
                ////bc128.BarHeight = 60;  // DOES affect rendering.
                ////bc128.X = 2;                          

                //TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                ////cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                //var bi = bc128.CreateImageWithBarcode(cb, null, null);
                //bi.ScalePercent(100);
                //bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                //TextCell.AddElement(bi);

                ////cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                ////table.AddCell(cell);
                //table.AddCell(TextCell);
                //document.Add(table);


                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);


                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }


        #endregion

        #region 51 Print of Invoice
        public void PrintInv3(int MyNumber)
        {
            try
            {
                string[] ShipType = { "", "سوائل", "منتجات تجميل وعطورات", "قابلة للكسر", "صلبة", "مستندات ورقية", "مواد غذائية", "مواد بناء", "مواد مبردة", "مواد سائبة" };
                string[] ShipUnit = { "", "كيلو جرام KG", "باوند LB", "طن" };
                string[] CoverType = { "", "مغلف", "ظرف", "كرتون" };
                string[] CoverSize = { "", "صغير", "وسط", "كبير", "مخصص" };
                string[] ShipUse = { "", "تجاري", "استخدام شخصي", "هدية", "عينة", "إصلاح وإرجاع" };

                LShipment myInv = new LShipment();
                myInv.Branch = short.Parse(Session["Branch"].ToString());
                myInv.VouLoc = AreaNo;
                myInv.VouNo = MyNumber;
                myInv = myInv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myInv == null) return;

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 70, 35);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage51 page = new pdfPage51();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.Customer = myInv.Customer;
                page.UserName = Session["FullUser"].ToString();
                page.vStr4 = SiteInfo.Name1;                    //((Label)this.Master.FindControl("LblBranchName")).Text;    //Session["AreaName"].ToString();
                page.vStr2 = "/L" + short.Parse(AreaNo).ToString();
                page.vStr3 = MyNumber.ToString();
                page.vStr5 = AreaNo;
                page.vStr6 = myInv.GDate;
                page.vOnLine = "";

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont8 = new iTextSharp.text.Font(nationalBase, 8f, iTextSharp.text.Font.NORMAL); iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont12 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------
                document.Open();
                //-------------------------------------------------------------------------------------------

                int ColCount = 3;
                var cols = new[] { 80, 550, 70 };
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                table.AddCell(cell);

                PdfPTable TblInside = new PdfPTable(3);
                var colsInside = new[] { 100, 340, 100 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                PdfPCell cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                PdfPCell cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase(HDate.RotateDate2(myInv.HDate) + " هـ ", nationalTextFont);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont12);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.GDate + " م ", nationalTextFont);
                TblInside.AddCell(cell0);

                table.AddCell(cellInside);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Date", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);     // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n\r\n" + "بيانات المرسل و المرسل إليه", nationalTextFont);
                table.AddCell(cell);

                TblInside = new PdfPTable(3);
                colsInside = new[] { 140, 300, 100 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("الاســم:", nationalTextFont);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Name, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consigner Name", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("رقم الهوية:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.IDNo + " " + (myInv.IDType == 0 ? "الهوية" : "بطاقة"), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("I.D.No./Iqama", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مصدرها/تاريخها:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.IDFrom + "   " + myInv.IDDate, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Place of Issue/Date", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("العنوان:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Address + (myInv.MobileNo != "" ? " جوال رقم " + myInv.MobileNo : ""), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Address", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("الايميل:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Mail, nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Email", nationalTextFont2);
                TblInside.AddCell(cell0);


                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مكان الشحن:", nationalTextFont);
                TblInside.AddCell(cell0);

                string City = "";
                Cities myCity = new Cities();
                myCity.Branch = short.Parse(Session["Branch"].ToString());
                myCity.Code = myInv.PlaceofLoading;
                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                          where sitm.Code == myCity.Code
                          select sitm).FirstOrDefault();
                if (myCity != null) City = myCity.Name1;

                cell0.Phrase = new iTextSharp.text.Phrase(City, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Place of Loading", nationalTextFont2);
                TblInside.AddCell(cell0);

                City = "";
                myCity = new Cities();
                myCity.Branch = short.Parse(Session["Branch"].ToString());
                myCity.Code = myInv.Destination;
                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                          where sitm.Code == myCity.Code
                          select sitm).FirstOrDefault();
                if (myCity != null) City = myCity.Name1;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("جهه الترحيل:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(City, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Destination", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("أسم المستلم:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.RecName, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consignee Name", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("عنوان المستلم:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.RecAddress + (myInv.RecMobileNo != "" ? " جوال رقم " + myInv.RecMobileNo : ""), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consignee Address", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("الايميل:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.RecMail, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Email", nationalTextFont2);
                TblInside.AddCell(cell0);


                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مدة التسليم:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(" خلال " + moh.DaysToString[(int)myInv.DPeriod], nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Delivery Period", nationalTextFont2);
                TblInside.AddCell(cell0);

                table.AddCell(cellInside);


                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n\r\n" + "Consigner and Consignee Information", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n" + "بيانات الشحنة المرسلة", nationalTextFont);
                table.AddCell(cell);

                if (myInv.ShipType == 0)
                {
                    TblInside = new PdfPTable(6);
                    colsInside = new[] { 100, 100, 100, 100, 100, 100 };
                    TblInside.SetWidths(colsInside);
                    TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cellInside = new PdfPCell(TblInside);
                    cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cellInside.PaddingRight = 0;

                    cell0 = new PdfPCell();
                    cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell0.FixedHeight = 15f;
                    //cell0.Border = 0;
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell0.Phrase = new iTextSharp.text.Phrase("نوع الشحنة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(ShipType[(int)myInv.Unit], nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Type", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الوحدة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(ShipUnit[(int)myInv.Unit], nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Unit", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //
                    cell0.Phrase = new iTextSharp.text.Phrase("نوع التغليف", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(CoverType[(int)myInv.CoverType], nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Cover", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("المقاس", nationalTextFont);
                    TblInside.AddCell(cell0);

                    if (myInv.CoverType == 2) cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    else cell0.Phrase = new iTextSharp.text.Phrase(CoverSize[(int)myInv.CoverSize], nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Size", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //
                    cell0.Phrase = new iTextSharp.text.Phrase("عدد القطع", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Qty.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("No. of Pcs", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("وزن الشحنة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Weight.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Weight", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //
                    cell0.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Amount.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Amount", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الغرض من الشحنة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(ShipUse[(int)myInv.ShUse], nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Purpose", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //
                    cell0.Phrase = new iTextSharp.text.Phrase("وصف الشحنة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 4;
                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.ShRemark, nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 1;
                    cell0.Phrase = new iTextSharp.text.Phrase("Description", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //

                    //
                    cell0.Phrase = new iTextSharp.text.Phrase("ملاحظات", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 4;
                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.ShNote, nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 1;
                    cell0.Phrase = new iTextSharp.text.Phrase("Remark", nationalTextFont2);
                    TblInside.AddCell(cell0);
                    //
                    table.AddCell(cellInside);
                }
                else
                {
                    TblInside = new PdfPTable(5);
                    colsInside = new[] { 100, 100, 100, 250, 50 };
                    TblInside.SetWidths(colsInside);
                    TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cellInside = new PdfPCell(TblInside);
                    cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cellInside.PaddingRight = 0;

                    cell0 = new PdfPCell();
                    cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell0.FixedHeight = 15f;
                    //cell0.Border = 0;
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell0.Phrase = new iTextSharp.text.Phrase("م", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("وصف الشحنة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("العدد", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("السعر", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                    ShipDetails myInv2 = new ShipDetails();
                    myInv2.Branch = short.Parse(Session["Branch"].ToString());
                    myInv2.VouLoc = AreaNo;
                    myInv2.VouNo = MyNumber;
                    double tot = 0;
                    foreach (ShipDetails itm in myInv2.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                    {
                        cell0.Phrase = new iTextSharp.text.Phrase(itm.FNo.ToString(), nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase(itm.Name, nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase(itm.Qty.ToString(), nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase(itm.Price.ToString(), nationalTextFont);
                        TblInside.AddCell(cell0);

                        cell0.Phrase = new iTextSharp.text.Phrase((itm.Price * itm.Qty).ToString(), nationalTextFont);
                        TblInside.AddCell(cell0);
                        tot += (double)(itm.Price * itm.Qty);
                    }
                    cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);
                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(tot.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    //---------------------------------------------------------------------------------------------------------------
                    //-------------------------------------------------------------------------------------------------------------------
                    cell0.Phrase = new iTextSharp.text.Phrase("نوع الخصم", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.DiscountTerm, nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Term", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الخصم", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Discount", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Discount.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    //-------------------------------------------------------------------------------------------------------------------
                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الصافي", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("Net", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase((myInv.Amount - myInv.Discount).ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);
                    //-------------------------------------------------------------------------------------------------------------------
                    cell0.Phrase = new iTextSharp.text.Phrase("اجمالي " + moh.doTax(myInv.GDate,1), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(myInv.Tax.ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(moh.doTax(myInv.GDate, 2), nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("الاجمالي شامل الضريبة", nationalTextFont);
                    TblInside.AddCell(cell0);

                    cell0.Colspan = 1;
                    cell0.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase((myInv.Amount - myInv.Discount + myInv.Tax).ToString(), nationalTextFont);
                    TblInside.AddCell(cell0);
                    //-------------------------------------------------------------------------------------------------------------------
























                    table.AddCell(cellInside);
                }


                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n" + "The Consignment Information", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("طريقة الدفع", nationalTextFont);
                table.AddCell(cell);

                TblInside = new PdfPTable(6);
                colsInside = new[] { 100, 100, 100, 100, 100, 100 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell0.Border = 0;
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                //                
                cell0.Phrase = new iTextSharp.text.Phrase("نقداً", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.CashAmount.ToString(), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Cash", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("شبكة", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.ShabakaAmount.ToString(), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Mada", nationalTextFont2);
                TblInside.AddCell(cell0);
                //
                cell0.Phrase = new iTextSharp.text.Phrase("أجل فرع", nationalTextFont);
                TblInside.AddCell(cell0);

                if (myInv.Site == "-1") cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                else
                {
                    CostCenter myCostCenter = new CostCenter();
                    myCostCenter.Branch = short.Parse(Session["Branch"].ToString());
                    if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), myCostCenter.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCostCenter.Code = myInv.Site;
                    myCostCenter = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                                    where citm.Code == myCostCenter.Code
                                    select citm).FirstOrDefault();
                    if (myCostCenter != null) cell0.Phrase = new iTextSharp.text.Phrase(myCostCenter.Name1, nationalTextFont);
                    else cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                }
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Branch", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("بمبلغ", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.SiteAmount.ToString(), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Site", nationalTextFont2);
                TblInside.AddCell(cell0);
                //
                cell0.Phrase = new iTextSharp.text.Phrase("حساب عميل", nationalTextFont);
                TblInside.AddCell(cell0);

                if (myInv.Customer == "-1") cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                else
                {
                    Acc myacc = new Acc();
                    myacc.Branch = short.Parse(Session["Branch"].ToString());
                    myacc.Code = myInv.Customer;
                    if (myacc.GetAcc2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                    {
                        cell0.Phrase = new iTextSharp.text.Phrase(myacc.Name1, nationalTextFont);
                    }
                    else cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                }
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Customer", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("بمبلغ", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.CustomerAmount.ToString(), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Credit", nationalTextFont2);
                TblInside.AddCell(cell0);
                //

                cell0.FixedHeight = 14f;
                cell0.Colspan = 2;
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont2);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("مرسل الشحنة", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("موظف الأستقبال", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("(قرأت الشروط بالخلف و أوافق عليها)", nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("المستلم", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                string UserName = "";
                TblUsers ax = new TblUsers();
                if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                ax.UserName = myInv.UserName;
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax != null)
                {
                    UserName = ax.FName;
                }

                cell0.Phrase = new iTextSharp.text.Phrase("الاســم: " + UserName, nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("الاســم: " + myInv.Name, nationalTextFont2);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("الاســم: " + myInv.RecName, nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont2);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);
                TblInside.AddCell(cell0);

                table.AddCell(cellInside);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("Method of Payment", nationalTextFont2);
                table.AddCell(cell);

                document.Add(table);
                cols = new[] { 700 };
                table = new PdfPTable(1);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;
                //cell.Phrase = new iTextSharp.text.Phrase("شركة ناقلات البرية - لمتابعة شحنتك على موقعنا www.naqelat.net للاستفسار اتصل على الرقم الموحد 920028833 ", nationalTextFont);
                cell.Phrase = new iTextSharp.text.Phrase("شركة ناقلات البرية - لمتابعة شحنتك على موقعنا www.naqelat.net للاستفسار اتصل على 0115283100 100 خط \n الرقم الموحد 920028833 (تخضع المكالمة لرسوم شركة الأتصالات) ", nationalTextFont);
                table.AddCell(cell);
                //-------------------------------------------------------------------------------------------
                document.Add(table);

                if (Request.QueryString["DoubleSide"] != null)
                {
                    if (Request.QueryString["DoubleSide"].ToString() == "1")
                    {
                        document.NewPage();
                        ColCount = 3;
                        cols = new[] { 28, 350, 322 };
                        table = new PdfPTable(ColCount);
                        table.TotalWidth = document.PageSize.Width; //100f;
                        table.SetWidths(cols);
                        cell = new PdfPCell();
                        cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                        cell.Border = 0;

                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell.Phrase = new iTextSharp.text.Phrase("شروط النقل البري", nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("LAND TRANSIT CONDITIONS", nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        table.AddCell(cell);

                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("1- تعنى العبارة (المقاول) و (الناقل) في هذه الشروط – مؤسسة الناقلات البرية العربية – أو و كلائه وأي شخص أو أشخاص يقومون بنقل السيارات بموجب عقد من الباطن مع المقاول", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("In these Land Transit Condition the 'Contractor' or 'Transporter' means Arab Land Transporters Est. And includes the servants. Agents and any person or persons effecting the transport of vehicles for Contractor and/or under a sub-contract with the Contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[1]", nationalTextFont);
                        table.AddCell(cell);


                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("2- شروط النقل هذه جزء لا يتحزأ من مستندات العقد المبرم مع العميل – ووثيقة رسمية لا يحق لأي شخص تعديل أي منها في أي وجه من الأوجه إلا بموجب أتفاق مستبق وتفويضاً صريحاً بذلك من المقاول", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("These Land Transit Conditions are part of the Contract documents. Witch are executed with the customer. Therefore no one will have any authority to vary these conditions in any way unless he is expressly authorized to do so by the contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[2]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("3- يجب على العميل التأكد من صحة كافة البيانات المعبأة من قبله أو من يمثله والموضحة في هذه الاتفاقية وإذا اتضح عدم صحة أي من هذه البيانات فإن العميل سيتحمل كافة ما ينتج عن ذلك.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("It is the customer's responsibility to make sure of the required relevant information that he or his representative should fill out on the cover side of this contract, if any given information are wrong customer is responsible for consequence", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[3]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("4- تقتصر مسؤولية المقاول إزاء العميل عن ضرر سيارته / سياراته على المسؤولية التي تغطيها بوليصة التأمين ولا يكون الناقل مسؤولاً عن الأضرار غير المباشرة أو المترتبة عن الخسائر والأضرار الناتجة عن تعرض السيارة للأعطال الميكانيكية و الكهربائية أو كسر بالزجاج أو أي أضرار أخرى ناتجة بسبب حادث مروري قبل استلام السيارة من قبل الناقل ، كما لا يتحمل الناقل أي مسؤولية تجاه تلف أو فقدان الأمتعة الشخصية داخل السيارة.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor's liability to the customer for damage or loss of his vehicle/vehicles shall be limited to that covered by the Contractor's  Land Transit Insurance policy. The Contractor shall not be limited to that covered by the Contract's land Transit Insurance police. The Contractor shall not be liable forindirect  or consequential damage to the vehicle/vehicles; or  loss or damage happen Electro-Mechanical work or break down of grass or any other damage due to traffic accident before receiving the vehicle by Transporter. Also the Transporter is not liable for the loss or damage to the personal effects or luggage inside the vehicle", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[4]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("5- على المقاول أن يبذل كل جهد معقول لضمان توريد السيارة / السيارات بأمان إلى العنوان الموضح على وجه هذه الاتفاقية وتسليمها إلى العميل أو من ينوب عنه.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor  shall  make reasonable effect to see that the vehicle/vehicles are safely delivered at the address indicated on the cover side of this contract  to an apparently member of the consignee's staff", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[5]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("6- الناقل غير مسؤول عن أي أضرار للسيارة بعد استلام العميل لها أو من ينوب عنه وتقتصر مسؤولية الناقل في الفترة من تاريخ الاستلام إلى تاريخ التسليم.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor shall  not be liable  for any damage or loss to the vehicle after receipt by customer or his representative. The Transporter liability towards vehicle/vehicles are only limited during the period from the date of received to the time of delivery", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[6]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("7- يلتزم العميل باستلام سيارته أو من ينوب عنه مباشرة في موقع التسليم للمقاول والمدن في هذه الاتفاقية وفي مدة أقصاها سبعة أيام من تاريخ وصول السيارة وبعد هذا التاريخ مباشرة يلتزم العميل بدفع مبلغ وقدره (10) ريالات رسوم أرضية عن كل يوم تأخير.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The costumer is obliged to receive his vehicle from Contractor's place of delivery mentioned in this contract within seven days of arrived .After passing this date the costumer has to pay demurrage charges SR: 10 per each day", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[7]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("8- يمنع منعاً باتاً وضع أي مواد قالبة للاشتعال أو أسلحة غير مرخصة أو أي ممنوعات أخرى يحظر تداولها طبقاً للأنظمة المعمول بها في المملكة العربية السعودية داخل السيارة المنقولة ويتحمل العميل كامل المسؤولية تجاه ما يترتب على ذلك ، كما أنه الناقل غير مسؤول عن ترك أي أشياء ثمينة من قبل العميل داخل السيارة عند نقلها.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("It is totally prohibited to place inside the transported vehicle any inflammable item or arms without license or any other forbidden goods according  to the law of Kingdom  of Saudi Arabia and the customer shall be fully responsible for violating this act. Also the Transporter is not responsible for any valuable things left out by customer in the vehicle", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[8]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("9- تدفع رسوم النقل الخاصة بالمقابل بواسطة العميل دون أن يؤثر ذلك على حقوق المقاول ضد المرسل أو المرسل إليه أو أي شخص أخر ويجب ألا يؤخذ أي أدعاء كمبرر لتأخير أو احتجاز مدفوعات مستحقة للمقاول أو مسؤوليات يتكبدها المقاول.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor 's charge shall by  payable by the customer without prejudice to the Contractor 's right against the consignor, consignee or any other person. A claim or counterclaim shall not be made the reason for deferring or withholding payment of money or liabilities owing to the Contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[9]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("10- على العميل أن يبري ذمة المقاول ويحميه ضد كل الدعاوي والتكاليف والمطالبات التي تقدم من أي جهة كانت و تتجاوز قيمتها المسؤوليات القانونية للمقاول وفقاً لأحكام هذه الشروط", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The customer shall save harmless and keep the Contractor indemnified from and against all claim, cost and demands by whosoever made or preferred in excess of the legal liabilities of the Contractor under the terms of these conditions", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[10]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("11- في حالة الغاء اتفاقية الشحن يلتزم العميل بسداد مبلغ 50 ريال مصاريف أدارية", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("In case of cancellation shipping invoice customer shall pay an amount of SR 50 administrative expenses", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[11]", nationalTextFont);
                        table.AddCell(cell);

                        document.Add(table);
                    }
                }

                document.Close();
            }
            catch (Exception)
            {
            }
        }

        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage51 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, vStr5, vStr6, UserName, PageNo, vCompanyName, vOnLine , Customer;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                string arialunicodepath2 = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                BaseFont nationalBase2;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                nationalBase2 = BaseFont.CreateFont(arialunicodepath2, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase2, 12f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(4);
                var cols2 = new[] { 300, 100, 400, 400 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                if(moh.doTax(vStr6,Customer)) cell2.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية" + "\n" + "للنقل والتخزين - " + vStr4 + "\n" + "الرقم الضريبي#310330321200003", nationalTextFont16);
                else cell2.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية" + "\n" + "للنقل والتخزين - " + vStr4, nationalTextFont16);
                //cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                if (vOnLine == "") cell2.Phrase = new iTextSharp.text.Phrase("\n" + "إتفاقية شحن بضاعة (فاتورة) \n رقم " + moh.MakeMask(DateTime.Parse(vStr6).Month.ToString(), 2) + moh.MakeMask(DateTime.Parse(vStr6).Day.ToString(), 2) + " " + vStr3 + " L" + (100 + int.Parse(vStr5)).ToString(), nationalTextFont16);
                else cell2.Phrase = new iTextSharp.text.Phrase("\n" + "إتفاقية شحن بضاعة (فاتورة) \n رقم L" + vOnLine, nationalTextFont16);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                var TextCell = new PdfPCell(headerTbl.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //TextCell.Border = 0;
                TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = "L" + vStr2 + vStr3;
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.PaddingTop = 10;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                headerTbl.AddCell(TextCell);



                //var cols = new[] { 200, 150, 150, 300, 350 };
                //document.Open();
                //PdfPTable table = new PdfPTable(5);
                //table.TotalWidth = document.PageSize.Width; //100f;
                //table.SetWidths(cols);
                //PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell2.Border = 0;
                ////cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                //cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //PdfPCell cell22 = new PdfPCell();
                //cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                //cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                //table.AddCell(cell2);

                //cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                //cell2.Phrase = new iTextSharp.text.Phrase("إتفاقية شحن (فاتورة) رقم", nationalTextFont16);
                //table.AddCell(cell2);

                //cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                //cell22.Phrase = new iTextSharp.text.Phrase(txtVouNo.Text + lblBranch.Text, nationalTextFont16);
                //table.AddCell(cell22);

                //cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                //table.AddCell(cell2);


                //var TextCell = new PdfPCell(table.DefaultCell);
                //TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                ////TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                //PdfContentByte cb = writer.DirectContent;
                //var bc128 = new Barcode128();
                //bc128.CodeType = Barcode.CODE128;
                //bc128.Code = lblBranch.Text + txtVouNo.Text;
                //bc128.GenerateChecksum = true;
                //bc128.AltText = "";
                //bc128.StartStopText = true;


                ////bc128.BarHeight = 8;
                ////bc128.Extended = true; 

                ////bc128.Baseline = 20;   // Doesn't affect rendering.
                ////bc128.Size = 20;       // Doesn't affect rendering.
                ////bc128.BarHeight = 60;  // DOES affect rendering.
                ////bc128.X = 2;                          

                //TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                ////cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                //var bi = bc128.CreateImageWithBarcode(cb, null, null);
                //bi.ScalePercent(100);
                //bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                //TextCell.AddElement(bi);

                ////cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                ////table.AddCell(cell);
                //table.AddCell(TextCell);
                //document.Add(table);


                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);


                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }


        #endregion

        #region 52 Print of Price List
        public void PrintPriceList(int MyNumber)
        {
            try
            {
                PriceList myInv = new PriceList();
                myInv.VouNo = MyNumber;
                myInv = myInv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myInv == null) return;

                String Username = "";
                String UserSignImage = "";
                TblUsers ax = new TblUsers();
                if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                ax.UserName = myInv.UserName;
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax != null)
                {
                    Username = ax.FName;
                    UserSignImage = ax.Sign;
                    if (!string.IsNullOrEmpty(UserSignImage))
                    {
                        MyConfig mysetting = new MyConfig();
                        mysetting.Branch = short.Parse(Session["Branch"].ToString());
                        if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mysetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        mysetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                        if (mysetting != null)
                        {
                            UserSignImage = mysetting.ImagePath + ax.Sign;
                        }
                    }
                }



                PriceListDetails myInv2 = new PriceListDetails();
                List<PriceListDetails> InvItems = new List<PriceListDetails>();
                myInv2.VouNo = MyNumber;
                InvItems = myInv2.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (InvItems == null) return;

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 85, 80);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage52 page = new pdfPage52();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.Customer = "-1";
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                page.vStr4 = "قسم التشغيل"; // SiteInfo.Name1;                    //((Label)this.Master.FindControl("LblBranchName")).Text;    //Session["AreaName"].ToString();
                page.vStr2 = "";
                page.vStr3 = MyNumber.ToString();
                page.vStr5 = AreaNo;
                page.vStr6 = myInv.GDate;
                page.vOnLine = "";

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont8 = new iTextSharp.text.Font(nationalBase, 8f, iTextSharp.text.Font.NORMAL); 
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFontU = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.UNDERLINE);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont12 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont12Blue = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL,iTextSharp.text.BaseColor.BLUE);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont9 = new iTextSharp.text.Font(nationalBase, 9f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------
                document.Open();
                //-------------------------------------------------------------------------------------------

                int ColCount = 5;
                var cols = new[] { 150, 100,300, 150 , 100 };
                PdfPTable table0 = new PdfPTable(ColCount);
                table0.TotalWidth = document.PageSize.Width; //100f;
                table0.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table0.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.FixedHeight = 20f;
                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                table0.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(HDate.RotateDate2(myInv.HDate) + " هـ ", nationalTextFont);
                table0.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table0.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الموافق", nationalTextFont);
                table0.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myInv.GDate + " م ", nationalTextFont);
                table0.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.FixedHeight = 15f;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                table0.AddCell(cell);
                table0.AddCell(cell);
                table0.AddCell(cell);
                cell.FixedHeight = 20f;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الرقم", nationalTextFont);
                table0.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/ع/" + DateTime.Parse(myInv.GDate).Month.ToString() + "/" + DateTime.Parse(myInv.GDate).Year.ToString(), nationalTextFont);
                table0.AddCell(cell);
                //---------------------------------------------------------------------------------------------
               // cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
              //  table.AddCell(cell);
              //  table.AddCell(cell);
              //  table.AddCell(cell);
              //  table.AddCell(cell);
              //  table.AddCell(cell);
                //---------------------------------------------------------------------------------------------

                cell.Colspan = 5;
                cell.Phrase = new iTextSharp.text.Phrase("السادة/" + myInv.Name + "        المحترمين", nationalTextFont);
                table0.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("السلام عليكم ورحمه الله وبركاته", nationalTextFont);
                table0.AddCell(cell);
                //cell.FixedHeight = 15f;
                //cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                //table0.AddCell(cell);
                cell.FixedHeight = 20f;
                cell.Phrase = new iTextSharp.text.Phrase("الموضوع/" + myInv.Subject, nationalTextFont);
                table0.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("بناء على طلبكم المقدم لنا نقدم لكم عرضنا في الجدول المرفق وفقاً للملاحظات التالية.", nationalTextFont);
                table0.AddCell(cell);
                document.Add(table0);
                //--------------------------------------------------------------------------------------------------------

                if (myInv.VouType == 0)
                {
                    ColCount = 9;
                    cols = new[] { 65,60, 60, 50, 115, 115, 160, 160, 30 };
                }
                else
                {
                    ColCount = 8;
                    cols = new[] { 65,60, 60, 50, 215, 160, 160, 30 };
                }
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("م", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("من", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("إلى", nationalTextFont);
                table.AddCell(cell);
                if (myInv.VouType == 0)
                {
                    cell.Phrase = new iTextSharp.text.Phrase("نوع السيارة", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase("الطراز", nationalTextFont);
                    table.AddCell(cell);
                }
                else
                {
                    cell.Phrase = new iTextSharp.text.Phrase("وصف الشحنة", nationalTextFont);
                    table.AddCell(cell);
                }
                cell.Phrase = new iTextSharp.text.Phrase("العدد", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("السعر", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("الضريبة", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                table.AddCell(cell);
                //------------------------------

                double tot = 0;
                int Qty = 0;
                int i = 0;
                foreach (PriceListDetails itm in InvItems)
                {
                    if (cell.BackgroundColor == iTextSharp.text.BaseColor.WHITE) cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                    else cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell.Phrase = new iTextSharp.text.Phrase(itm.FNo.ToString(), nationalTextFont8);
                    table.AddCell(cell);
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    Cities myCity = new Cities();
                    myCity.Branch = short.Parse(Session["Branch"].ToString());
                    myCity.Code = itm.PlaceofLoading;
                    if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                              where sitm.Code == myCity.Code
                              select sitm).FirstOrDefault();
                    cell.Phrase = new iTextSharp.text.Phrase((myCity != null ? myCity.Name1 + " - " : "") + itm.From2, nationalTextFont8);
                    table.AddCell(cell);

                    myCity = new Cities();
                    myCity.Branch = short.Parse(Session["Branch"].ToString());
                    myCity.Code = itm.Destination;
                    if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                              where sitm.Code == myCity.Code
                              select sitm).FirstOrDefault();
                    cell.Phrase = new iTextSharp.text.Phrase((myCity != null ? myCity.Name1 + " - " : "") + itm.To2, nationalTextFont8);
                    table.AddCell(cell);

                    if (myInv.VouType == 0)
                    {
                        string CarType = "";
                        CarType myCarType = new CarType();
                        myCarType.Branch = short.Parse(Session["Branch"].ToString());
                        myCarType.Code = itm.CarType;
                        myCarType = myCarType.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                        if (myCarType != null) CarType = myCarType.Name1;
                        cell.Phrase = new iTextSharp.text.Phrase(CarType, nationalTextFont8);
                        table.AddCell(cell);

                        CarType = "";
                        myCarType = new CarType();
                        myCarType.Branch = short.Parse(Session["Branch"].ToString());
                        myCarType.Code = itm.Model;
                        myCarType = myCarType.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                        if (myCarType != null) CarType = myCarType.Name1;

                        cell.Phrase = new iTextSharp.text.Phrase(CarType, nationalTextFont8);
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell.Phrase = new iTextSharp.text.Phrase(itm.Name, nationalTextFont8);
                        table.AddCell(cell);
                    }

                    cell.Phrase = new iTextSharp.text.Phrase(itm.Qty.ToString(), nationalTextFont);
                    table.AddCell(cell);
                    Qty += (int)itm.Qty;

                    cell.Phrase = new iTextSharp.text.Phrase(itm.Price.ToString(), nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase((itm.Price * moh.doTax(myInv.GDate)).ToString(), nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase((itm.Price * itm.Qty * (1+moh.doTax(myInv.GDate))).ToString(), nationalTextFont);
                    table.AddCell(cell);

                    tot += (double)itm.Total;
                    i++;

                    if (false && InvItems.Count() > 10 && i == 10)
                    {
                        document.Add(table);

                        ColCount = 1;
                        cols = new[] { 800 };
                        PdfPTable table1 = new PdfPTable(ColCount);
                        table1.TotalWidth = document.PageSize.Width; //100f;
                        table1.SetWidths(cols);
                        table1.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell.FixedHeight = 10f;
                        cell.Border = PdfPCell.TOP_BORDER;
                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                        table1.AddCell(cell);
                        cell.FixedHeight = 16f;
                        cell.Border = 0;
                        cell.Phrase = new iTextSharp.text.Phrase("ملاحظات:-", nationalTextFontU);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- الاستلام من مكان العميل المحدد وتسليم في مكان العميل المحدد.", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- شركتنا لديها أسطول جديد متنوع الأحجام مزودا بأنظمة تتبع مركبات نظام ملاحي لتسهيل وسرعة إنجاز العمل.", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- شركتنا لديها تغطية تأمين على البضائع المحملة سواء خلال الرحلة أو أثناء الشحن والتفريغ وذلك من خلال عقدنا مع أفضل", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("   شركات التأمين في هذا المجال. ", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- شركتنا تمتلك أنظمة تشغيل (سوفت وير) متقدمة مربوطة بنظام تتبع مركبات ونظام ملاحي وشبكة فروع في مختلف مدن المملكة", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- نقوم بتقديم اسم مستخدم وكلمة مرور لعملائنا الكبار والمميزين من خلاله يمكنه إدارة شحناته (بتحرير فواتير الشحن ومتابعة", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("   مراحل شحنها وتوصيلها للمكان المحدد لحظة بلحظة، وكذلك متابعة حسابه المسجل لدينا)", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- مدة تسليم السيارات في الحمولة الكاملة من يومين إلى ثلاث أيام", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- مدة تسليم السيارات في السطحة الخاصة خلال 24 ساعة", nationalTextFont9);
                        table1.AddCell(cell);

                        cell.FixedHeight = 10f;
                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                        table1.AddCell(cell);
                        cell.FixedHeight = 20f;
                        //  cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        //  table.AddCell(cell);
                        document.Add(table1);


                        ColCount = 3;
                        cols = new[] { 200, 200, 400 };
                        PdfPTable table2 = new PdfPTable(ColCount);
                        table2.TotalWidth = document.PageSize.Width; //100f;
                        table2.SetWidths(cols);
                        table2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell.Phrase = new iTextSharp.text.Phrase("الهاتف الموحد لخدمة للعميل خلال ساعات اليوم", nationalTextFont12);
                        table2.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        table2.AddCell(cell);


                        cell.Phrase = new iTextSharp.text.Phrase("الناقلات البرية العربية ", nationalTextFont);
                        table2.AddCell(cell);
                        //--------------------------------------------------------------------------------

                        //cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        //table.AddCell(cell);

                        //cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        //table.AddCell(cell);

                        //cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        //table.AddCell(cell);
                        //--------------------------------------------------------------------------------

                        cell.Phrase = new iTextSharp.text.Phrase("                    920028833", nationalTextFont12Blue);
                        table2.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        table2.AddCell(cell);

                        if (UserSignImage != "")
                        {
                            iTextSharp.text.Image logoSign2 = iTextSharp.text.Image.GetInstance(UserSignImage);
                            logoSign2.ScalePercent(100);
                            PdfPCell cellS20 = new PdfPCell(logoSign2);
                            cellS20.Border = 0;
                            cellS20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            table2.AddCell(cellS20);

                        }
                        else
                        {
                            cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                            table2.AddCell(cell);
                            //--------------------------------------------------------------------------------
                            cell.FixedHeight = 15f;
                            cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                            table2.AddCell(cell);

                            cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                            table2.AddCell(cell);

                            cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                            table2.AddCell(cell);
                            //--------------------------------------------------------------------------------
                        }
                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        table2.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        table2.AddCell(cell);


                        iTextSharp.text.Image logo2 = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/Stamp.png"));
                        logo2.ScalePercent(100);
                        PdfPCell cell20 = new PdfPCell(logo2);
                        //cell20.PaddingTop = 0;
                        //cell20.PaddingRight = 30;
                        cell20.Border = 0;
                        cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        table2.AddCell(cell20);
                        //----------------------------------------------------------------------------------------
                        document.Add(table2);

                        document.NewPage();
                        ColCount = 5;
                        cols = new[] { 150, 100, 300, 150, 100 };
                        table0 = new PdfPTable(ColCount);
                        table0.TotalWidth = document.PageSize.Width; //100f;
                        table0.SetWidths(cols);
                        cell = new PdfPCell();
                        cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        table0.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell.FixedHeight = 20f;
                        //-------------------------------------------------------------------------------------------
                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Border = 0;
                        cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                        table0.AddCell(cell);

                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(HDate.RotateDate2(myInv.HDate) + " هـ ", nationalTextFont);
                        table0.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        table0.AddCell(cell);

                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase("الموافق", nationalTextFont);
                        table0.AddCell(cell);

                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(myInv.GDate + " م ", nationalTextFont);
                        table0.AddCell(cell);

                        //-------------------------------------------------------------------------------------------
                        cell.FixedHeight = 15f;
                        cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                        table0.AddCell(cell);
                        table0.AddCell(cell);
                        table0.AddCell(cell);
                        cell.FixedHeight = 20f;

                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase("تابع الرقم", nationalTextFont);
                        table0.AddCell(cell);

                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/ع/" + DateTime.Parse(myInv.GDate).Month.ToString() + "/" + DateTime.Parse(myInv.GDate).Year.ToString(), nationalTextFont);
                        table0.AddCell(cell);
                        //---------------------------------------------------------------------------------------------
                        // cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        //  table.AddCell(cell);
                        //  table.AddCell(cell);
                        //  table.AddCell(cell);
                        //  table.AddCell(cell);
                        //  table.AddCell(cell);
                        //---------------------------------------------------------------------------------------------

                        cell.Colspan = 5;
                        cell.Phrase = new iTextSharp.text.Phrase("السادة/" + myInv.Name + "        المحترمين", nationalTextFont);
                        table0.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("السلام عليكم ورحمه الله وبركاته", nationalTextFont);
                        table0.AddCell(cell);
                        cell.FixedHeight = 15f;
                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                        table0.AddCell(cell);
                        cell.FixedHeight = 20f;
                        cell.Phrase = new iTextSharp.text.Phrase("الموضوع/" + myInv.Subject, nationalTextFont);
                        table0.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("بناء على طلبكم المقدم لنا نقدم لكم عرضنا في الجدول المرفق وفقاً للملاحظات التالية.", nationalTextFont);
                        table0.AddCell(cell);
                        document.Add(table0);
                        //--------------------------------------------------------------------------------------------------------

                        if (myInv.VouType == 0)
                        {
                            ColCount = 9;
                            cols = new[] { 65,60, 60, 50, 105, 115, 160, 160, 30 };
                        }
                        else
                        {
                            ColCount = 8;
                            cols = new[] { 65,60, 60, 50, 215, 160, 160, 30 };
                        }
                        table = new PdfPTable(ColCount);
                        table.TotalWidth = document.PageSize.Width; //100f;
                        table.SetWidths(cols);
                        table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        cell = new PdfPCell();
                        cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase("م", nationalTextFont);
                        table.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("من", nationalTextFont);
                        table.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("إلى", nationalTextFont);
                        table.AddCell(cell);
                        if (myInv.VouType == 0)
                        {
                            cell.Phrase = new iTextSharp.text.Phrase("نوع السيارة", nationalTextFont);
                            table.AddCell(cell);
                            cell.Phrase = new iTextSharp.text.Phrase("الطراز", nationalTextFont);
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell.Phrase = new iTextSharp.text.Phrase("وصف الشحنة", nationalTextFont);
                            table.AddCell(cell);
                        }
                        cell.Phrase = new iTextSharp.text.Phrase("العدد", nationalTextFont);
                        table.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("السعر", nationalTextFont);
                        table.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("الضريبة", nationalTextFont);
                        table.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                        table.AddCell(cell);
                    }
                }
                if ((bool)myInv.PrintTot)
                {

                    //
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(217, 241, 255);
                    //cell.Phrase = new iTextSharp.text.Phrase("الاجمالي : مبلغ وقدرة  " + moh.NTOC(tot, 1), nationalTextFont9);
                    cell.Phrase = new iTextSharp.text.Phrase("الاجمالي :   " , nationalTextFont9);
                    if (myInv.VouType == 0) cell.Colspan = 5;
                    else cell.Colspan = 4;
                    table.AddCell(cell);
                    cell.Colspan = 1;
                    cell.Phrase = new iTextSharp.text.Phrase(Qty.ToString(), nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(tot.ToString(), nationalTextFont);
                    table.AddCell(cell);

                    //                    
                    
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(217, 241, 255);
                    cell.Phrase = new iTextSharp.text.Phrase(moh.doTax(myInv.GDate,1) + ":   "  , nationalTextFont9);
                    if (myInv.VouType == 0) cell.Colspan = 5;
                    else cell.Colspan = 4;
                    table.AddCell(cell);
                    cell.Colspan = 1;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    double tax = 0;
                    if (DateTime.Parse(myInv.GDate) >= DateTime.Parse("01/01/2018"))
                    {
                        tax = tot * moh.doTax(myInv.GDate);
                        cell.Phrase = new iTextSharp.text.Phrase((tot * moh.doTax(myInv.GDate)).ToString(), nationalTextFont);
                    }
                    else cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    //
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(217, 241, 255);
                    cell.Phrase = new iTextSharp.text.Phrase("الاجمالي شامل الضريبة : مبلغ وقدرة  " + moh.NTOC(tot + tax, 1), nationalTextFont9);
                    if (myInv.VouType == 0) cell.Colspan = 5;
                    else cell.Colspan = 4;
                    table.AddCell(cell);
                    cell.Colspan = 1;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase((tot + tax).ToString(), nationalTextFont);
                    table.AddCell(cell);

                }

              //  document.Add(table);                
                //---------------------------------------------------------------------------------------------------------
                ColCount = 1;
                cols = new[] { 800 };
                PdfPTable table10 = new PdfPTable(ColCount);
                table10.TotalWidth = document.PageSize.Width; //100f;
                table10.SetWidths(cols);
                table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.FixedHeight = 10f;
                cell.Border = PdfPCell.TOP_BORDER;
                cell.Border = 0;
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                table10.AddCell(cell);
                cell.FixedHeight = 16f;
                cell.Border = 0;
                //cell.Phrase = new iTextSharp.text.Phrase("ملاحظات:-", nationalTextFontU);
                //table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- الاستلام من مكان العميل المحدد وتسليم في مكان العميل المحدد.", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- شركتنا لديها أسطول جديد متنوع الأحجام مزودا بأنظمة تتبع مركبات نظام ملاحي لتسهيل وسرعة إنجاز العمل.", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- شركتنا لديها تغطية تأمين على البضائع المحملة سواء خلال الرحلة أو أثناء الشحن والتفريغ وذلك من خلال عقدنا مع أفضل", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("   شركات التأمين في هذا المجال. ", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- شركتنا تمتلك أنظمة تشغيل (سوفت وير) متقدمة مربوطة بنظام تتبع مركبات ونظام ملاحي وشبكة فروع في مختلف مدن المملكة", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- نقوم بتقديم اسم مستخدم وكلمة مرور لعملائنا الكبار والمميزين من خلاله يمكنه إدارة شحناته (بتحرير فواتير الشحن ومتابعة", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("   مراحل شحنها وتوصيلها للمكان المحدد لحظة بلحظة، وكذلك متابعة حسابه المسجل لدينا)", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- مدة تسليم السيارات في الحمولة الكاملة من يومين إلى ثلاث أيام", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- مدة تسليم السيارات في السطحة الخاصة خلال 24 ساعة", nationalTextFont9);
                table10.AddCell(cell);
                if (myInv.VouNo == 233 || myInv.VouNo == 234)
                {
                    cell.Phrase = new iTextSharp.text.Phrase("- تحويل كامل مبلغ العرض على حساب الرئيس التنفيذي / إبراهيم بن عبد العزيز الشهيل على مصرف الراجحي رقم ", nationalTextFont9);
                    table10.AddCell(cell);

                    PdfPCell cell0 = new PdfPCell();

                    cell0.Border = 0;
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;

                    cell0.Phrase = new iTextSharp.text.Phrase("SA89 8000 0501 6080 1004 4018", nationalTextFont16);
                    table10.AddCell(cell0);

                }

                cell.FixedHeight = 10f;
                cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                table10.AddCell(cell);
                cell.FixedHeight = 20f;
              //  cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
              //  table.AddCell(cell);
                document.Add(table10);


                ColCount = 3;
                cols = new[] { 200, 200, 400};
                PdfPTable table20 = new PdfPTable(ColCount);
                table20.TotalWidth = document.PageSize.Width; //100f;
                table20.SetWidths(cols);
                table20.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.Phrase = new iTextSharp.text.Phrase("الهاتف الموحد لخدمة للعميل خلال ساعات اليوم", nationalTextFont12);
                table20.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                table20.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase("الناقلات البرية العربية ", nationalTextFont);
                table20.AddCell(cell);
                //--------------------------------------------------------------------------------

                cell.Phrase = new iTextSharp.text.Phrase("                    920028833", nationalTextFont12Blue);
                table20.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                table20.AddCell(cell);

                if (UserSignImage != "")
                {
                    iTextSharp.text.Image logoSign200 = iTextSharp.text.Image.GetInstance(UserSignImage);
                    logoSign200.ScalePercent(100);
                    PdfPCell cellSS20 = new PdfPCell(logoSign200);
                    cellSS20.Border = 0;
                    cellSS20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    table20.AddCell(cellSS20);

                }
                else
                {
                    cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    table20.AddCell(cell);
                    //--------------------------------------------------------------------------------
                    cell.FixedHeight = 15f;
                    cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    table20.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    table20.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    table20.AddCell(cell);
                    //--------------------------------------------------------------------------------
                }
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                table20.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                table20.AddCell(cell);

                iTextSharp.text.Image logo20 = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/Stamp.png"));
                PdfPCell cell200 = new PdfPCell(logo20);
                cell200.Border = 0;
                cell200.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                table20.AddCell(cell200);
                //----------------------------------------------------------------------------------------
                document.Add(table20);

                document.NewPage();
                document.Add(table);
                ColCount = 3;
                cols = new[] { 200, 200, 400 };
                table20 = new PdfPTable(ColCount);
                table20.TotalWidth = document.PageSize.Width; //100f;
                table20.SetWidths(cols);
                table20.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                table20.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                table20.AddCell(cell);

                table20.AddCell(cell200);
                document.Add(table20);

                document.Close();
            }
            catch (Exception)
            {
            }
        }




        /*
        public void PrintPriceList(int MyNumber)
        {
            try
            {
                PriceList myInv = new PriceList();
                myInv.VouNo = MyNumber;
                myInv = myInv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myInv == null) return;

                String Username = "";
                String UserSignImage = "";
                TblUsers ax = new TblUsers();
                ax.UserName = myInv.UserName;
                ax = ax.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (ax != null)
                {
                    Username = ax.FName;
                    UserSignImage = ax.Sign;
                    if (!string.IsNullOrEmpty(UserSignImage))
                    {
                        MyConfig mysetting = new MyConfig();
                        mysetting.Branch = short.Parse(Session["Branch"].ToString());
                        mysetting = mysetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                        if (mysetting != null)
                        {
                            UserSignImage = mysetting.ImagePath + ax.Sign;
                        }
                    }
                }



                PriceListDetails myInv2 = new PriceListDetails();
                List<PriceListDetails> InvItems = new List<PriceListDetails>();
                myInv2.VouNo = MyNumber;
                InvItems = myInv2.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (InvItems == null) return;

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 85, 80);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage52 page = new pdfPage52();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                mySetting = mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.Customer = "-1";
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                page.vStr4 = "قسم التشغيل"; // SiteInfo.Name1;                    //((Label)this.Master.FindControl("LblBranchName")).Text;    //Session["AreaName"].ToString();
                page.vStr2 = "";
                page.vStr3 = MyNumber.ToString();
                page.vStr5 = AreaNo;
                page.vStr6 = myInv.GDate;
                page.vOnLine = "";

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont8 = new iTextSharp.text.Font(nationalBase, 8f, iTextSharp.text.Font.NORMAL); 
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFontU = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.UNDERLINE);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont12 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont12Blue = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL,iTextSharp.text.BaseColor.BLUE);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont9 = new iTextSharp.text.Font(nationalBase, 9f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------
                document.Open();
                //-------------------------------------------------------------------------------------------

                int ColCount = 5;
                var cols = new[] { 150, 100,300, 150 , 100 };
                PdfPTable table0 = new PdfPTable(ColCount);
                table0.TotalWidth = document.PageSize.Width; //100f;
                table0.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table0.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.FixedHeight = 20f;
                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                table0.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(HDate.RotateDate2(myInv.HDate) + " هـ ", nationalTextFont);
                table0.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table0.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الموافق", nationalTextFont);
                table0.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myInv.GDate + " م ", nationalTextFont);
                table0.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.FixedHeight = 15f;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                table0.AddCell(cell);
                table0.AddCell(cell);
                table0.AddCell(cell);
                cell.FixedHeight = 20f;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الرقم", nationalTextFont);
                table0.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/ع/" + DateTime.Parse(myInv.GDate).Month.ToString() + "/" + DateTime.Parse(myInv.GDate).Year.ToString(), nationalTextFont);
                table0.AddCell(cell);
                //---------------------------------------------------------------------------------------------
               // cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
              //  table.AddCell(cell);
              //  table.AddCell(cell);
              //  table.AddCell(cell);
              //  table.AddCell(cell);
              //  table.AddCell(cell);
                //---------------------------------------------------------------------------------------------

                cell.Colspan = 5;
                cell.Phrase = new iTextSharp.text.Phrase("السادة/" + myInv.Name + "        المحترمين", nationalTextFont);
                table0.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("السلام عليكم ورحمه الله وبركاته", nationalTextFont);
                table0.AddCell(cell);
                //cell.FixedHeight = 15f;
                //cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                //table0.AddCell(cell);
                cell.FixedHeight = 20f;
                cell.Phrase = new iTextSharp.text.Phrase("الموضوع/" + myInv.Subject, nationalTextFont);
                table0.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("بناء على طلبكم المقدم لنا نقدم لكم عرضنا أدناه.", nationalTextFont);
                table0.AddCell(cell);
                document.Add(table0);
                //--------------------------------------------------------------------------------------------------------

                if (myInv.VouType == 0)
                {
                    ColCount = 9;
                    cols = new[] { 65,60, 60, 50, 115, 115, 160, 160, 30 };
                }
                else
                {
                    ColCount = 8;
                    cols = new[] { 65,60, 60, 50, 215, 160, 160, 30 };
                }
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("م", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("من", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("إلى", nationalTextFont);
                table.AddCell(cell);
                if (myInv.VouType == 0)
                {
                    cell.Phrase = new iTextSharp.text.Phrase("نوع السيارة", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase("الطراز", nationalTextFont);
                    table.AddCell(cell);
                }
                else
                {
                    cell.Phrase = new iTextSharp.text.Phrase("وصف الشحنة", nationalTextFont);
                    table.AddCell(cell);
                }
                cell.Phrase = new iTextSharp.text.Phrase("العدد", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("السعر", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("الضريبة", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                table.AddCell(cell);
                //------------------------------

                double tot = 0;
                int Qty = 0;
                int i = 0;
                foreach (PriceListDetails itm in InvItems)
                {
                    if (cell.BackgroundColor == iTextSharp.text.BaseColor.WHITE) cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                    else cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell.Phrase = new iTextSharp.text.Phrase(itm.FNo.ToString(), nationalTextFont8);
                    table.AddCell(cell);
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    Cities myCity = new Cities();
                    myCity.Branch = short.Parse(Session["Branch"].ToString());
                    myCity.Code = itm.PlaceofLoading;
                    myCity = myCity.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    cell.Phrase = new iTextSharp.text.Phrase((myCity != null ? myCity.Name1 + " - " : "") + itm.From2, nationalTextFont8);
                    table.AddCell(cell);

                    myCity = new Cities();
                    myCity.Branch = short.Parse(Session["Branch"].ToString());
                    myCity.Code = itm.Destination;
                    myCity = myCity.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    cell.Phrase = new iTextSharp.text.Phrase((myCity != null ? myCity.Name1 + " - " : "") + itm.To2, nationalTextFont8);
                    table.AddCell(cell);

                    if (myInv.VouType == 0)
                    {
                        string CarType = "";
                        CarType myCarType = new CarType();
                        myCarType.Branch = short.Parse(Session["Branch"].ToString());
                        myCarType.Code = itm.CarType;
                        myCarType = myCarType.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                        if (myCarType != null) CarType = myCarType.Name1;
                        cell.Phrase = new iTextSharp.text.Phrase(CarType, nationalTextFont8);
                        table.AddCell(cell);

                        CarType = "";
                        myCarType = new CarType();
                        myCarType.Branch = short.Parse(Session["Branch"].ToString());
                        myCarType.Code = itm.Model;
                        myCarType = myCarType.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                        if (myCarType != null) CarType = myCarType.Name1;

                        cell.Phrase = new iTextSharp.text.Phrase(CarType, nationalTextFont8);
                        table.AddCell(cell);
                    }
                    else
                    {
                        cell.Phrase = new iTextSharp.text.Phrase(itm.Name, nationalTextFont8);
                        table.AddCell(cell);
                    }

                    cell.Phrase = new iTextSharp.text.Phrase(itm.Qty.ToString(), nationalTextFont);
                    table.AddCell(cell);
                    Qty += (int)itm.Qty;

                    cell.Phrase = new iTextSharp.text.Phrase(itm.Price.ToString(), nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase((itm.Price * moh.doTax(myInv.GDate)).ToString(), nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase((itm.Price * itm.Qty * (1+moh.doTax(myInv.GDate))).ToString(), nationalTextFont);
                    table.AddCell(cell);

                    tot += (double)itm.Total;
                    i++;

                    if (InvItems.Count() > 10 && i == 10)
                    {
                        document.Add(table);

                        ColCount = 1;
                        cols = new[] { 800 };
                        PdfPTable table1 = new PdfPTable(ColCount);
                        table1.TotalWidth = document.PageSize.Width; //100f;
                        table1.SetWidths(cols);
                        table1.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell.FixedHeight = 10f;
                        cell.Border = PdfPCell.TOP_BORDER;
                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                        table1.AddCell(cell);
                        cell.FixedHeight = 16f;
                        cell.Border = 0;
                        cell.Phrase = new iTextSharp.text.Phrase("ملاحظات:-", nationalTextFontU);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- الاستلام من مكان العميل المحدد وتسليم في مكان العميل المحدد.", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- شركتنا لديها أسطول جديد متنوع الأحجام مزودا بأنظمة تتبع مركبات نظام ملاحي لتسهيل وسرعة إنجاز العمل.", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- شركتنا لديها تغطية تأمين على البضائع المحملة سواء خلال الرحلة أو أثناء الشحن والتفريغ وذلك من خلال عقدنا مع أفضل", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("   شركات التأمين في هذا المجال. ", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- شركتنا تمتلك أنظمة تشغيل (سوفت وير) متقدمة مربوطة بنظام تتبع مركبات ونظام ملاحي وشبكة فروع في مختلف مدن المملكة", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- نقوم بتقديم اسم مستخدم وكلمة مرور لعملائنا الكبار والمميزين من خلاله يمكنه إدارة شحناته (بتحرير فواتير الشحن ومتابعة", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("   مراحل شحنها وتوصيلها للمكان المحدد لحظة بلحظة، وكذلك متابعة حسابه المسجل لدينا)", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- مدة تسليم السيارات في الحمولة الكاملة من يومين إلى ثلاث أيام", nationalTextFont9);
                        table1.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("- مدة تسليم السيارات في السطحة الخاصة خلال 24 ساعة", nationalTextFont9);
                        table1.AddCell(cell);

                        cell.FixedHeight = 10f;
                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                        table1.AddCell(cell);
                        cell.FixedHeight = 20f;
                        //  cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        //  table.AddCell(cell);
                        document.Add(table1);


                        ColCount = 3;
                        cols = new[] { 200, 200, 400 };
                        PdfPTable table2 = new PdfPTable(ColCount);
                        table2.TotalWidth = document.PageSize.Width; //100f;
                        table2.SetWidths(cols);
                        table2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell.Phrase = new iTextSharp.text.Phrase("الهاتف الموحد لخدمة للعميل خلال ساعات اليوم", nationalTextFont12);
                        table2.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        table2.AddCell(cell);


                        cell.Phrase = new iTextSharp.text.Phrase("الناقلات البرية العربية ", nationalTextFont);
                        table2.AddCell(cell);
                        //--------------------------------------------------------------------------------

                        //cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        //table.AddCell(cell);

                        //cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        //table.AddCell(cell);

                        //cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        //table.AddCell(cell);
                        //--------------------------------------------------------------------------------

                        cell.Phrase = new iTextSharp.text.Phrase("                    920028833", nationalTextFont12Blue);
                        table2.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        table2.AddCell(cell);

                        if (UserSignImage != "")
                        {
                            iTextSharp.text.Image logoSign2 = iTextSharp.text.Image.GetInstance(UserSignImage);
                            logoSign2.ScalePercent(100);
                            PdfPCell cellS20 = new PdfPCell(logoSign2);
                            cellS20.Border = 0;
                            cellS20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            table2.AddCell(cellS20);

                        }
                        else
                        {
                            cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                            table2.AddCell(cell);
                            //--------------------------------------------------------------------------------
                            cell.FixedHeight = 15f;
                            cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                            table2.AddCell(cell);

                            cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                            table2.AddCell(cell);

                            cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                            table2.AddCell(cell);
                            //--------------------------------------------------------------------------------
                        }
                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        table2.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                        table2.AddCell(cell);


                        iTextSharp.text.Image logo2 = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/Stamp.png"));
                        logo2.ScalePercent(100);
                        PdfPCell cell20 = new PdfPCell(logo2);
                        //cell20.PaddingTop = 0;
                        //cell20.PaddingRight = 30;
                        cell20.Border = 0;
                        cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        table2.AddCell(cell20);
                        //----------------------------------------------------------------------------------------
                        document.Add(table2);

                        document.NewPage();
                        ColCount = 5;
                        cols = new[] { 150, 100, 300, 150, 100 };
                        table0 = new PdfPTable(ColCount);
                        table0.TotalWidth = document.PageSize.Width; //100f;
                        table0.SetWidths(cols);
                        cell = new PdfPCell();
                        cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        table0.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell.FixedHeight = 20f;
                        //-------------------------------------------------------------------------------------------
                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Border = 0;
                        cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                        table0.AddCell(cell);

                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(HDate.RotateDate2(myInv.HDate) + " هـ ", nationalTextFont);
                        table0.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        table0.AddCell(cell);

                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase("الموافق", nationalTextFont);
                        table0.AddCell(cell);

                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(myInv.GDate + " م ", nationalTextFont);
                        table0.AddCell(cell);

                        //-------------------------------------------------------------------------------------------
                        cell.FixedHeight = 15f;
                        cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                        table0.AddCell(cell);
                        table0.AddCell(cell);
                        table0.AddCell(cell);
                        cell.FixedHeight = 20f;

                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase("تابع الرقم", nationalTextFont);
                        table0.AddCell(cell);

                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/ع/" + DateTime.Parse(myInv.GDate).Month.ToString() + "/" + DateTime.Parse(myInv.GDate).Year.ToString(), nationalTextFont);
                        table0.AddCell(cell);
                        //---------------------------------------------------------------------------------------------
                        // cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        //  table.AddCell(cell);
                        //  table.AddCell(cell);
                        //  table.AddCell(cell);
                        //  table.AddCell(cell);
                        //  table.AddCell(cell);
                        //---------------------------------------------------------------------------------------------

                        cell.Colspan = 5;
                        cell.Phrase = new iTextSharp.text.Phrase("السادة/" + myInv.Name + "        المحترمين", nationalTextFont);
                        table0.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("السلام عليكم ورحمه الله وبركاته", nationalTextFont);
                        table0.AddCell(cell);
                        cell.FixedHeight = 15f;
                        cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                        table0.AddCell(cell);
                        cell.FixedHeight = 20f;
                        cell.Phrase = new iTextSharp.text.Phrase("الموضوع/" + myInv.Subject, nationalTextFont);
                        table0.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("بناء على طلبكم المقدم لنا نقدم لكم عرضنا أدناه.", nationalTextFont);
                        table0.AddCell(cell);
                        document.Add(table0);
                        //--------------------------------------------------------------------------------------------------------

                        if (myInv.VouType == 0)
                        {
                            ColCount = 9;
                            cols = new[] { 65,60, 60, 50, 105, 115, 160, 160, 30 };
                        }
                        else
                        {
                            ColCount = 8;
                            cols = new[] { 65,60, 60, 50, 215, 160, 160, 30 };
                        }
                        table = new PdfPTable(ColCount);
                        table.TotalWidth = document.PageSize.Width; //100f;
                        table.SetWidths(cols);
                        table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        cell = new PdfPCell();
                        cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.Phrase = new iTextSharp.text.Phrase("م", nationalTextFont);
                        table.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("من", nationalTextFont);
                        table.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("إلى", nationalTextFont);
                        table.AddCell(cell);
                        if (myInv.VouType == 0)
                        {
                            cell.Phrase = new iTextSharp.text.Phrase("نوع السيارة", nationalTextFont);
                            table.AddCell(cell);
                            cell.Phrase = new iTextSharp.text.Phrase("الطراز", nationalTextFont);
                            table.AddCell(cell);
                        }
                        else
                        {
                            cell.Phrase = new iTextSharp.text.Phrase("وصف الشحنة", nationalTextFont);
                            table.AddCell(cell);
                        }
                        cell.Phrase = new iTextSharp.text.Phrase("العدد", nationalTextFont);
                        table.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("السعر", nationalTextFont);
                        table.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("الضريبة", nationalTextFont);
                        table.AddCell(cell);
                        cell.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                        table.AddCell(cell);
                    }
                }
                if ((bool)myInv.PrintTot)
                {

                    //
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(217, 241, 255);
                    //cell.Phrase = new iTextSharp.text.Phrase("الاجمالي : مبلغ وقدرة  " + moh.NTOC(tot, 1), nationalTextFont9);
                    cell.Phrase = new iTextSharp.text.Phrase("الاجمالي :   " , nationalTextFont9);
                    if (myInv.VouType == 0) cell.Colspan = 5;
                    else cell.Colspan = 4;
                    table.AddCell(cell);
                    cell.Colspan = 1;
                    cell.Phrase = new iTextSharp.text.Phrase(Qty.ToString(), nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(tot.ToString(), nationalTextFont);
                    table.AddCell(cell);

                    //                    
                    
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(217, 241, 255);
                    cell.Phrase = new iTextSharp.text.Phrase(moh.doTax(myInv.GDate,1) + ":   "  , nationalTextFont9);
                    if (myInv.VouType == 0) cell.Colspan = 5;
                    else cell.Colspan = 4;
                    table.AddCell(cell);
                    cell.Colspan = 1;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    double tax = 0;
                    if (DateTime.Parse(myInv.GDate) >= DateTime.Parse("01/01/2018"))
                    {
                        tax = tot * moh.doTax(myInv.GDate);
                        cell.Phrase = new iTextSharp.text.Phrase((tot * moh.doTax(myInv.GDate)).ToString(), nationalTextFont);
                    }
                    else cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    //
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(217, 241, 255);
                    cell.Phrase = new iTextSharp.text.Phrase("الاجمالي شامل الضريبة : مبلغ وقدرة  " + moh.NTOC(tot + tax, 1), nationalTextFont9);
                    if (myInv.VouType == 0) cell.Colspan = 5;
                    else cell.Colspan = 4;
                    table.AddCell(cell);
                    cell.Colspan = 1;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase((tot + tax).ToString(), nationalTextFont);
                    table.AddCell(cell);

                }

                document.Add(table);                
                //---------------------------------------------------------------------------------------------------------
                ColCount = 1;
                cols = new[] { 800 };
                PdfPTable table10 = new PdfPTable(ColCount);
                table10.TotalWidth = document.PageSize.Width; //100f;
                table10.SetWidths(cols);
                table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.FixedHeight = 10f;
                cell.Border = PdfPCell.TOP_BORDER;
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                table10.AddCell(cell);
                cell.FixedHeight = 16f;
                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("ملاحظات:-", nationalTextFontU);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- الاستلام من مكان العميل المحدد وتسليم في مكان العميل المحدد.", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- شركتنا لديها أسطول جديد متنوع الأحجام مزودا بأنظمة تتبع مركبات نظام ملاحي لتسهيل وسرعة إنجاز العمل.", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- شركتنا لديها تغطية تأمين على البضائع المحملة سواء خلال الرحلة أو أثناء الشحن والتفريغ وذلك من خلال عقدنا مع أفضل", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("   شركات التأمين في هذا المجال. ", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- شركتنا تمتلك أنظمة تشغيل (سوفت وير) متقدمة مربوطة بنظام تتبع مركبات ونظام ملاحي وشبكة فروع في مختلف مدن المملكة", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- نقوم بتقديم اسم مستخدم وكلمة مرور لعملائنا الكبار والمميزين من خلاله يمكنه إدارة شحناته (بتحرير فواتير الشحن ومتابعة", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("   مراحل شحنها وتوصيلها للمكان المحدد لحظة بلحظة، وكذلك متابعة حسابه المسجل لدينا)", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- مدة تسليم السيارات في الحمولة الكاملة من يومين إلى ثلاث أيام", nationalTextFont9);
                table10.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("- مدة تسليم السيارات في السطحة الخاصة خلال 24 ساعة", nationalTextFont9);
                table10.AddCell(cell);

                cell.FixedHeight = 10f;
                cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont8);
                table10.AddCell(cell);
                cell.FixedHeight = 20f;
              //  cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
              //  table.AddCell(cell);
                document.Add(table10);


                ColCount = 3;
                cols = new[] { 200, 200, 400};
                PdfPTable table20 = new PdfPTable(ColCount);
                table20.TotalWidth = document.PageSize.Width; //100f;
                table20.SetWidths(cols);
                table20.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.Phrase = new iTextSharp.text.Phrase("الهاتف الموحد لخدمة للعميل خلال ساعات اليوم", nationalTextFont12);
                table20.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                table20.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase("الناقلات البرية العربية ", nationalTextFont);
                table20.AddCell(cell);
                //--------------------------------------------------------------------------------

                cell.Phrase = new iTextSharp.text.Phrase("                    920028833", nationalTextFont12Blue);
                table20.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                table20.AddCell(cell);

                if (UserSignImage != "")
                {
                    iTextSharp.text.Image logoSign200 = iTextSharp.text.Image.GetInstance(UserSignImage);
                    logoSign200.ScalePercent(100);
                    PdfPCell cellSS20 = new PdfPCell(logoSign200);
                    cellSS20.Border = 0;
                    cellSS20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    table20.AddCell(cellSS20);

                }
                else
                {
                    cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    table20.AddCell(cell);
                    //--------------------------------------------------------------------------------
                    cell.FixedHeight = 15f;
                    cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    table20.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    table20.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    table20.AddCell(cell);
                    //--------------------------------------------------------------------------------
                }
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                table20.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                table20.AddCell(cell);

                iTextSharp.text.Image logo20 = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/Stamp.png"));
                PdfPCell cell200 = new PdfPCell(logo20);
                cell200.Border = 0;
                cell200.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                table20.AddCell(cell200);
                //----------------------------------------------------------------------------------------
                document.Add(table20);
                document.Close();
            }
            catch (Exception)
            {
            }
        }
         */
        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage52 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, vStr5, vStr6, UserName, PageNo, vCompanyName, vOnLine,Customer;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 7f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                string arialunicodepath2 = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                BaseFont nationalBase2;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                nationalBase2 = BaseFont.CreateFont(arialunicodepath2, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase2, 14f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(4);
                var cols2 = new[] { 300, 100, 100, 325 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                if(moh.doTax(vStr6,Customer)) cell2.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية" + "\n" + "للنقل والتخزين - " + vStr4 + "\n" + "الرقم الضريبي#310330321200003", nationalTextFont16);
                else cell2.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية" + "\n" + "للنقل والتخزين - " + vStr4, nationalTextFont16);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);


                cell2.PaddingRight = 0;
                //if (vOnLine == "") cell2.Phrase = new iTextSharp.text.Phrase("\n" + "إتفاقية شحن طرود (فاتورة) \n رقم " + moh.MakeMask(DateTime.Parse(vStr6).Month.ToString(), 2) + moh.MakeMask(DateTime.Parse(vStr6).Day.ToString(), 2) + " " + vStr3 + " E" + (100 + int.Parse(vStr5)).ToString(), nationalTextFont16);
                //else cell2.Phrase = new iTextSharp.text.Phrase("\n" + "إتفاقية شحن طرود (فاتورة) \n رقم E" + vOnLine, nationalTextFont16);
                cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont16);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                var TextCell = new PdfPCell(headerTbl.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //TextCell.Border = 0;
                TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = "E" + vStr2 + vStr3;
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.PaddingTop = 10;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                headerTbl.AddCell(TextCell);


                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(2);
                var cols2 = new[] { 400, 400 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                float FPadding = 10;
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = new iTextSharp.text.BaseColor(252,45,4);                
                //set cell border to 0
                cell.Border = 0;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.PaddingRight = FPadding;
                cell.PaddingLeft = 0;
                cell.BorderColor = new iTextSharp.text.BaseColor(252, 45, 4);

                PdfPCell cell0 = new PdfPCell();
                cell0.BackgroundColor = new iTextSharp.text.BaseColor(252, 45, 4);
                cell0.RunDirection = PdfWriter.RUN_DIRECTION_LTR;
                //set cell border to 0
                cell0.Border = 0;
                cell0.BorderColor = new iTextSharp.text.BaseColor(252, 45, 4);
                cell0.PaddingRight = 0;
                cell0.PaddingLeft = FPadding;
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                
                cell.Phrase = new iTextSharp.text.Phrase("المملكة العربية السعودية -  الرياض –  المعذر الشمالي –  طريق التخصصي", footer);
                footerTbl.AddCell(cell);

                cell0.Phrase = new iTextSharp.text.Phrase("SAUDI ARABIA - RIYADH – AL mazar AL shamali - Takasussi ST", footer);
                footerTbl.AddCell(cell0);

                cell.Phrase = new iTextSharp.text.Phrase("تليفون : 4804343 11 966       فاكس : 4825357 11 966", footer);
                footerTbl.AddCell(cell);

                cell0.Phrase = new iTextSharp.text.Phrase("TEL: 966  11 4804343       FAX : 966 11 4825357", footer);
                footerTbl.AddCell(cell0);

                cell.Phrase = new iTextSharp.text.Phrase("ص . ب : 87677   الرياض  11652", footer);
                footerTbl.AddCell(cell);

                cell0.Phrase = new iTextSharp.text.Phrase("PO : 87677 –   11652 RIYADH", footer);
                footerTbl.AddCell(cell0);

                cell.Phrase = new iTextSharp.text.Phrase("رقم العضوية : 161273", footer);
                footerTbl.AddCell(cell);

                cell0.Phrase = new iTextSharp.text.Phrase("NO.CCI  :  161273", footer);
                footerTbl.AddCell(cell0);

                cell.Phrase = new iTextSharp.text.Phrase("الهاتف الموحد  : 920028833", footer);
                footerTbl.AddCell(cell);

                cell0.Phrase = new iTextSharp.text.Phrase("Unified Phone : 920028833 ", footer);
                footerTbl.AddCell(cell0);

                cell.Phrase = new iTextSharp.text.Phrase("الموقع الالكتروني : www.naqelat.com   البريد الالكتروني  : Info@naqelat.com", footer);
                footerTbl.AddCell(cell);

                cell0.Phrase = new iTextSharp.text.Phrase("Email : Info@naqelat.com    Website : www.naqelat.com", footer);
                footerTbl.AddCell(cell0);

                cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }


        #endregion

        //--------------- الحسابات ------------------------------------------------------------------------------------------------------------------------------------------

        #region 101-102 Print of Receipt or Payment Voucher
        public void PrintVou(int FType,int MyNumber)
        {
            try
            {
                    List<vJv> lJv = new List<vJv>();
                    Jv myJv = new Jv();
                    myJv.Branch = short.Parse(Session["Branch"].ToString());
                    if (FType == 1) myJv.FType = 101;
                    else myJv.FType = 102;
                    myJv.LocType = LocType;
                    myJv.LocNumber = LocNumber;
                    myJv.Number = MyNumber;
                    lJv = myJv.find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (lJv == null || lJv.Count == 0) return;

                    iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                    HttpContext.Current.Response.ContentType = "application/pdf";
                    PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                    pdfPage101 page = new pdfPage101();
                    MyConfig mySetting = new MyConfig();
                    mySetting.Branch = short.Parse(Session["Branch"].ToString());
                    if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                    if (mySetting != null)
                    {
                        page.vCompanyName = mySetting.CompanyName;
                    }

                    writer.PageEvent = page;
                    if (FType == 1)
                    {
                        page.vStr1 = "سند القبض";
                        page.vStr2 = "أستلمنا من";
                    }
                    else
                    {
                        page.vStr1 = "سند الصرف";
                        page.vStr2 = "صرفنا على";
                    }
                    page.PageNo = "1";
                    page.UserName = Session["FullUser"].ToString();
                    page.vStr3 = "الإدارة المالية";
                    int ColCount = 4;
                    var cols = new[] { 275, 125, 300, 100 };
                    document.Open();
                    PdfPTable table = new PdfPTable(ColCount);
                    table.TotalWidth = document.PageSize.Width; //100f;
                    table.SetWidths(cols);
                    PdfPCell cell = new PdfPCell();
                    cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell.FixedHeight = 20f;

                    //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    //cell.Border = 0;
                    cell.Phrase = new iTextSharp.text.Phrase("رقم السند", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[0].Number.ToString(), nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[0].FDate, nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(page.vStr2, nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[FType == 1 ? 1 : 0].AccName1, nationalTextFont);
                    table.AddCell(cell);


                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("رقم المستند", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[0].InvNo, nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("المنطقة", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase((!string.IsNullOrEmpty(lJv[FType == 1 ? 1 : 0].Area) && lJv[FType == 1 ? 1 : 0].Area != "-1") ? lJv[FType == 1 ? 1 : 0].AreaName1 : "", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("نوع الدفع", nationalTextFont);
                    table.AddCell(cell);

                    bool ChkCheque = (lJv[0].ChequeNo != "" || lJv[0].ChequeDate != "" || lJv[0].BankName != "");
                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    if (ChkCheque) cell.Phrase = new iTextSharp.text.Phrase("بشيك", nationalTextFont);
                    else cell.Phrase = new iTextSharp.text.Phrase("نقداً", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("الفرع", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase((!string.IsNullOrEmpty(lJv[FType == 1 ? 1 : 0].CostCenter) && lJv[FType == 1 ? 1 : 0].CostCenter != "-1") ? lJv[FType == 1 ? 1 : 0].CostName1 : "", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    if (ChkCheque) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الشيك", nationalTextFont);
                    else cell.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    if (ChkCheque) cell.Phrase = new iTextSharp.text.Phrase(lJv[0].ChequeDate, nationalTextFont);
                    else cell.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    table.AddCell(cell);


                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("المشروع", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase((!string.IsNullOrEmpty(lJv[FType == 1 ? 1 : 0].Project) && lJv[FType == 1 ? 1 : 0].Project != "-1") ? lJv[FType == 1 ? 1 : 0].ProjectName1 : "", nationalTextFont);                    
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    if (ChkCheque) cell.Phrase = new iTextSharp.text.Phrase("رقم الشيك", nationalTextFont);
                    else cell.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    if (ChkCheque) cell.Phrase = new iTextSharp.text.Phrase(lJv[0].ChequeNo, nationalTextFont);
                    else cell.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    table.AddCell(cell);


                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("حساب التكاليف", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase((!string.IsNullOrEmpty(lJv[FType == 1 ? 1 : 0].CostAcc) && lJv[FType == 1 ? 1 : 0].CostAcc != "-1") ? lJv[FType == 1 ? 1 : 0].CostAccName1 : "", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    if (ChkCheque) cell.Phrase = new iTextSharp.text.Phrase("مسحوب على بنك", nationalTextFont);
                    else cell.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    if (ChkCheque) cell.Phrase = new iTextSharp.text.Phrase(lJv[0].BankName, nationalTextFont);
                    else cell.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                    table.AddCell(cell);


                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("الموظف", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase((!string.IsNullOrEmpty(lJv[FType == 1 ? 1 : 0].EmpCode) && lJv[FType == 1 ? 1 : 0].EmpCode != "-1") ? lJv[FType == 1 ? 1 : 0].EmpName1 : "", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("مبلغ وقدرة", nationalTextFont);
                    table.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", lJv[0].Amount) + " ريال", nationalTextFont);
                    table.AddCell(cell);
                    document.Add(table);

                    cols = new[] { 700, 100 };
                    PdfPTable table9 = new PdfPTable(2);
                    table9.TotalWidth = document.PageSize.Width; //100f;
                    table9.SetWidths(cols);
                    PdfPCell cell9 = new PdfPCell();
                    cell9.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    table9.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table9.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    cell9.Phrase = new iTextSharp.text.Phrase("وذلك عن", nationalTextFont);
                    cell9.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    //cell.Border = 0;
                    table9.AddCell(cell9);

                    cell9.Phrase = new iTextSharp.text.Phrase(lJv[0].Remark, nationalTextFont);
                    cell9.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    //cell.Border = 0;
                    table9.AddCell(cell9);


                    document.Add(table9);


                    PdfPTable table5 = new PdfPTable(4);
                    table5.TotalWidth = 100f;

                    var cols5 = new[] { 275, 125, 300, 100 };
                    table5.SetWidths(cols5);
                    PdfPCell cell5 = new PdfPCell();
                    cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell5.FixedHeight = 20f;

                    table5.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    cell5.Phrase = new iTextSharp.text.Phrase("إدخلت بواسطة", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    //cell.Border = 0;
                    table5.AddCell(cell5);

                    TblUsers ax = new TblUsers();
                    if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    ax.UserName = lJv[0].UserName;
                    ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                          where uitm.UserName == ax.UserName
                          select uitm).FirstOrDefault();
                    if (ax == null)
                    {
                        cell5.Phrase = new iTextSharp.text.Phrase(lJv[0].UserName, nationalTextFont);
                    }
                    else
                    {
                        cell5.Phrase = new iTextSharp.text.Phrase(ax.FName, nationalTextFont);
                    }                    
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table5.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("تاريخ الإدخال", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table5.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(lJv[0].UserDate, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table5.AddCell(cell5);

                    document.Add(table5);
                    document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                    PdfPTable table50 = new PdfPTable(5);
                    table50.TotalWidth = 100f;
                    cell5 = new PdfPCell();
                    cols5 = new[] { 150, 150, 150, 150, 150 };
                    table50.SetWidths(cols5);
                    cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    table50.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("المستلم", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Border = 0;
                    table50.AddCell(cell5);


                    cell5.Phrase = new iTextSharp.text.Phrase("الحسابات", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    //
                    cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    //
                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);


                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 2;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 2;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    document.Add(table50);
                    document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage101 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 250, 300, 300 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);


                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 103 Print of Journal Voucher
        public void PrintJVou(int MyNumber)
        {
            try
            {
                List<vJv> lJv = new List<vJv>();
                Jv myJv = new Jv();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.FType = 100;
                myJv.LocType = LocType;
                myJv.LocNumber = LocNumber;
                myJv.Number = MyNumber;
                lJv = myJv.find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                List<Vou> VouData = new List<Vou>();
                foreach (vJv itm in lJv)
                {
                    VouData.Add(new Vou
                    {
                        Code = itm.DbCode == "" ? itm.CrCode : itm.DbCode,
                        Credit = itm.DbCode == "" ? (double)itm.Amount : 0,
                        Debit = itm.DbCode == "" ? 0 : (double)itm.Amount,
                        CostCenter = itm.CostName1,
                        CostCenter2 = itm.CostName2,
                        CostCenterCode = itm.CostCenter,
                        Project = itm.ProjectName1,
                        Project2 = itm.ProjectName2,
                        ProjectCode = itm.Project,
                        Emp = itm.EmpName1,
                        Emp2 = itm.EmpName2,
                        EmpCode = itm.EmpCode,
                        CarNo = itm.CarNo,
                        CarNo2 = itm.CarType,
                        Area = itm.AreaName1,
                        Area2 = itm.AreaName2,
                        AreaCode = itm.Area,
                        CostAcc = itm.CostAccName1,
                        CostAcc2 = itm.CostAccName2,
                        CostAccCode = itm.CostAcc,
                        Remark = itm.Remark,
                        InvNo = itm.InvNo,
                        Name = itm.AccName1,
                        Name2 = itm.AccName2,
                        sno = itm.FNo
                    });
                }

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage103 page = new pdfPage103();
                writer.PageEvent = page;

                string ImagePath = "";
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vComapnyName = mySetting.CompanyName;
                    ImagePath = mySetting.ImagePath;
                }

                String Username = "", AccManagerName = "";
                String UserSignImage = "", AccManagerSign = "", GMSign = "";
                TblUsers ax = new TblUsers();
                if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                ax.UserName = lJv[0].UserName;
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax != null)
                {
                    Username = ax.FName;
                    UserSignImage = !string.IsNullOrEmpty(ax.Sign) ? ImagePath + ax.Sign : "";
                }

                ax = new TblUsers();
                ax.UserName = "sameh";
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax != null)
                {
                    AccManagerSign = !string.IsNullOrEmpty(ax.Sign) ? ImagePath + ax.Sign : "";
                    AccManagerName = ax.FName;
                }



                page.vStr1 = MyNumber.ToString();
                page.vStr2 = lJv[0].FDate;
                page.vStr3 = "الإدارة المالية";
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                int ColCount = 6;
                var cols = new[] { 150, 75, 285, 90, 100, 100 };
                document.Open();
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.FixedHeight = 20f;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);

                double TotalDB = 0, TotalCr = 0;
                foreach (Vou itm in VouData)
                {
                    TotalDB += (double)itm.Debit;
                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.Debit), nationalTextFont);
                    table.AddCell(cell);

                    TotalCr += (double)itm.Credit;
                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.Credit), nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(itm.Code, nationalTextFont);
                    table.AddCell(cell);

                    PdfPTable headerTbl2 = new PdfPTable(1);

                    headerTbl2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    headerTbl2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    PdfPCell cell3 = new PdfPCell(headerTbl2);
                    cell3.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell3.PaddingRight = 0;
                    PdfPCell cell2 = new PdfPCell();
                    //cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell2.Phrase = new iTextSharp.text.Phrase(itm.Name, nationalTextFont);
                    cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell2.Border = 0;
                    headerTbl2.AddCell(cell2);
                    cell2.Phrase = new iTextSharp.text.Phrase(itm.Remark, nationalTextFont);
                    headerTbl2.AddCell(cell2);
                    table.AddCell(cell3);

                    cell.Phrase = new iTextSharp.text.Phrase(itm.InvNo, nationalTextFont);
                    table.AddCell(cell);


                    PdfPTable headerTbl3 = new PdfPTable(1);
                    headerTbl3.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    headerTbl3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    PdfPCell cell30 = new PdfPCell(headerTbl3);
                    cell30.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell30.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell30.PaddingRight = 0;
                    PdfPCell cell20 = new PdfPCell();
                    //cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell20.Phrase = new iTextSharp.text.Phrase(itm.Area, nationalTextFont);
                    cell20.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell20.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell20.Border = 0;
                    headerTbl3.AddCell(cell20);
                    cell20.Phrase = new iTextSharp.text.Phrase(itm.CostCenter, nationalTextFont);
                    headerTbl3.AddCell(cell20);
                    cell20.Phrase = new iTextSharp.text.Phrase(itm.Project, nationalTextFont);
                    headerTbl3.AddCell(cell20);
                    cell20.Phrase = new iTextSharp.text.Phrase(itm.CostAcc, nationalTextFont);
                    headerTbl3.AddCell(cell20);
                    cell20.Phrase = new iTextSharp.text.Phrase(itm.Emp, nationalTextFont);
                    headerTbl3.AddCell(cell20);
                    cell20.Phrase = new iTextSharp.text.Phrase(itm.CarNo2, nationalTextFont);
                    headerTbl3.AddCell(cell20);
                    table.AddCell(cell30);

                    document.Add(table);
                    table.Rows.Clear();
                }
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", TotalDB), nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", TotalCr), nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                table.AddCell(cell);

                document.Add(table);
                table.Rows.Clear();

                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                PdfPTable table5 = new PdfPTable(4);
                table5.TotalWidth = 100f;

                var cols5 = new[] { 175, 75, 175, 75 };
                table5.SetWidths(cols5);
                PdfPCell cell5 = new PdfPCell();
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table5.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase("إدخلت بواسطة", nationalTextFont);
                cell5.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                //cell.Border = 0;
                table5.AddCell(cell5);
                cell5.Phrase = new iTextSharp.text.Phrase(Username, nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("تاريخ الإدخال", nationalTextFont);
                cell5.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(lJv[0].UserDate, nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                document.Add(table5);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                PdfPTable table50 = new PdfPTable(5);
                table50.TotalWidth = 100f;
                cell5 = new PdfPCell();
                cols5 = new[] { 75, 200, 200, 200, 75 };
                table50.SetWidths(cols5);
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table50.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("المحاسب", nationalTextFont);
                cell5.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("رئيس الحسابات", nationalTextFont);
                cell5.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);
                //----------------------------------------------


                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                if (UserSignImage != "")
                {
                    iTextSharp.text.Image logoSign1 = iTextSharp.text.Image.GetInstance(UserSignImage);
                    logoSign1.ScalePercent(100);
                    PdfPCell cellS1 = new PdfPCell(logoSign1);
                    cellS1.Border = 0;
                    cellS1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    table50.AddCell(cellS1);
                }
                else
                {
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                }

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                if (AccManagerSign != "")
                {
                    iTextSharp.text.Image logoSign1 = iTextSharp.text.Image.GetInstance(AccManagerSign);
                    logoSign1.ScalePercent(100);
                    PdfPCell cellS1 = new PdfPCell(logoSign1);
                    cellS1.Border = 0;
                    cellS1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    table50.AddCell(cellS1);
                }
                else
                {
                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                }

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);
                //-----------------------------------------------------
                if (AccManagerSign == "" && UserSignImage == "")
                {
                    cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 2;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 2;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                }
                else
                {
                    cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(Username, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 2;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(AccManagerName, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 2;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                }
                document.Add(table50);
                document.Close();
            }
            catch (Exception)
            {
            }
        }
        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage103 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vComapnyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 200 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.Phrase = new iTextSharp.text.Phrase(vComapnyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase("قيد يومية", nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);

                arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);

                if (vStr1 != "")
                {
                    PdfPTable table5 = new PdfPTable(4);
                    table5.TotalWidth = 100f;

                    var cols5 = new[] { 175, 75, 175, 75 };
                    table5.SetWidths(cols5);
                    PdfPCell cell5 = new PdfPCell();
                    cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell5.FixedHeight = 20f;
                    table5.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    cell5.Phrase = new iTextSharp.text.Phrase("رقم القيد", nationalTextFont);
                    cell5.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    //cell.Border = 0;
                    table5.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table5.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                    cell5.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table5.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(vStr2, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table5.AddCell(cell5);

                    doc.Add(table5);
                    doc.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                    vStr1 = "";
                }

                PdfPTable table = new PdfPTable(6);
                table.TotalWidth = doc.PageSize.Width;

                var cols = new[] { 150, 75, 285, 90, 100, 100 };
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.FixedHeight = 20f;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.Phrase = new iTextSharp.text.Phrase("مدين", nationalTextFont);
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("دائن", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("رقم الحساب", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الحساب / شرح القيد", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("رقم المستند", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التوجيه", nationalTextFont);
                table.AddCell(cell);

                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
                doc.Add(table);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }

        #endregion

        #region 106 Print of Bank Transfer
        public void PrintBankTransfer(int MyNumber)
        {
            try
            {
                    List<vJv> lJv = new List<vJv>();
                    Jv myJv = new Jv();
                    myJv.Branch = short.Parse(Session["Branch"].ToString());
                    myJv.FType = 106;
                    myJv.LocType = LocType;
                    myJv.LocNumber = LocNumber;
                    myJv.Number = MyNumber;
                    lJv = myJv.find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);


                    if (ConfigurationManager.AppSettings["TraceUserLog"].ToString() == "1")
                    {
                        Transactions UserTran = new Transactions();
                        UserTran.TranDate = String.Format("{0:dd/MM/yyyy}", moh.Nows());
                        UserTran.TranTime = String.Format("{0:HH:mm:ss}", moh.Nows());
                        UserTran.UserName = Session["CurrentUser"].ToString();
                        UserTran.FormName = "تحويل بنكي";
                        UserTran.FormAction = "طباعة";
                        UserTran.Description = "طباعة بيانات التحويل البنكي رقم " + LocNumber.ToString() + "/" + MyNumber;
                        UserTran.IP = IPNetworking.GetIP4Address();
                        UserTran.Add(WebConfigurationManager.ConnectionStrings["MyCnnlog"].ConnectionString);
                    }

                    iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                    HttpContext.Current.Response.ContentType = "application/pdf";
                    PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                    pdfPage106 page = new pdfPage106();

                    MyConfig mySetting = new MyConfig();
                    mySetting.Branch = short.Parse(Session["Branch"].ToString());
                    if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                    if (mySetting != null)
                    {
                        page.vCompanyName = mySetting.CompanyName;
                    }

                    writer.PageEvent = page;
                    page.vStr1 = "تحويل بنكي";
                    page.vStr2 = "";

                    page.PageNo = "1";
                    page.UserName = Session["FullUser"].ToString();
                    page.vStr3 = "الإدارة المالية";

                    string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                    iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                    iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                    document.Open();
                    int ColCount = 5;
                    var cols = new[] { 125, 100, 125, 200, 200 };
                    PdfPTable table10 = new PdfPTable(ColCount);
                    table10.TotalWidth = document.PageSize.Width; //100f;
                    table10.SetWidths(cols);
                    PdfPCell cell = new PdfPCell();
                    cell.Border = 0;
                    cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table10.AddCell(cell);

                    cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                    cell.Phrase = new iTextSharp.text.Phrase(" تحويل بنكي رقم ", nationalTextFont16);
                    table10.AddCell(cell);

                    PdfPCell cell22 = new PdfPCell();
                    cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                    cell22.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/" + LocNumber.ToString(), nationalTextFont16);
                    table10.AddCell(cell22);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table10.AddCell(cell);

                    var TextCell = new PdfPCell(table10.DefaultCell);
                    TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    //TextCell.Border = 0;
                    TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                    PdfContentByte cb = writer.DirectContent;
                    var bc128 = new Barcode128();
                    bc128.CodeType = Barcode.CODE128;
                    bc128.Code = "/" + LocNumber.ToString() + MyNumber.ToString();
                    bc128.GenerateChecksum = true;
                    bc128.AltText = "";
                    bc128.StartStopText = true;

                    TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                    var bi = bc128.CreateImageWithBarcode(cb, null, null);
                    bi.ScalePercent(100);
                    bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                    TextCell.AddElement(bi);

                    //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                    //table.AddCell(cell);
                    table10.AddCell(TextCell);
                    document.Add(table10);
                    document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                    //-------------------------------------------------------------------------------------------
                    ColCount = 4;
                    cols = new[] { 260, 120, 260, 160 };
                    PdfPTable table11 = new PdfPTable(ColCount);
                    table11.TotalWidth = document.PageSize.Width; //100f;
                    table11.SetWidths(cols);
                    cell = new PdfPCell();
                    cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell.Border = 0;
                    //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    table11.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table11.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(" تاريخ التحويل:", nationalTextFont);
                    table11.AddCell(cell);

                    int Last = lJv.Count() - 1;
                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[Last].FDate, nationalTextFont);
                    table11.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("نوع التحويل:", nationalTextFont);
                    table11.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    if (lJv[Last].FNo2 == 0)
                    {
                        cell.Phrase = new iTextSharp.text.Phrase("تحويل داخلي", nationalTextFont);
                    }
                    else cell.Phrase = new iTextSharp.text.Phrase("تحويل خارجي", nationalTextFont);
                    table11.AddCell(cell);
                    //
                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("البنك المحول منه:", nationalTextFont);
                    table11.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[Last].AccName1, nationalTextFont);
                    table11.AddCell(cell);

                    
                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("مبلغ التحويل:", nationalTextFont);
                    table11.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", lJv[Last].Amount) + " ريال", nationalTextFont);
                    table11.AddCell(cell);

                    //
                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("اسم المحول:", nationalTextFont);
                    table11.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[Last].Person, nationalTextFont);
                    table11.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("نوع المستند:", nationalTextFont);
                    table11.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[0].DocType == 0 ? "طلب دفع" : "أخرى", nationalTextFont);
                    table11.AddCell(cell);

                    //
                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("وذلك عن:", nationalTextFont);
                    table11.AddCell(cell);

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase(lJv[Last].Remark, nationalTextFont);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table11.AddCell(cell);
                    //
                    document.Add(table11);
                    ColCount = 1;

                    cols = new[] { 800 };
                    PdfPTable table = new PdfPTable(ColCount);
                    table.TotalWidth = document.PageSize.Width; //100f;
                    table.SetWidths(cols);
                    cell = new PdfPCell();
                    cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell.FixedHeight = 20f;
                    cell.Border = 0;
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    //
                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase("الحسابات المدينة", nationalTextFont);
                    table.AddCell(cell);
                    //
                    document.Add(table);

                    ColCount = 4;

                    cols = new[] { 260, 400, 120, 120 };
                    table = new PdfPTable(ColCount);
                    table.TotalWidth = document.PageSize.Width; //100f;
                    table.SetWidths(cols);
                    cell = new PdfPCell();
                    cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell.FixedHeight = 20f;

                    //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    //
                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("رقم الحساب", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("أسم الحساب/الشرح/المستند", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("التوجية", nationalTextFont);
                    table.AddCell(cell);
                    //
                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                    double TotalDB = 0;
                    foreach (vJv itm in lJv)
                    {
                        if (itm.DbCode != "")
                        {
                            TotalDB += (double)itm.Amount;
                            cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.Amount), nationalTextFont);
                            table.AddCell(cell);

                            cell.Phrase = new iTextSharp.text.Phrase(itm.Code, nationalTextFont);
                            table.AddCell(cell);

                            PdfPTable headerTbl2 = new PdfPTable(1);
                            headerTbl2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                            headerTbl2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            PdfPCell cell3 = new PdfPCell(headerTbl2);
                            cell3.ArabicOptions = ColumnText.DIGITS_EN2AN;
                            //cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                            cell3.PaddingRight = 0;
                            PdfPCell cell2 = new PdfPCell();
                            //cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                            cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                            cell2.Phrase = new iTextSharp.text.Phrase(itm.AccName1, nationalTextFont);
                            cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                            cell2.Border = 0;
                            headerTbl2.AddCell(cell2);
                            cell2.Phrase = new iTextSharp.text.Phrase(itm.Remark, nationalTextFont);
                            headerTbl2.AddCell(cell2);
                            cell2.Phrase = new iTextSharp.text.Phrase(itm.InvNo, nationalTextFont);
                            headerTbl2.AddCell(cell2);
                            table.AddCell(cell3);

                            PdfPTable headerTbl3 = new PdfPTable(1);
                            headerTbl3.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                            headerTbl3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                            PdfPCell cell30 = new PdfPCell(headerTbl3);
                            cell30.ArabicOptions = ColumnText.DIGITS_EN2AN;
                            //cell30.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                            cell30.PaddingRight = 0;
                            PdfPCell cell20 = new PdfPCell();
                            //cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                            cell20.Border = 0;
                            cell20.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                            cell20.ArabicOptions = ColumnText.DIGITS_EN2AN;
                            if (!string.IsNullOrEmpty(itm.AreaName1))
                            {
                                cell20.Phrase = new iTextSharp.text.Phrase(itm.AreaName1, nationalTextFont);
                                headerTbl3.AddCell(cell20);
                            }
                            if (!string.IsNullOrEmpty(itm.CostName1))
                            {
                                cell20.Phrase = new iTextSharp.text.Phrase(itm.CostName1, nationalTextFont);
                                headerTbl3.AddCell(cell20);
                            }
                            if (!string.IsNullOrEmpty(itm.ProjectName1))
                            {
                                cell20.Phrase = new iTextSharp.text.Phrase(itm.ProjectName1, nationalTextFont);
                                headerTbl3.AddCell(cell20);
                            }
                            if (!string.IsNullOrEmpty(itm.CostName1))
                            {
                                cell20.Phrase = new iTextSharp.text.Phrase(itm.CostAccName1, nationalTextFont);
                                headerTbl3.AddCell(cell20);
                            }
                            if (!string.IsNullOrEmpty(itm.EmpName1))
                            {
                                cell20.Phrase = new iTextSharp.text.Phrase(itm.EmpName1, nationalTextFont);
                                headerTbl3.AddCell(cell20);
                            }
                            if (!string.IsNullOrEmpty(itm.CarType))
                            {
                                cell20.Phrase = new iTextSharp.text.Phrase(itm.CarType, nationalTextFont);
                                headerTbl3.AddCell(cell20);
                            }
                            table.AddCell(cell30);
                        }
                    }
                    cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", TotalDB), nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);
                    document.Add(table);

                    document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                    PdfPTable table5 = new PdfPTable(4);
                    table5.TotalWidth = 100f;

                    var cols5 = new[] { 220, 140, 300, 140 };
                    table5.SetWidths(cols5);
                    PdfPCell cell5 = new PdfPCell();
                    cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell5.FixedHeight = 20f;

                    table5.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    cell5.Phrase = new iTextSharp.text.Phrase("إدخلت بواسطة", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    //cell.Border = 0;
                    table5.AddCell(cell5);

                    TblUsers ax = new TblUsers();
                    if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    ax.UserName = lJv[0].UserName;
                    ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                          where uitm.UserName == ax.UserName
                          select uitm).FirstOrDefault();
                    if (ax == null)
                    {
                        cell5.Phrase = new iTextSharp.text.Phrase(lJv[0].UserName, nationalTextFont);
                    }
                    else
                    {
                        cell5.Phrase = new iTextSharp.text.Phrase(ax.FName, nationalTextFont);
                    }
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table5.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("تاريخ الإدخال", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table5.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(lJv[0].UserDate, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table5.AddCell(cell5);

                    document.Add(table5);
                    document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                    PdfPTable table50 = new PdfPTable(5);
                    table50.TotalWidth = 100f;
                    cell5 = new PdfPCell();
                    cols5 = new[] { 150, 150, 150, 150, 150};
                    table50.SetWidths(cols5);
                    cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    table50.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("المحول", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("المحاسب", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    //
                    //
                    cell5.Phrase = new iTextSharp.text.Phrase("        ", nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);

                    //
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    //
                    table50.AddCell(cell5);
                    cell5.Border = 2;
                    table50.AddCell(cell5);
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    cell5.Border = 2;
                    table50.AddCell(cell5);
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    //
                    document.Add(table50);
                    document.Close();

            }
            catch (Exception ex)
            {
                //LblCodesResult.ForeColor = System.Drawing.Color.Red;
                //LblCodesResult.Text = ex.Message.ToString();
                Session.Add("Error", ex);
                Response.Redirect("GeneralServerError.aspx",false);
            }
        }

        public class pdfPage106 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 250, 250, 300 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                vStr1 = " ";
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }


        #endregion

        #region 107 Print of Complex Payment Voucher
        public void PrintVou2(int FType, int MyNumber)
        {
            try
            {
                List<vJv> lJv = new List<vJv>();
                Jv myJv = new Jv();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                if (FType == 1) myJv.FType = 101;
                else myJv.FType = 102;
                myJv.LocType = LocType;
                myJv.LocNumber = LocNumber;
                myJv.Number = MyNumber;
                lJv = myJv.find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (lJv == null || lJv.Count == 0) return;

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage107 page = new pdfPage107();
                string ImagePath = "";
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                    ImagePath = mySetting.ImagePath;
                }

                String Username = "", AccManagerName = "", GMName = ""; ;
                String UserSignImage = "", AccManagerSign = "", GMSign = "";
                TblUsers ax = new TblUsers();
                if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                ax.UserName = lJv[0].UserName;
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax != null)
                {
                    Username = ax.FName;
                    UserSignImage = !string.IsNullOrEmpty(ax.Sign) ? ImagePath + ax.Sign : "";
                }

                ax = new TblUsers();
                ax.UserName = "sameh";
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax != null)
                {
                    AccManagerSign = !string.IsNullOrEmpty(ax.Sign) ? ImagePath + ax.Sign : "";
                    AccManagerName = ax.FName;
                }

                ax = new TblUsers();
                ax.UserName = "Admin";
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax != null)
                {
                    GMSign = !string.IsNullOrEmpty(ax.Sign) ? ImagePath + ax.Sign : "";
                    GMName = ax.FName;
                }


                writer.PageEvent = page;
                if (FType == 1)
                {
                    page.vStr1 = "سند القبض";
                    page.vStr2 = "أستلمنا من";
                }
                else
                {
                    page.vStr1 = "سند صرف شيك";
                    page.vStr2 = "أدفعوا لأمر";
                }
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                page.vStr3 = "الإدارة المالية";
                int ColCount = 4;
                var cols = new[] { 300, 120, 285, 100 };
                document.Open();
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.FixedHeight = 20f;
                cell.Border = 0;

                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);

                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("رقم السند", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[0].Number.ToString(), nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[0].FDate, nationalTextFont);
                table.AddCell(cell);

                //
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase(page.vStr2, nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[lJv.Count-1].Person, nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("مبلغ وقدره", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", lJv[lJv.Count - 1].Amount) + " ريال", nationalTextFont);
                table.AddCell(cell);


                //
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("حساب البنك", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[lJv.Count - 1].AccName1, nationalTextFont);
                table.AddCell(cell);


                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("وذلك عن", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[lJv.Count - 1].Remark, nationalTextFont);
                table.AddCell(cell);

                //
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("رقم الشيك", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[lJv.Count - 1].ChequeNo, nationalTextFont);
                table.AddCell(cell);


                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("تاريخ الشيك", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[lJv.Count - 1].ChequeDate, nationalTextFont);
                table.AddCell(cell);
                //
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("مسحوب على بنك", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[lJv.Count - 1].BankName, nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("نوع المستند", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[lJv.Count - 1].DocType == 0 ? "طلب دفع" : "أخرى", nationalTextFont);
                table.AddCell(cell);
                //
                document.Add(table);
                ColCount = 1;

                cols = new[] { 800 };
                table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.FixedHeight = 20f;
                cell.Border = 0;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                //
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase("الحسابات المدينة", nationalTextFont);
                table.AddCell(cell);
                //
                document.Add(table);

                ColCount = 4;

                cols = new[] { 260, 400, 120, 120 };
                table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.FixedHeight = 20f;

                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("رقم الحساب", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("أسم الحساب/الشرح/المستند", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التوجية", nationalTextFont);
                table.AddCell(cell);
                //
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                
                double TotalDB = 0;
                foreach (vJv itm in lJv)
                {
                    if (itm.DbCode != "")
                    {
                        TotalDB += (double)itm.Amount;
                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.Amount), nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(itm.Code, nationalTextFont);
                        table.AddCell(cell);

                        PdfPTable headerTbl2 = new PdfPTable(1);
                        headerTbl2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        headerTbl2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PdfPCell cell3 = new PdfPCell(headerTbl2);
                        cell3.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        //cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell3.PaddingRight = 0;
                        PdfPCell cell2 = new PdfPCell();
                        //cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        cell2.Phrase = new iTextSharp.text.Phrase(itm.AccName1, nationalTextFont);
                        cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell2.Border = 0;
                        headerTbl2.AddCell(cell2);
                        cell2.Phrase = new iTextSharp.text.Phrase(itm.Remark, nationalTextFont);
                        headerTbl2.AddCell(cell2);
                        cell2.Phrase = new iTextSharp.text.Phrase(itm.InvNo, nationalTextFont);
                        headerTbl2.AddCell(cell2);
                        table.AddCell(cell3);

                        PdfPTable headerTbl3 = new PdfPTable(1);
                        headerTbl3.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        headerTbl3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        PdfPCell cell30 = new PdfPCell(headerTbl3);
                        cell30.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        //cell30.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell30.PaddingRight = 0;
                        PdfPCell cell20 = new PdfPCell();
                        //cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell20.Border = 0;
                        cell20.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell20.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        if (!string.IsNullOrEmpty(itm.AreaName1))
                        {
                            cell20.Phrase = new iTextSharp.text.Phrase(itm.AreaName1, nationalTextFont);
                            headerTbl3.AddCell(cell20);
                        }
                        if (!string.IsNullOrEmpty(itm.CostName1))
                        {
                            cell20.Phrase = new iTextSharp.text.Phrase(itm.CostName1, nationalTextFont);
                            headerTbl3.AddCell(cell20);
                        }
                        if (!string.IsNullOrEmpty(itm.ProjectName1))
                        {
                            cell20.Phrase = new iTextSharp.text.Phrase(itm.ProjectName1, nationalTextFont);
                            headerTbl3.AddCell(cell20);
                        }
                        if (!string.IsNullOrEmpty(itm.CostName1))
                        {
                            cell20.Phrase = new iTextSharp.text.Phrase(itm.CostAccName1, nationalTextFont);
                            headerTbl3.AddCell(cell20);
                        }
                        if(!string.IsNullOrEmpty(itm.EmpName1))
                        {
                            cell20.Phrase = new iTextSharp.text.Phrase(itm.EmpName1, nationalTextFont);
                            headerTbl3.AddCell(cell20);
                        }
                        if (!string.IsNullOrEmpty(itm.CarType))
                        {
                            cell20.Phrase = new iTextSharp.text.Phrase(itm.CarType, nationalTextFont);
                            headerTbl3.AddCell(cell20);
                        }                        
                        table.AddCell(cell30);
                    }
                }
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", TotalDB), nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);

                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                PdfPTable table5 = new PdfPTable(4);
                table5.TotalWidth = 100f;

                var cols5 = new[] { 220, 140, 300, 140 };
                table5.SetWidths(cols5);
                PdfPCell cell5 = new PdfPCell();
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell5.FixedHeight = 20f;

                table5.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase("إدخلت بواسطة", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                //cell.Border = 0;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(Username, nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("تاريخ الإدخال", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(lJv[0].UserDate, nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                document.Add(table5);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                PdfPTable table50 = new PdfPTable(7);
                table50.TotalWidth = 100f;
                cell5 = new PdfPCell();
                cols5 = new[] { 100, 125, 100, 125, 100 , 125 , 100 };
                table50.SetWidths(cols5);
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table50.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("المستلم", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("المحاسب", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("رئيس الحسابات", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                if (UserSignImage != "")
                {
                    iTextSharp.text.Image logoSign1 = iTextSharp.text.Image.GetInstance(UserSignImage);
                    logoSign1.ScalePercent(100);
                    PdfPCell cellS1 = new PdfPCell(logoSign1);
                    cellS1.Border = 0;
                    cellS1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    table50.AddCell(cellS1);
                }
                else table50.AddCell(cell5);
                table50.AddCell(cell5);
                if (AccManagerSign != "")
                {
                    iTextSharp.text.Image logoSign1 = iTextSharp.text.Image.GetInstance(AccManagerSign);
                    logoSign1.ScalePercent(100);
                    PdfPCell cellS1 = new PdfPCell(logoSign1);
                    cellS1.Border = 0;
                    cellS1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    table50.AddCell(cellS1);
                }
                else table50.AddCell(cell5);
                table50.AddCell(cell5);
                //
                if (UserSignImage == "" && AccManagerSign == "")
                {
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);

                    //
                    table50.AddCell(cell5);
                    cell5.Border = 2;
                    table50.AddCell(cell5);
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    cell5.Border = 2;
                    table50.AddCell(cell5);
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    cell5.Border = 2;
                    table50.AddCell(cell5);
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    //
                }
                else
                {
                    //
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.Border = 2;
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase(Username, nationalTextFont);
                    cell5.Border = 2;
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase(AccManagerName, nationalTextFont);
                    cell5.Border = 2;
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    //
                }
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                //
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("المدير التنفيذي", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);
                //
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                if (GMSign != "")
                {
                    iTextSharp.text.Image logoSign1 = iTextSharp.text.Image.GetInstance(GMSign);
                    logoSign1.ScalePercent(75);
                    PdfPCell cellS1 = new PdfPCell(logoSign1);
                    cellS1.Border = 0;
                    cellS1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    table50.AddCell(cellS1);
                }
                else table50.AddCell(cell5);
                table50.AddCell(cell5);
                //
                //
                if (GMSign == "")
                {
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    //
                    //
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    cell5.Border = 2;
                    table50.AddCell(cell5);
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    //
                }
                else
                {
                    //
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase(GMName, nationalTextFont);
                    cell5.Border = 2;
                    table50.AddCell(cell5);
                    cell5.Border = 0;
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);
                    //
                }
                document.Add(table50);
                document.Close();
            }
            catch (Exception)
            {

            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage107 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 250, 300, 300 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion


        //--------------- الورشة و المخازن ------------------------------------------------------------------------------------------------------------------------------------------
        #region 800 Print of Check List

        public string RetImage(short? Tick)
        {
            string vResult = "images/Blank.Gif";
            if (Tick == 3) vResult = "images/Miss2.Gif";
            else if (Tick == 1) vResult = "images/ZA001117936.Gif";
            else if (Tick == 2) vResult = "images/ZA001117938.Gif";
            return vResult;
        }

        public void PrintCheckList(int MyNumber , short VouType)
        {
            try
            {
                CultureInfo culture = System.Threading.Thread.CurrentThread.CurrentCulture; // CultureInfo.CreateSpecificCulture("en-US");
                String UserName = "";
                ChList myJv = new ChList();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.VouLoc = short.Parse(AreaNo);
                myJv.VouType = VouType;
                myJv.VouNo = MyNumber;
                myJv = myJv.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myJv == null)
                {
                    return;
                }
                else
                {
                    TblUsers ax = new TblUsers();
                    if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    ax.UserName = myJv.UserName;
                    ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                          where uitm.UserName == ax.UserName
                          select uitm).FirstOrDefault();
                    if (ax != null)
                    {
                        UserName = ax.FName;
                    }                    
                }

                ChList myacc = new ChList();
                if (myJv.PVouNo != "" && myJv.PVouNo != "-1")
                {                    
                    myacc.Branch = short.Parse(Session["Branch"].ToString());
                    myacc.VouType = (short)(int.Parse(myJv.PVouNo.Split('/')[0]));
                    myacc.VouLoc = short.Parse(AreaNo);
                    myacc.VouNo = int.Parse(myJv.PVouNo.Split('/')[1]);
                    myacc = myacc.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (myacc == null)
                    {
                        return;
                    }
                }

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 75, 25);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage800 page = new pdfPage800();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                //Shop myShop = new Shop();
                //myShop.FType = 2;
                //myShop.Bran = 1;
                //myShop.Number = short.Parse(AreaNo);
                //if (myShop.GetShop(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                //{
                //    page.vStr4 = myShop.Name1;
                //}
                object keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Division" , culture);                
                page.vStr4 = keyValue.ToString();

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFontW2 = new iTextSharp.text.Font(nationalBase, 9f, iTextSharp.text.Font.NORMAL,iTextSharp.text.BaseColor.WHITE);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 7f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 9f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------                    
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------                    
                var cols = new[] { 200, 300, 50, 250 };
                if (culture.Name.ToUpper().Contains("AR")) cols = new[] { 250, 50, 300, 200 };
                document.Open();
                PdfPTable table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell2 = new PdfPCell();
                if(culture.Name.ToUpper().Contains("AR")) table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;


                cell2.Border = 0;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "CheckType" + (myJv.VouType).ToString(), culture);
                string myType = keyValue.ToString();
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblUserDate.Text", culture);
                cell2.Phrase = new iTextSharp.text.Phrase(keyValue.ToString() +" :" + myJv.VouDate + " " + myJv.InTime, nationalTextFont2);
                table.AddCell(cell2);

                cell2.HorizontalAlignment = (culture.Name.ToUpper().Contains("EN") ? iTextSharp.text.Element.ALIGN_LEFT : iTextSharp.text.Element.ALIGN_RIGHT);
                
                string vs = "";
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "No", culture);
                vs = " " + keyValue.ToString();
                if (VouType == 1)
                {
                    keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Note1", culture);                    //vs = "بيان تسليم شاحنة رقم";   // "Vehical Movement Check List";
                }
                else if (VouType == 2)
                {
                    keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Note2", culture);                    //vs = "بيان تحويل شاحنة رقم";  // "Vehical Movement Check List";
                }
                else
                {
                    keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Note3", culture);                    //vs = "بيان استلام شاحنة رقم";   // "Vehical Movement Check List";
                }

                cell2.Phrase = new iTextSharp.text.Phrase(keyValue.ToString() + vs, nationalTextFont16);
                table.AddCell(cell2);

                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() , nationalTextFont14);
                table.AddCell(cell2);

                var TextCell = new PdfPCell(table.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = int.Parse(AreaNo).ToString() + "/" + MyNumber.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect renderinfg.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(70);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table.AddCell(TextCell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                if (culture.Name.ToUpper().Contains("AR")) cols = new[] { 250,150,250,150 };
                else cols = new[] { 150, 250, 150, 250 };
                table = new PdfPTable(4);
                if (culture.Name.ToUpper().Contains("AR")) table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                //cell.FixedHeight = 20f;

                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;

                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblVNo.Text", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Vechicle, nationalTextFont14);
                table.AddCell(cell);
                

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Plate", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                string Model = "";
                Cars myInv = new Cars();
                myInv.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["Cars" + Session["CNN2"].ToString()] == null) Cache.Insert("Cars" + Session["CNN2"].ToString(), myInv.GetAll21(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myInv.Code = myJv.Vechicle;
                myInv.CarsType = int.Parse(myJv.Vechicle.Substring(0, 2));
                myInv = (from sitm in (List<Cars>)(Cache["Cars" + Session["CNN2"].ToString()])
                         where sitm.Code == myInv.Code
                         select sitm).FirstOrDefault();
                if (myInv != null)
                {
                    Model = (culture.Name.ToUpper().Contains("EN") ? myInv.CarType2 +" " + myInv.Model : myInv.CarType + " "+ myInv.Model);
                }                        
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(Model, nationalTextFont14);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;

                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", (myJv.FromPerson == "-1" || myJv.FromPerson == "0" ? "From" : "FromDriver"), culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                string vFrom = "";
                if (myJv.FromPerson == "-1")
                {
                    keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Workshop", culture);
                    vFrom = keyValue.ToString();
                }
                else if (myJv.FromPerson == "0")
                {
                    vFrom = myJv.From2;
                }
                else
                {
                    Drivers myDrive = new Drivers();
                    myDrive.Branch = 1;
                    if (Cache["Drivers" + Session["CNN2"].ToString()] == null) Cache.Insert("Drivers" + Session["CNN2"].ToString(), myDrive.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myDrive.Code = myJv.FromPerson;
                    myDrive = (from sitm in (List<Drivers>)(Cache["Drivers" + Session["CNN2"].ToString()])
                               where sitm.Code == myDrive.Code
                               select sitm).FirstOrDefault();
                    if (myDrive != null) vFrom = myDrive.Code + " " + (culture.Name.ToUpper().Contains("EN") ? myDrive.Name2 : myDrive.Name1);
                }
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(vFrom, nationalTextFont2);

                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;                
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", (myJv.ToPerson == "-1" || myJv.ToPerson == "0" ? "To" : "ToDriver"), culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                vFrom = "";
                if (myJv.ToPerson == "-1")
                {
                    keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Workshop", culture);
                    vFrom = keyValue.ToString();
                }
                else if (myJv.ToPerson == "0")
                {
                    vFrom = myJv.To2;
                }
                else
                {
                    Drivers myDrive = new Drivers();
                    myDrive.Branch = 1;
                    if (Cache["Drivers" + Session["CNN2"].ToString()] == null) Cache.Insert("Drivers" + Session["CNN2"].ToString(), myDrive.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myDrive.Code = myJv.ToPerson;
                    myDrive = (from sitm in (List<Drivers>)(Cache["Drivers" + Session["CNN2"].ToString()])
                               where sitm.Code == myDrive.Code
                               select sitm).FirstOrDefault();
                    if (myDrive != null) vFrom = myDrive.Code + " " + (culture.Name.ToUpper().Contains("EN") ? myDrive.Name2 : myDrive.Name1);
                }

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(vFrom, nationalTextFont2);
                table.AddCell(cell);
                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lbleType.Text", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.EngineType, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lbleNo.Text", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.EngineSNo, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblGBox.Text", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.GearType, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblGBoxNo.Text", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.GearSNo, nationalTextFont2);
                table.AddCell(cell);
                //-------------------------------------------------------------------------------------------
                /*
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblPumpType.Text", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.IPType, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblPumpNo.Text", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.IPSNo, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblAcType.Text", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.ACType, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblAcNo.Text", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.ACSNo, nationalTextFont2);
                table.AddCell(cell);
                 */
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                int ColCount = 1;
                cols = new[] { 800 };
                table = new PdfPTable(ColCount);
                if (culture.Name.ToUpper().Contains("AR")) table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.FixedHeight = 5f;
                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell = new PdfPCell();
                cell.Border = 0;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.BackgroundColor = iTextSharp.text.BaseColor.BLUE;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Accomplish", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFontW2);
                table.AddCell(cell);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.FixedHeight = 5f;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);
               
                //-------------------------------------------------------------------------------------------
                
                ColCount = 8;
                if (culture.Name.ToUpper().Contains("AR")) cols = new[] { 115,115,140,30,115,115,140,30 };
                else cols = new[] { 30, 140, 115, 115, 30, 140,115,115 };

                if (myJv.PVouNo == "" || myJv.PVouNo == "-1" || VouType == 1)
                {
                    ColCount = 6;
                    if (culture.Name.ToUpper().Contains("AR")) cols = new[] { 115,140, 30, 115, 140, 30 };
                    else cols = new[] { 30, 140,115, 30, 140, 115 };
                }



                table = new PdfPTable(ColCount);
                if (culture.Name.ToUpper().Contains("AR")) table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                //cell.FixedHeight = 20f;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblSL.Text" , culture);                
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Description" , culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                if (myJv.PVouNo != "" && myJv.PVouNo != "-1" && VouType != 1)
                {
                    keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblIssuance.Text", culture);
                    cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString() + " " + (char)0x202A + myJv.PVouNo.Split('/')[0] + (char)0x202A + "/" + (char)0x202A + myJv.PVouNo.Split('/')[1] + (char)0x202A, nationalTextFont2);
                    table.AddCell(cell);
                }

                // Arabic  (char)0x202B;
                // English  (char)0x202A;

                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblTurnOver.Text" , culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString() + " " + (char)0x202A + VouType.ToString() + (char)0x202A + "/" + (char)0x202A + MyNumber.ToString() + (char)0x202A, nationalTextFont2);
                table.AddCell(cell);

                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblSL.Text" , culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Description" , culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                table.AddCell(cell);

                if (myJv.PVouNo != "" && myJv.PVouNo != "-1" && VouType != 1)
                {
                    keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblIssuance.Text", culture);
                    cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString() + " " + (char)0x202A + myJv.PVouNo.Split('/')[0] + (char)0x202A + "/" + (char)0x202A + myJv.PVouNo.Split('/')[1] + (char)0x202A, nationalTextFont2);
                    table.AddCell(cell);
                }

                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblTurnOver.Text" , culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString() + " " + (char)0x202A + VouType.ToString() + (char)0x202A + "/" + (char)0x202A + MyNumber.ToString() + (char)0x202A, nationalTextFont2);
                table.AddCell(cell);
                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;                
                // Gets the value of associated with key "MyKey" from the local resource file for a given culture ("~/MyPage.aspx.en.resx") or from the default one ("~/MyPage.aspx.resx")
                //-------------------------------------------------------------------------------------------
                for (int i = 1; i < 29; i++)
                {
                    keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblSItem" + moh.MakeMask(i.ToString(),2)+".Text", culture);
                    cell.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                    table.AddCell(cell);
                    
                    PdfPCell Imagecell = new PdfPCell(); // { PaddingLeft = 5, PaddingTop = 5, PaddingBottom = 5, PaddingRight = 5 };
                    PropertyInfo propertyInfo = typeof(ChList).GetProperty("I" + moh.MakeMask(i.ToString(), 2));
                    iTextSharp.text.Image myImage = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));
                    iTextSharp.text.Paragraph p = new iTextSharp.text.Paragraph();

                    if (myJv.PVouNo != "" && myJv.PVouNo != "-1" && VouType != 1)
                    {                        
                        Imagecell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;                        
                        if (culture.Name.ToUpper().Contains("AR")) p.Alignment = iTextSharp.text.Element.ALIGN_LEFT;
                        p.SetLeading(0f, 1f);

                        propertyInfo = typeof(ChList).GetProperty("I" + moh.MakeMask(i.ToString(), 2));
                        myImage = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(RetImage((short?)propertyInfo.GetValue(myacc, null))));
                        myImage.ScalePercent(50);

                        string Tider = "";
                        if (i == 1)
                        {
                            if (myacc.Item00 != "-1")
                            {
                                Cars myInv0 = new Cars();
                                myInv0.Branch = short.Parse(Session["Branch"].ToString());
                                if (Cache["Cars" + Session["CNN2"].ToString()] == null) Cache.Insert("Cars" + Session["CNN2"].ToString(), myInv0.GetAll21(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                myInv0.CarsType = 2;
                                myInv0.Code = myacc.Item00;
                                myInv0 = (from sitm in (List<Cars>)(Cache["Cars" + Session["CNN2"].ToString()])
                                          where sitm.Code == myInv0.Code
                                          select sitm).FirstOrDefault();
                                if (myInv0 != null)
                                {
                                    Tider = myInv0.CarType2.Substring(0, 10);
                                } 
                            }
                        }

                        propertyInfo = typeof(ChList).GetProperty("Item" + moh.MakeMask(i.ToString(), 2));
                        if (culture.Name.ToUpper().Contains("AR"))
                        {
                            p.Add(new iTextSharp.text.Chunk(myImage, 0, 0));
                            p.Add(new iTextSharp.text.Phrase((string)propertyInfo.GetValue(myacc, null) + " " + Tider, nationalTextFont2));
                        }
                        else
                        {
                            p.Add(new iTextSharp.text.Phrase((string)propertyInfo.GetValue(myacc, null) + " " + Tider, nationalTextFont2));
                            p.Add(new iTextSharp.text.Chunk(myImage, 0, 0));
                        }
                        Imagecell.AddElement(p);
                        table.AddCell(Imagecell);
                    }

                    Imagecell = new PdfPCell(); // { PaddingLeft = 5, PaddingTop = 5, PaddingBottom = 5, PaddingRight = 5 };
                    Imagecell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    p = new iTextSharp.text.Paragraph();
                    if (culture.Name.ToUpper().Contains("AR")) p.Alignment = iTextSharp.text.Element.ALIGN_LEFT;

                    string Tider2 = "";
                    if (i == 1)
                    {
                        if (myJv.Item00 != "-1")
                        {
                            Cars myInv0 = new Cars();
                            myInv0.Branch = short.Parse(Session["Branch"].ToString());
                            if (Cache["Cars" + Session["CNN2"].ToString()] == null) Cache.Insert("Cars" + Session["CNN2"].ToString(), myInv0.GetAll21(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                            myInv0.CarsType = 2;
                            myInv0.Code = myJv.Item00;
                            myInv0 = (from sitm in (List<Cars>)(Cache["Cars" + Session["CNN2"].ToString()])
                                      where sitm.Code == myInv0.Code
                                      select sitm).FirstOrDefault();
                            if (myInv0 != null)
                            {
                                Tider2 = myInv0.CarType2.Substring(0, 10);
                            }
                        }
                    }

                    p.SetLeading(0f, 1f);
                    propertyInfo = typeof(ChList).GetProperty("I" + moh.MakeMask(i.ToString(), 2));
                    myImage = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(RetImage((short?)propertyInfo.GetValue(myJv, null))));
                    myImage.ScalePercent(50);
                    propertyInfo = typeof(ChList).GetProperty("Item" + moh.MakeMask(i.ToString(), 2));
                    if (culture.Name.ToUpper().Contains("AR"))
                    {
                        p.Add(new iTextSharp.text.Chunk(myImage, 0, 0));
                        p.Add(new iTextSharp.text.Phrase((string)propertyInfo.GetValue(myJv, null) + " " + Tider2, nationalTextFont2));
                    }
                    else
                    {
                        p.Add(new iTextSharp.text.Phrase((string)propertyInfo.GetValue(myJv, null) + " " + Tider2, nationalTextFont2));
                        p.Add(new iTextSharp.text.Chunk(myImage, 0, 0));
                    }
                    Imagecell.AddElement(p);
                    table.AddCell(Imagecell);


                    keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblSItem" + (i + 28).ToString() + ".Text", culture);
                    cell.Phrase = new iTextSharp.text.Phrase((i + 28).ToString(), nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont2);
                    table.AddCell(cell);

                    if (myJv.PVouNo != "" && myJv.PVouNo != "-1" && VouType != 1)
                    {
                        Imagecell = new PdfPCell(); // { PaddingLeft = 5, PaddingTop = 5, PaddingBottom = 5, PaddingRight = 5 };
                        Imagecell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        p = new iTextSharp.text.Paragraph();
                        if (culture.Name.ToUpper().Contains("AR")) p.Alignment = iTextSharp.text.Element.ALIGN_LEFT;

                        p.SetLeading(0f, 1f);
                        propertyInfo = typeof(ChList).GetProperty("I" + (i + 28).ToString());
                        myImage = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(RetImage((short?)propertyInfo.GetValue(myacc, null))));
                        myImage.ScalePercent(50);
                        propertyInfo = typeof(ChList).GetProperty("Item" + (i + 28).ToString());
                        if (culture.Name.ToUpper().Contains("AR"))
                        {
                            p.Add(new iTextSharp.text.Chunk(myImage, 0, 0));
                            p.Add(new iTextSharp.text.Phrase((string)propertyInfo.GetValue(myacc, null), nationalTextFont2));
                        }
                        else
                        {
                            p.Add(new iTextSharp.text.Phrase((string)propertyInfo.GetValue(myacc, null), nationalTextFont2));
                            p.Add(new iTextSharp.text.Chunk(myImage, 0, 0));
                        }
                        Imagecell.AddElement(p);
                        table.AddCell(Imagecell);
                    }

                    Imagecell = new PdfPCell(); // { PaddingLeft = 5, PaddingTop = 5, PaddingBottom = 5, PaddingRight = 5 };
                    Imagecell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    p = new iTextSharp.text.Paragraph();
                    if (culture.Name.ToUpper().Contains("AR")) p.Alignment = iTextSharp.text.Element.ALIGN_LEFT;

                    p.SetLeading(0f, 1f);
                    propertyInfo = typeof(ChList).GetProperty("I" + (i + 28).ToString());
                    myImage = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(RetImage((short?)propertyInfo.GetValue(myJv, null))));
                    myImage.ScalePercent(50);
                    propertyInfo = typeof(ChList).GetProperty("Item" + (i + 28).ToString());
                    if (culture.Name.ToUpper().Contains("AR"))
                    {
                        p.Add(new iTextSharp.text.Chunk(myImage, 0, 0));
                        p.Add(new iTextSharp.text.Phrase((string)propertyInfo.GetValue(myJv, null), nationalTextFont2));                            
                    }
                    else
                    {
                        p.Add(new iTextSharp.text.Phrase((string)propertyInfo.GetValue(myJv, null), nationalTextFont2));
                        p.Add(new iTextSharp.text.Chunk(myImage, 0, 0));
                    }
                    Imagecell.AddElement(p);
                    table.AddCell(Imagecell);
                }
                document.Add(table);
                ColCount = 1;
                cols = new[] { 800 };
                table = new PdfPTable(ColCount);
                if (culture.Name.ToUpper().Contains("AR")) table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.HorizontalAlignment = (culture.Name.ToUpper().Contains("EN") ? iTextSharp.text.Element.ALIGN_RIGHT : iTextSharp.text.Element.ALIGN_LEFT);

                cell.Border = 0;
                if (VouType != 3)
                {
                    keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblRemarks.Text", culture);
                    cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont14);
                    table.AddCell(cell);
                    cell.Phrase = new iTextSharp.text.Phrase(myJv.Remarks, nationalTextFont2);
                    table.AddCell(cell);
                    document.Add(table);
                }

                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));


                ColCount = 1;
                cols = new[] { 800 };
                table = new PdfPTable(ColCount);
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;

                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("الساده / إدارة التشغيل - الإدارة المالية", nationalTextFont14);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("السلام عليكم ورحمه الله وبركاته", nationalTextFont14);
                table.AddCell(cell);

                PdfPCell Imagecell2 = new PdfPCell(); // { PaddingLeft = 5, PaddingTop = 5, PaddingBottom = 5, PaddingRight = 5 };
                Imagecell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                Imagecell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                Imagecell2.Border = 0;
                iTextSharp.text.Image myImage2 = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(@"images/True.Gif"));
                // myImage.ScalePercent(50);
                iTextSharp.text.Paragraph p2 = new iTextSharp.text.Paragraph();
                p2.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                p2.SetLeading(0f, 0f);

                p2.Add(new iTextSharp.text.Phrase("تم أستلام الشاحنة (والمقطورة) الموضحه أعلاه   ", nationalTextFont14));
                p2.Add(new iTextSharp.text.Chunk(myImage2, 0, 0));
                p2.Add(new iTextSharp.text.Phrase(" توجد ملاحظات  ", nationalTextFont14));
                p2.Add(new iTextSharp.text.Chunk(myImage2, 0, 0));
                p2.Add(new iTextSharp.text.Phrase(" لا توجد ملاحظات ", nationalTextFont14));
                Imagecell2.AddElement(p2);
                table.AddCell(Imagecell2);

                //keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "lblRemarks.Text", culture);
                //cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont14);
                //table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Remarks, nationalTextFont14);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("شاكرين ومقدرين حسن تعاونكم معنا", nationalTextFont14);
                table.AddCell(cell);

                if(myJv.VouType == 3) document.Add(table);
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));



                ColCount = 7;
                cols = new[] { 115,115,115,115,115,115,115 };
                table = new PdfPTable(ColCount);
                if (culture.Name.ToUpper().Contains("AR")) table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;                               
                cell.Border = 0;

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Driver", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont14);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Mechanic", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont14);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Supervisor", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont14);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                // ---------------------------------------------
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;                               
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Name", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont14);
                cell.HorizontalAlignment = (culture.Name.ToUpper().Contains("EN") ? iTextSharp.text.Element.ALIGN_RIGHT : iTextSharp.text.Element.ALIGN_LEFT);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //--------------------------------------------------
                keyValue = HttpContext.GetLocalResourceObject("~/WebTCheckList.aspx", "Signature", culture);
                cell.Phrase = new iTextSharp.text.Phrase(keyValue.ToString(), nationalTextFont14);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //--------------------------------------------------
                document.Add(table);

                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage800 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";

                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\DTNASKH1.TTF";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 300 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 200, 200, 200, 200 };
                footerTbl.SetWidths(cols2);
                //footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                cell.PaddingRight = 5;
                cell.Phrase = new iTextSharp.text.Phrase("Printed Date " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Printed By " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("No of Print " + PageNo, footer);
                footerTbl.AddCell(cell);

                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Page No " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page
                cell.PaddingLeft = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }


        #endregion

        #region 801 Print of Fast Repair
        public void PrintFastRepair(int MyNumber)
        {
            try
            {
                FastRepair myJv = new FastRepair();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.LocType = LocType;
                myJv.VouLoc = short.Parse(AreaNo);
                myJv.VouNo = MyNumber;
                myJv = myJv.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myJv == null) return;


                string AgreeRemark1 = "", AgreeRemark2 = "", AgreeUserDate1 = "", AgreeUser1 = "", AgreeUserDate2 = "", AgreeUser2 = "", AgreeUserName1 = "", AgreeUserName2 = "", AgreeUserImage1 = "", AgreeUserImage2 = "", ImagePath = "";
                bool Agree1 = false, Agree2 = false;

                Agreement myAgree = new Agreement();
                myAgree.FType = 801;
                myAgree.LocType = LocType;
                myAgree.LocNumber = short.Parse(AreaNo);
                myAgree.Number = MyNumber;
                foreach (Agreement itm in myAgree.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                {
                    if (itm.FNo == 1)
                    {
                        AgreeRemark1 = itm.AgreeRemark;
                        Agree1 = (itm.Agree == 1);
                        AgreeUserDate1 = itm.AgreeUserDate;
                        AgreeUser1 = itm.AgreeUser;

                        TblUsers ax = new TblUsers();
                        ax.UserName = AgreeUser1;
                        ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                              where uitm.UserName == ax.UserName
                              select uitm).FirstOrDefault();
                        if (ax == null)
                        {
                            AgreeUserName1 = AgreeUser1;
                        }
                        else
                        {
                            AgreeUserName1 = ax.FName;
                            AgreeUserImage1 = ax.Sign;
                        }
                    }
                    else if (itm.FNo == 2)
                    {
                        AgreeRemark2 = itm.AgreeRemark;
                        Agree2 = (itm.Agree == 1);
                        AgreeUserDate2 = itm.AgreeUserDate;
                        AgreeUser2 = itm.AgreeUser;

                        TblUsers ax = new TblUsers();
                        ax.UserName = AgreeUser2;
                        ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                              where uitm.UserName == ax.UserName
                              select uitm).FirstOrDefault();
                        if (ax == null)
                        {
                            AgreeUserName2 = AgreeUser2;
                        }
                        else
                        {
                            AgreeUserName2 = ax.FName;
                            AgreeUserImage2 = ax.Sign;
                        }
                    }
                }


                string DriveName = "";
                Drivers myDrive = new Drivers();
                myDrive.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["Drivers" + Session["CNN2"].ToString()] == null) Cache.Insert("Drivers" + Session["CNN2"].ToString(), myDrive.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myDrive.Code = myJv.DriverNo;
                myDrive = (from sitm in (List<Drivers>)(Cache["Drivers" + Session["CNN2"].ToString()])
                           where sitm.Code == myDrive.Code
                           select sitm).FirstOrDefault();
                if (myDrive != null) DriveName = myDrive.Name1;

                Cars myCar = new Cars();
                myCar.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["Cars" + Session["CNN2"].ToString()] == null) Cache.Insert("Cars" + Session["CNN2"].ToString(), myCar.GetAll21(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myCar.Code = myJv.CarNo;
                myCar = (from sitm in (List<Cars>)(Cache["Cars" + Session["CNN2"].ToString()])
                         where sitm.Code == myCar.Code
                         select sitm).FirstOrDefault();
                if (myCar == null) return;

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage801 page = new pdfPage801();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                    ImagePath = mySetting.ImagePath2;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                page.vStr3 = (LocType == 3 ? "قسم الصيانة" : Session["AreaName"].ToString());

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                document.Open();
                int ColCount = 4;
                var cols = new[] { 125, 125, 200, 350 };
                PdfPTable table10 = new PdfPTable(ColCount);
                table10.TotalWidth = document.PageSize.Width; //100f;
                table10.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.Border = 0;
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table10.AddCell(cell);

                cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell.Phrase = new iTextSharp.text.Phrase("بيان أصلاح خارجي", nationalTextFont16);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table10.AddCell(cell);

                var TextCell = new PdfPCell(table10.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //TextCell.Border = 0;
                TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = (LocType == 3 ? "0" : "") + myJv.VouLoc.ToString() + "/" + myJv.VouNo.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table10.AddCell(TextCell);
                document.Add(table10);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                ColCount = 4;
                cols = new[] { 275, 125, 280, 120 };
                PdfPTable table11 = new PdfPTable(ColCount);
                table11.TotalWidth = document.PageSize.Width; //100f;
                table11.SetWidths(cols);
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.Border = 0;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table11.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table11.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //---------------------------------------------------------------------------------------
                cell.Phrase = new iTextSharp.text.Phrase("رقم البيان:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouNo.ToString() + "/" + (LocType == 3 ? "00" : "") + myJv.VouLoc.ToString(), nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التاريخ:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(HDate.RotateDate(myJv.VouDate), nationalTextFont);
                table11.AddCell(cell);
                //---------------------------------------------------------------------------------------
                cell.Phrase = new iTextSharp.text.Phrase("الوحدة:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myCar.CarType, nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("السائق:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(DriveName, nationalTextFont);
                table11.AddCell(cell);
                //---------------------------------------------------------------------------------------
                cell.Phrase = new iTextSharp.text.Phrase("ملاحظات:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Colspan = 3;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Remark, nationalTextFont);
                table11.AddCell(cell);
                //-------------------------------------------------------------------------------------------------   //
                document.Add(table11);
                cell.Colspan = 1;

                //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                PdfPTable table40 = new PdfPTable(6);
                table40.TotalWidth = 80f;
                PdfPCell cell4 = new PdfPCell();
                var cols4 = new[] { 100,100,100, 200, 225, 75 };
                table40.SetWidths(cols4);
                cell4.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table40.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table40.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell4.FixedHeight = 20f;
                cell4.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell4.Phrase = new iTextSharp.text.Phrase("تسلسل", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("البند", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("أرقام الفواتير", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("تاريخ الفاتورة", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("العدد", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont);
                table40.AddCell(cell4);
                cell4.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                int i = 1;
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am1 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("غسيل", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo1, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate1, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty1, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am1), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am2 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("زيوت وشحومات", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo2, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate2, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty2, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am2), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am3 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("بنشر", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo3, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate3, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty3, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am3), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am4 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أجره أصلاح ميكانيكي", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo4, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate4, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty4, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am4), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am5 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أطارات جديدة", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo5, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate5, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty5, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am5), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am6 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أطارات مستعملة", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo6, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate6, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty6, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am6), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am7 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("فحص كمبيوتر", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo7, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate7, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty7, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am7), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am8 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أجرة أصلاح كهربائي", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo8, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate8, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty8, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am8), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am9 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("بطارية", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo9, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate9, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty9, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am9), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am10 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أجره خراطه", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo10, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate10, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty10, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am10), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am11 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("تغيير ماء مقطر", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo11, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate11, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty11, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am11), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am12 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أجره لحام", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo12, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate12, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty12, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am12), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am13 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("قطع غيار", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo13, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate13, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty13, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am13), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am14 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أجرة سمكره", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo14, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate14, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty14, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am14), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am15 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أجرة أصلاح بخاخات", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo15, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate15, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty15, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am15), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am16 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أصلاح بساتم هيدرلوريك", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo16, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate16, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty16, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am16), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am17 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("تركيب قماشات فرامل", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo17, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate17, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty17, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am17), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am18 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("سمكره ودهان", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo18, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate18, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty18, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am18), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am19 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أصلاح ستارتر ودينمو", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo19, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate19, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty19, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am19), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am20 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("كبس ليات هيدرلوريك", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo20, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate20, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty20, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am20), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am21 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("اصلاح تكييف", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo21, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate21, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty21, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am21), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am22 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أصلاح رديتر", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo22, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate22, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty22, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am22), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am23 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("لحام تانك الديزل", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo23, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate23, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty23, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am23), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am24 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("ميزان وترصيص", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo24, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate24, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty24, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am24), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am25 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أصلاح راحه", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo25, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate25, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty25, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am25), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am26 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("تركيب زجاج", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo26, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate26, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty26, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am26), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am27 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("الفحص الدوري", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo27, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate27, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty27, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am27), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am28 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أخرى", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo28, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate28, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty28, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am28), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am29 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أصلاح بلوف هواء", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo29, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate29, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty29, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am29), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am30 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("تقديرات حوادث", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo30, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate30, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty30, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am30), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am31 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("مواد مستهلكه للصيانة", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo31, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate31, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty31, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am31), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am32 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("فرشه و تنجيد", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo32, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate32, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty32, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am32), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am33 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("ديزل وبنزين", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo33, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate33, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty33, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am33), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                if (myJv.Am34 > 0)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase("أصلاح طريق", nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvNo34, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvDate34, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(myJv.InvQty34, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am34), nationalTextFont);
                    table40.AddCell(cell4);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                table40.AddCell(cell4);
                i++;

                cell4.Phrase = new iTextSharp.text.Phrase("الضريبة", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Tax), nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table40.AddCell(cell4);

                cell4.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell4.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                cell4.Colspan = 1;
                table40.AddCell(cell4);

                cell4.Colspan = 1;
                cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.Am1 + myJv.Am2 + myJv.Am3 + myJv.Am4 + myJv.Am5 + myJv.Am6 + myJv.Am7 + myJv.Am8 + myJv.Am9 + myJv.Am10 + myJv.Am11 + myJv.Am12 + myJv.Am13 + myJv.Am14 + myJv.Am15 + myJv.Am16 + myJv.Am17 + myJv.Am18 + myJv.Am19 + myJv.Am20 + myJv.Am21 + myJv.Am22 + myJv.Am23 + myJv.Am24 + myJv.Am25 + myJv.Am26 + myJv.Am27 + myJv.Am28 + myJv.Am29 + myJv.Am30 + myJv.Am31 + myJv.Am32 + myJv.Am33 + myJv.Am34 + myJv.Tax), nationalTextFont);
                table40.AddCell(cell4);
                //---------------------------------------------------------------------------------------------------------------------------
                document.Add(table40);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                PdfPTable table50 = new PdfPTable(5);
                table50.TotalWidth = 100f;
                PdfPCell cell5 = new PdfPCell();
                var cols5 = new[] {50, 150,50 ,150, 50 };
                table50.SetWidths(cols5);
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table50.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("إدخلت بواسطة", nationalTextFont14);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);


                cell5.Phrase = new iTextSharp.text.Phrase("أعتماد الصيانة", nationalTextFont14);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);

                //

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);

                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);

                //

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);

                TblUsers ax1 = new TblUsers();
                if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax1.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                ax1.UserName = myJv.UserName;
                ax1 = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                       where uitm.UserName == ax1.UserName
                       select uitm).FirstOrDefault();
                if (ax1 == null)
                {
                    cell5.Phrase = new iTextSharp.text.Phrase(myJv.UserName, nationalTextFont);
                }
                else
                {
                    cell5.Phrase = new iTextSharp.text.Phrase(ax1.FName, nationalTextFont);
                }
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 2;
                table50.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);


                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 2;
                table50.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);
                document.Add(table50);





                //---------------------------------------------------------------------------------------
                table50 = new PdfPTable(5);
                table50.TotalWidth = 100f;
                cell5 = new PdfPCell();
                cols5 = new[] { 150, 150, 150, 150, 150 };
                table50.SetWidths(cols5);
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table50.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.MinimumHeight = 25f;

                if (AgreeUser1 != "")
                {
                    cell5.Colspan = 5;
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 1;
                    cell5.Phrase = new iTextSharp.text.Phrase("تعميد مدير التشغيل", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 5;
                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeRemark1, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 1;
                    cell5.Phrase = new iTextSharp.text.Phrase("حالة التعميد:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase((Agree1 ? "تمت الموافقة" : "تم الرفض"), nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Phrase = new iTextSharp.text.Phrase("أسم المستخدم:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeUserName1, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);

                    if (AgreeUserImage1 != "")
                    {
                        //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                        iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(ImagePath + AgreeUserImage1));
                        logo.ScalePercent(100);

                        //create instance of a table cell to contain the logo
                        PdfPCell cell20 = new PdfPCell(logo);

                        //align the logo to the right of the cell
                        cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        //add a bit of padding to bring it away from the right edge
                        cell20.PaddingTop = 0;
                        cell20.PaddingRight = 30;
                        //remove the border
                        cell20.Border = 0;

                        table50.AddCell(cell20);
                    }
                    else
                    {
                        cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        table50.AddCell(cell5);
                    }

                    cell5.Phrase = new iTextSharp.text.Phrase("تاريخ التعميد:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeUserDate1, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 5;
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                }

                if (AgreeUser2 != "")
                {
                    cell5.Colspan = 1;
                    cell5.Phrase = new iTextSharp.text.Phrase("تعميد الإدارة المالية", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);

                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 5;
                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeRemark2, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 1;
                    cell5.Phrase = new iTextSharp.text.Phrase("حالة التعميد:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase((Agree2 ? "تمت الموافقة" : "تم الرفض"), nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Phrase = new iTextSharp.text.Phrase("أسم المستخدم:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeUserName2, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);

                    if (AgreeUserImage2 != "")
                    {
                        //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                        iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(ImagePath + AgreeUserImage2));
                        logo.ScalePercent(100);

                        //create instance of a table cell to contain the logo
                        PdfPCell cell20 = new PdfPCell(logo);

                        //align the logo to the right of the cell
                        cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        //add a bit of padding to bring it away from the right edge
                        cell20.PaddingTop = 0;
                        cell20.PaddingRight = 30;
                        //remove the border
                        cell20.Border = 0;

                        table50.AddCell(cell20);
                    }
                    else
                    {
                        cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        table50.AddCell(cell5);
                    }

                    cell5.Phrase = new iTextSharp.text.Phrase("تاريخ التعميد:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeUserDate2, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 5;
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                }
                if (AgreeUser1 != "" || AgreeUser2 != "") document.Add(table50);






                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage801 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 250, 250, 300 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                vStr1 = " ";
                cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);


                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion



        #region 802 Print of Petty Cash
        public void PrintPettyCash(int MyNumber)
        {
            try
            {
                List<PettyCash> lJv = new List<PettyCash>();
                PettyCash myJv = new PettyCash();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.LocType = LocType;
                myJv.VouLoc = short.Parse(AreaNo);
                myJv.VouNo = MyNumber;
                lJv = myJv.find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (lJv == null) return;
                myJv = lJv[0];

                string AgreeRemark1 = "" , AgreeRemark2 = "", AgreeUserDate1 ="" , AgreeUser1 = "" ,  AgreeUserDate2 ="" , AgreeUser2 = "" , AgreeUserName1 = "" , AgreeUserName2 = "" , AgreeUserImage1 = "", AgreeUserImage2 = "" , ImagePath = "";
                bool Agree1 = false , Agree2 = false;

                Agreement myAgree = new Agreement();
                myAgree.FType = 802;
                myAgree.LocType = LocType;
                myAgree.LocNumber = short.Parse(AreaNo);
                myAgree.Number = MyNumber;
                foreach (Agreement itm in myAgree.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                {
                    if (itm.FNo == 1)
                    {
                        AgreeRemark1 = itm.AgreeRemark;
                        Agree1 = (itm.Agree == 1);
                        AgreeUserDate1 = itm.AgreeUserDate;
                        AgreeUser1 = itm.AgreeUser;

                        TblUsers ax = new TblUsers();
                        ax.UserName = AgreeUser1;
                        ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                              where uitm.UserName == ax.UserName
                              select uitm).FirstOrDefault();
                        if (ax == null)
                        {
                            AgreeUserName1 = AgreeUser1;
                        }
                        else
                        {
                            AgreeUserName1 = ax.FName;
                            AgreeUserImage1 = ax.Sign;
                        }
                    }
                    else if (itm.FNo == 2)
                    {
                        AgreeRemark2 = itm.AgreeRemark;
                        Agree2 = (itm.Agree == 1);
                        AgreeUserDate2 = itm.AgreeUserDate;
                        AgreeUser2 = itm.AgreeUser;

                        TblUsers ax = new TblUsers();
                        ax.UserName = AgreeUser2;
                        ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                              where uitm.UserName == ax.UserName
                              select uitm).FirstOrDefault();
                        if (ax == null)
                        {
                            AgreeUserName2 = AgreeUser2;
                        }
                        else
                        {
                            AgreeUserName2 = ax.FName;
                            AgreeUserImage2 = ax.Sign;
                        }
                    }
                }

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage802 page = new pdfPage802();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                    ImagePath = mySetting.ImagePath2;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                page.vStr3 = (LocType == 3 ? "قسم الصيانة" : Session["AreaName"].ToString());

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                document.Open();
                int ColCount = 4;
                var cols = new[] { 125, 125, 200, 350 };
                PdfPTable table10 = new PdfPTable(ColCount);
                table10.TotalWidth = document.PageSize.Width; //100f;
                table10.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.Border = 0;
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table10.AddCell(cell);

                cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell.Phrase = new iTextSharp.text.Phrase("بيان مصروفات نثرية", nationalTextFont16);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table10.AddCell(cell);

                var TextCell = new PdfPCell(table10.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //TextCell.Border = 0;
                TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = (LocType == 3 ? "0" : "") + myJv.VouLoc.ToString() + "/" + myJv.VouNo.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table10.AddCell(TextCell);
                document.Add(table10);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                ColCount = 4;
                cols = new[] { 275, 125, 280, 120 };
                PdfPTable table11 = new PdfPTable(ColCount);
                table11.TotalWidth = document.PageSize.Width; //100f;
                table11.SetWidths(cols);
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.Border = 0;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table11.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table11.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //---------------------------------------------------------------------------------------
                cell.Phrase = new iTextSharp.text.Phrase("رقم البيان:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouNo.ToString() + "/" + (LocType == 3 ? "00" : "") + myJv.VouLoc.ToString(), nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التاريخ:", nationalTextFont14);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(HDate.RotateDate(myJv.VouDate), nationalTextFont);
                table11.AddCell(cell);
                //---------------------------------------------------------------------------------------
                //cell.Phrase = new iTextSharp.text.Phrase("ملاحظات:", nationalTextFont14);
                //table11.AddCell(cell);

                //cell.Colspan = 3;
                //cell.Phrase = new iTextSharp.text.Phrase(myJv.Remark, nationalTextFont);
                //table11.AddCell(cell);
                //-------------------------------------------------------------------------------------------------   //
                document.Add(table11);
                cell.Colspan = 1;

                //cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                PdfPTable table40 = new PdfPTable(8);
                table40.TotalWidth = 80f;
                PdfPCell cell4 = new PdfPCell();
                var cols4 = new[] { 90, 90, 90, 90,90,150,150, 75 };
                table40.SetWidths(cols4);
                cell4.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table40.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table40.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell4.FixedHeight = 20f;
                cell4.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell4.Phrase = new iTextSharp.text.Phrase("تسلسل", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("المصروف", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("ملاحظات", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("رقم الفاتورة", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("تاريخ الفاتورة", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("الضريبة", nationalTextFont);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase("القيمة", nationalTextFont);
                table40.AddCell(cell4);
                cell4.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                int i = 1;
                //---------------------------------------------------------------------------------------------------------------------------
                double Total = 0;
                foreach(PettyCash itm in lJv)
                {
                    cell4.Phrase = new iTextSharp.text.Phrase(i.ToString(), nationalTextFont);
                    table40.AddCell(cell4);
                    i++;

                    cell4.Phrase = new iTextSharp.text.Phrase(itm.Name, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(itm.Remark, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(itm.InvNo, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(itm.FDate, nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.Amount), nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.Tax), nationalTextFont);
                    table40.AddCell(cell4);

                    cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.Amount + itm.Tax), nationalTextFont);
                    table40.AddCell(cell4);
                    Total += (double)(itm.Amount + itm.Tax);
                }
                //---------------------------------------------------------------------------------------------------------------------------
                cell4.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table40.AddCell(cell4);
                cell4.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                table40.AddCell(cell4);
                cell4.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table40.AddCell(cell4);
                table40.AddCell(cell4);
                table40.AddCell(cell4);
                table40.AddCell(cell4);
                table40.AddCell(cell4);

                cell4.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Total), nationalTextFont);
                table40.AddCell(cell4);
                //---------------------------------------------------------------------------------------------------------------------------
                document.Add(table40);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                PdfPTable table50 = new PdfPTable(5);
                table50.TotalWidth = 100f;
                PdfPCell cell5 = new PdfPCell();
                var cols5 = new[] { 50, 150, 50, 150, 50 };
                table50.SetWidths(cols5);
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table50.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.FixedHeight = 25f;                

                cell5.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("إدخلت بواسطة", nationalTextFont14);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);


                cell5.Phrase = new iTextSharp.text.Phrase("الحسابات", nationalTextFont14);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table50.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);

                //

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);

                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);
                table50.AddCell(cell5);

                //

                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table50.AddCell(cell5);

                TblUsers ax1 = new TblUsers();
                if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax1.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                ax1.UserName = myJv.UserName;
                ax1 = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                       where uitm.UserName == ax1.UserName
                       select uitm).FirstOrDefault();
                if (ax1 == null)
                {
                    cell5.Phrase = new iTextSharp.text.Phrase(myJv.UserName, nationalTextFont);
                }
                else
                {
                    cell5.Phrase = new iTextSharp.text.Phrase(ax1.FName, nationalTextFont);
                }
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 2;
                table50.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);


                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 2;
                table50.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell5.Border = 0;
                table50.AddCell(cell5);

                document.Add(table50);

                //---------------------------------------------------------------------------------------
                table50 = new PdfPTable(5);
                table50.TotalWidth = 100f;
                cell5 = new PdfPCell();
                cols5 = new[] { 150,150,150,150,150 };
                table50.SetWidths(cols5);
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                table50.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.MinimumHeight = 25f;                

                if (AgreeUser1 != "")
                {
                    cell5.Colspan = 5;
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 1;
                    cell5.Phrase = new iTextSharp.text.Phrase("تعميد مدير التشغيل", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 5;
                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeRemark1, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 1;
                    cell5.Phrase = new iTextSharp.text.Phrase("حالة التعميد:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase((Agree1 ? "تمت الموافقة" : "تم الرفض"), nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Phrase = new iTextSharp.text.Phrase("أسم المستخدم:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeUserName1, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);

                    if (AgreeUserImage1 != "")
                    {
                        //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                        iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(ImagePath + AgreeUserImage1));
                        logo.ScalePercent(100);

                        //create instance of a table cell to contain the logo
                        PdfPCell cell20 = new PdfPCell(logo);

                        //align the logo to the right of the cell
                        cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        //add a bit of padding to bring it away from the right edge
                        cell20.PaddingTop = 0;
                        cell20.PaddingRight = 30;
                        //remove the border
                        cell20.Border = 0;

                        table50.AddCell(cell20);                        
                    }
                    else
                    {
                        cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        table50.AddCell(cell5);
                    }

                    cell5.Phrase = new iTextSharp.text.Phrase("تاريخ التعميد:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeUserDate1, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 5;
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                }

                if (AgreeUser2 != "")
                {
                    cell5.Colspan = 1;
                    cell5.Phrase = new iTextSharp.text.Phrase("تعميد الإدارة المالية", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell5.Border = 0;
                    table50.AddCell(cell5);

                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);

                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 5;
                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeRemark2, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell5.Border = 0;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 1;
                    cell5.Phrase = new iTextSharp.text.Phrase("حالة التعميد:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase((Agree2 ? "تمت الموافقة" : "تم الرفض"), nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    cell5.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Phrase = new iTextSharp.text.Phrase("أسم المستخدم:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeUserName2, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);

                    if (AgreeUserImage2 != "")
                    {
                        //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                        iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(ImagePath + AgreeUserImage2));
                        logo.ScalePercent(100);

                        //create instance of a table cell to contain the logo
                        PdfPCell cell20 = new PdfPCell(logo);

                        //align the logo to the right of the cell
                        cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        //add a bit of padding to bring it away from the right edge
                        cell20.PaddingTop = 0;
                        cell20.PaddingRight = 30;
                        //remove the border
                        cell20.Border = 0;

                        table50.AddCell(cell20);
                    }
                    else
                    {
                        cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        table50.AddCell(cell5);
                    }

                    cell5.Phrase = new iTextSharp.text.Phrase("تاريخ التعميد:", nationalTextFont14);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                    table50.AddCell(cell5);

                    cell5.Phrase = new iTextSharp.text.Phrase(AgreeUserDate2, nationalTextFont);
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                    cell5.Colspan = 5;
                    cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    table50.AddCell(cell5);
                    //---------------------------------------------------------------------------------------
                }
                if (AgreeUser1 != "" || AgreeUser2 != "") document.Add(table50);


                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage802 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 250, 250, 300 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                vStr1 = " ";
                cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);


                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion



        #region 201 Print of Purchase Request
        public void PrintPurchaseRequest(int MyNumber)
        {
            try
            {
                String UserName = "";
                List<vPReq> VouData = new List<vPReq>();
                PReq myJv = new PReq();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.VouLoc = short.Parse(AreaNo);
                myJv.VouNo = MyNumber;
                myJv = myJv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString).FirstOrDefault();
                if (myJv == null)
                {
                    return;
                }
                else
                {
                    TblUsers ax = new TblUsers();
                    if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    ax.UserName = myJv.UserName;
                    ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                          where uitm.UserName == ax.UserName
                          select uitm).FirstOrDefault();
                    if (ax != null)
                    {
                        UserName = ax.FName;
                    }
                    VouData = myJv.Find20(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                }

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage201 page = new pdfPage201();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                Shop myShop = new Shop();
                myShop.FType = 2;
                myShop.Bran = 1;
                myShop.Number = short.Parse(AreaNo);
                if (myShop.GetShop(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                {
                    page.vStr4 = myShop.Name1;
                }

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------                    
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------                    
                var cols = new[] { 200, 200, 100, 250 };
                document.Open();
                PdfPTable table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;

                PdfPCell cell22 = new PdfPCell();
                //cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                cell2.Border = 0;
                cell2.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont16);
                table.AddCell(cell2);

                cell2.Phrase = new iTextSharp.text.Phrase(" Purchase Request ", nationalTextFont16);
                table.AddCell(cell2);

                cell22.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/" + int.Parse(AreaNo).ToString(), nationalTextFont16);
                table.AddCell(cell22);

                var TextCell = new PdfPCell(table.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = int.Parse(AreaNo).ToString() + "/" + MyNumber.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table.AddCell(TextCell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                cols = new[] { 150, 250, 150, 250 };
                table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.FixedHeight = 20f;

                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("Request No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Request Date", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouDate, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Job Order No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.JobOrder.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Remark", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Remark, nationalTextFont2);
                table.AddCell(cell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                int ColCount = 6;
                cols = new[] { 50, 100, 300, 120, 120, 120 };
                table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.FixedHeight = 20f;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("SL", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part No", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part Name", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Unit", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Qty", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Balance", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                double Quan = 0;
                if (VouData != null && VouData.Count() > 0)
                {
                    foreach (vPReq inv in VouData)
                    {

                        cell.Phrase = new iTextSharp.text.Phrase(inv.FNo.ToString(), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITCode, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.UnitName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Quan), nationalTextFont2);
                        table.AddCell(cell);
                        Quan += (double)inv.Quan;

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Bal), nationalTextFont2);
                        table.AddCell(cell);
                    }
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Quan), nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont2);
                    table.AddCell(cell);

                }
                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                table = new PdfPTable(7);
                table.TotalWidth = document.PageSize.Width; //100f;
                cols = new[] { 50, 200, 50, 200, 50, 200, 50 };
                table.SetWidths(cols);
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell = new PdfPCell();
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;  
                cell.Phrase = new iTextSharp.text.Phrase("Store Employee", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;  
                cell.Phrase = new iTextSharp.text.Phrase("Receiver", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;  
                cell.Phrase = new iTextSharp.text.Phrase("Accountant", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(page.UserName, nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);
                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage201 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";

                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\DTNASKH1.TTF";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 300 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 200, 200, 200, 200 };
                footerTbl.SetWidths(cols2);
                //footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                cell.PaddingRight = 5;
                cell.Phrase = new iTextSharp.text.Phrase("Printed Date " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Printed By " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("No of Print " + PageNo, footer);
                footerTbl.AddCell(cell);

                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Page No " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page
                cell.PaddingLeft = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 202 Print of Purchase Order
        public void PrintPurchaseOrder(int MyNumber)
        {
            try
            {
                String UserName = "";
                List<vPO> VouData = new List<vPO>();
                PO myJv = new PO();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.VouLoc = short.Parse(AreaNo);
                myJv.VouNo = MyNumber;
                myJv = myJv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString).FirstOrDefault();
                if (myJv == null)
                {
                    return;
                }
                else
                {
                    TblUsers ax = new TblUsers();
                    if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    ax.UserName = myJv.UserName;
                    ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                          where uitm.UserName == ax.UserName
                          select uitm).FirstOrDefault();
                    if (ax != null)
                    {
                        UserName = ax.FName;
                    }
                    VouData = myJv.Find20(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                }

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage202 page = new pdfPage202();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                Shop myShop = new Shop();
                myShop.FType = 2;
                myShop.Bran = 1;
                myShop.Number = short.Parse(AreaNo);
                if (myShop.GetShop(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                {
                    page.vStr4 = myShop.Name1;
                }

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------                    
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------                    
                var cols = new[] { 200, 200, 100, 250 };
                document.Open();
                PdfPTable table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;

                PdfPCell cell22 = new PdfPCell();
                //cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                cell2.Border = 0;
                cell2.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont16);
                table.AddCell(cell2);

                cell2.Phrase = new iTextSharp.text.Phrase(" Purchase Order ", nationalTextFont16);
                table.AddCell(cell2);

                cell22.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/" + int.Parse(AreaNo).ToString(), nationalTextFont16);
                table.AddCell(cell22);

                var TextCell = new PdfPCell(table.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = int.Parse(AreaNo).ToString() + "/" + MyNumber.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table.AddCell(TextCell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                cols = new[] { 150, 250, 150, 250 };
                table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.FixedHeight = 20f;

                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("Order No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Order Date", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouDate, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Request No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.RefNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Remark", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Remark, nationalTextFont2);
                table.AddCell(cell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                int ColCount = 7;
                cols = new[] { 50, 100, 250, 100, 100, 100, 100 };
                table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.FixedHeight = 20f;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("SL", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part No", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part Name", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Unit", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Qty", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Price", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Amount", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                double Quan = 0;
                double Amount = 0;
                if (VouData != null && VouData.Count() > 0)
                {
                    foreach (vPO inv in VouData)
                    {

                        cell.Phrase = new iTextSharp.text.Phrase(inv.FNo.ToString(), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITCode, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.UnitName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Quan), nationalTextFont2);
                        table.AddCell(cell);
                        Quan += (double)inv.Quan;

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Price), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Amount), nationalTextFont2);
                        table.AddCell(cell);
                        Amount += (double)inv.Amount;

                    }
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("Amount", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Quan), nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Amount), nationalTextFont2);
                    table.AddCell(cell);

                    //-------------------------------------------------------------------------------------------------
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("Tax", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", VouData[0].Tax), nationalTextFont2);
                    table.AddCell(cell);
                    //-------------------------------------------------------------------------------------------------
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", VouData[0].Tax + Amount), nationalTextFont2);
                    table.AddCell(cell);









                }
                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                table = new PdfPTable(7);
                table.TotalWidth = document.PageSize.Width; //100f;
                cols = new[] { 50, 200, 50, 200, 50, 200, 50 };
                table.SetWidths(cols);
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell = new PdfPCell();
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Store Employee", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Receiver", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Accountant", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(page.UserName, nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);
                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage202 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";

                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\DTNASKH1.TTF";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 18f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 300 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 200, 200, 200, 200 };
                footerTbl.SetWidths(cols2);
                //footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                cell.PaddingRight = 5;
                cell.Phrase = new iTextSharp.text.Phrase("Printed Date " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Printed By " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("No of Print " + PageNo, footer);
                footerTbl.AddCell(cell);

                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Page No " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page
                cell.PaddingLeft = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 203 Print of Delivery Note
        public void PrintDeliveryNote(int MyNumber)
        {
            try
            {
                String UserName = "";
                List<vSTP> VouData = new List<vSTP>();
                STP myJv = new STP();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.Ftype = 601;
                myJv.VouLoc = short.Parse(AreaNo);
                myJv.VouNo = MyNumber;
                myJv = myJv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString).FirstOrDefault();
                if (myJv == null)
                {
                    return;
                }
                else
                {
                    TblUsers ax = new TblUsers();
                    if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    ax.UserName = myJv.UserName;
                    ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                          where uitm.UserName == ax.UserName
                          select uitm).FirstOrDefault();
                    if (ax != null)
                    {
                        UserName = ax.FName;
                    }
                    VouData = myJv.Find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                }

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage203 page = new pdfPage203();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                Shop myShop = new Shop();
                myShop.FType = 2;
                myShop.Bran = 1;
                myShop.Number = short.Parse(AreaNo);
                if (myShop.GetShop(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                {
                    page.vStr4 = myShop.Name1;
                }

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------                    
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------                    
                var cols = new[] { 200, 200, 100, 250 };
                document.Open();
                PdfPTable table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;

                PdfPCell cell22 = new PdfPCell();
                //cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                cell2.Border = 0;
                cell2.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont16);
                table.AddCell(cell2);

                cell2.Phrase = new iTextSharp.text.Phrase(" Delivery Note ", nationalTextFont16);
                table.AddCell(cell2);

                cell22.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/" + int.Parse(AreaNo).ToString(), nationalTextFont16);
                table.AddCell(cell22);

                var TextCell = new PdfPCell(table.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = int.Parse(AreaNo).ToString() + "/" + MyNumber.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table.AddCell(TextCell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                cols = new[] { 150, 250, 150, 250 };
                table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.FixedHeight = 20f;

                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("Note No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Date", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouDate, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Document No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.RefNo.ToString() + " " + (myJv.InvType == 0 ? "Purchase Order" : myJv.InvType == 1 ? "Issue Note (Transfer)" : "Job Order (Returned)"), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Remark", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Remark, nationalTextFont2);
                table.AddCell(cell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                int ColCount = 7;
                cols = new[] { 50, 100, 250, 100, 100, 100, 100 };
                table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.FixedHeight = 20f;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("SL", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part No", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part Name", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Unit", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Before Balance", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Qty", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("After Balance", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                double Quan = 0;
                if (VouData != null && VouData.Count() > 0)
                {
                    foreach (vSTP inv in VouData)
                    {

                        cell.Phrase = new iTextSharp.text.Phrase(inv.FNo.ToString(), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITCode, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.UnitName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Bal), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Quan), nationalTextFont2);
                        table.AddCell(cell);
                        Quan += (double)inv.Quan;

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Bal2), nationalTextFont2);
                        table.AddCell(cell);
                    }
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Quan), nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table.AddCell(cell);

                }
                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                table = new PdfPTable(7);
                table.TotalWidth = document.PageSize.Width; //100f;
                cols = new[] { 50, 200, 50, 200, 50, 200, 50 };
                table.SetWidths(cols);
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell = new PdfPCell();
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Store Employee", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Receiver", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Accountant", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(page.UserName, nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);
                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage203 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";

                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\DTNASKH1.TTF";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 300 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 200, 200, 200, 200 };
                footerTbl.SetWidths(cols2);
                //footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                cell.PaddingRight = 5;
                cell.Phrase = new iTextSharp.text.Phrase("Printed Date " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Printed By " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("No of Print " + PageNo, footer);
                footerTbl.AddCell(cell);

                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Page No " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page
                cell.PaddingLeft = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 204 Print of Purchase Invoice
        public void PrintPurchaseInvoice(int MyNumber)
        {
            try
            {

                Jv vJv = new Jv();
                vJv.Branch = short.Parse(Session["Branch"].ToString());
                vJv.LocType = 2;
                vJv.FType = 501;
                vJv.Number = MyNumber;
                vJv.LocNumber = short.Parse(AreaNo);
                vJv = (from itm in vJv.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString)
                       where itm.DbCode == "120409001"
                       select itm).FirstOrDefault();

                String UserName = "";
                List<vSTP> VouData = new List<vSTP>();
                STP myJv = new STP();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.Ftype = 501;
                myJv.VouLoc = short.Parse(AreaNo);
                myJv.VouNo = MyNumber;
                myJv = myJv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString).FirstOrDefault();
                if (myJv == null)
                {
                    return;
                }
                else
                {
                    TblUsers ax = new TblUsers();
                    if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    ax.UserName = myJv.UserName;
                    ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                          where uitm.UserName == ax.UserName
                          select uitm).FirstOrDefault();
                    if (ax != null)
                    {
                        UserName = ax.FName;
                    }
                    VouData = myJv.Find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                }

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage204 page = new pdfPage204();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                Shop myShop = new Shop();
                myShop.FType = 2;
                myShop.Bran = 1;
                myShop.Number = short.Parse(AreaNo);
                if (myShop.GetShop(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                {
                    page.vStr4 = myShop.Name1;
                }

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------                    
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------                    
                var cols = new[] { 200, 200, 100, 250 };
                document.Open();
                PdfPTable table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;

                PdfPCell cell22 = new PdfPCell();
                //cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                cell2.Border = 0;
                cell2.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont16);
                table.AddCell(cell2);

                cell2.Phrase = new iTextSharp.text.Phrase(" Purchase Invoice ", nationalTextFont16);
                table.AddCell(cell2);

                cell22.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/" + int.Parse(AreaNo).ToString(), nationalTextFont16);
                table.AddCell(cell22);

                var TextCell = new PdfPCell(table.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = int.Parse(AreaNo).ToString() + "/" + MyNumber.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table.AddCell(TextCell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                cols = new[] { 150, 250, 150, 250 };
                table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.FixedHeight = 20f;

                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("Invoice No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Date", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouDate, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Delivery Note No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.RefNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Remark", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Remark, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Account", nationalTextFont2);
                table.AddCell(cell);

                Acc myAcc = new Acc();
                myAcc.Branch = short.Parse(Session["Branch"].ToString());
                myAcc.Code = myJv.CrCode.ToString();
                myAcc.GetAcc(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myAcc.Name1, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Invoice Type", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.InvType == 0 ? "Cash Invoice" : "Credit Invoice", nationalTextFont2);
                table.AddCell(cell);

                document.Add(table);
                //-------------------------------------------------------------------------------------------
                // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                int ColCount = 7;
                cols = new[] { 50, 100, 250, 100, 100, 100, 100 };
                table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.FixedHeight = 20f;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("SL", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part No", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part Name", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Unit", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Qty", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Price", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Amount", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                double Quan = 0;
                double Amount = 0;
                if (VouData != null && VouData.Count() > 0)
                {
                    foreach (vSTP inv in VouData)
                    {

                        cell.Phrase = new iTextSharp.text.Phrase(inv.FNo.ToString(), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITCode, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.UnitName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Quan), nationalTextFont2);
                        table.AddCell(cell);
                        Quan += (double)inv.Quan;

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Price), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Amount), nationalTextFont2);
                        table.AddCell(cell);
                        Amount += (double)inv.Amount;

                    }
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("Amount", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Quan), nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Amount), nationalTextFont2);
                    table.AddCell(cell);

                    //------------------------------------------------------------------------------
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(moh.doTax(myJv.VouDate,2), nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", (vJv != null ? vJv.Amount : 0)), nationalTextFont2);
                    table.AddCell(cell);
                    //-------------------------------------------------------------------------------------
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Amount + (vJv != null ? vJv.Amount : 0)), nationalTextFont2);
                    table.AddCell(cell);
                }
                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                cols = new[] { 150, 250, 150, 250 };
                table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.FixedHeight = 20f;

                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("Expenses Amount", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myJv.ExpAmount), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Expenses Reference", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.ExpRef, nationalTextFont2);
                table.AddCell(cell);
                document.Add(table);

                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                table = new PdfPTable(7);
                table.TotalWidth = document.PageSize.Width; //100f;
                cols = new[] { 50, 200, 50, 200, 50, 200, 50 };
                table.SetWidths(cols);
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell = new PdfPCell();
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Data Entry By", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Receiver", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Accountant", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(page.UserName, nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);
                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage204 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";

                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\DTNASKH1.TTF";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 300 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 200, 200, 200, 200 };
                footerTbl.SetWidths(cols2);
                //footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                cell.PaddingRight = 5;
                cell.Phrase = new iTextSharp.text.Phrase("Printed Date " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Printed By " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("No of Print " + PageNo, footer);
                footerTbl.AddCell(cell);

                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Page No " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page
                cell.PaddingLeft = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 205 Print of Return Purchase Invoice
        public void PrintReturnPurchaseInvoice(int MyNumber)
        {
            try
            {
                Jv vJv = new Jv();
                vJv.Branch = short.Parse(Session["Branch"].ToString());
                vJv.LocType = 2;
                vJv.FType = 501;
                vJv.Number = MyNumber;
                vJv.LocNumber = short.Parse(AreaNo);
                vJv = (from itm in vJv.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString)
                       where itm.CrCode == "120409001"
                       select itm).FirstOrDefault();

                String UserName = "";
                List<vSTP> VouData = new List<vSTP>();
                STP myJv = new STP();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.Ftype = 502;
                myJv.VouLoc = short.Parse(AreaNo);
                myJv.VouNo = MyNumber;
                myJv = myJv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString).FirstOrDefault();
                if (myJv == null)
                {
                    return;
                }
                else
                {
                    TblUsers ax = new TblUsers();
                    if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    ax.UserName = myJv.UserName;
                    ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                          where uitm.UserName == ax.UserName
                          select uitm).FirstOrDefault();
                    if (ax != null)
                    {
                        UserName = ax.FName;
                    }
                    VouData = myJv.Find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                }

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage205 page = new pdfPage205();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                Shop myShop = new Shop();
                myShop.FType = 2;
                myShop.Bran = 1;
                myShop.Number = short.Parse(AreaNo);
                if (myShop.GetShop(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                {
                    page.vStr4 = myShop.Name1;
                }

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------                    
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------                    
                var cols = new[] { 200, 200, 100, 250 };
                document.Open();
                PdfPTable table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;

                PdfPCell cell22 = new PdfPCell();
                //cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                cell2.Border = 0;
                cell2.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont16);
                table.AddCell(cell2);

                cell2.Phrase = new iTextSharp.text.Phrase(" Return Purchase Request ", nationalTextFont16);
                table.AddCell(cell2);

                cell22.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/" + int.Parse(AreaNo).ToString(), nationalTextFont16);
                table.AddCell(cell22);

                var TextCell = new PdfPCell(table.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = int.Parse(AreaNo).ToString() + "/" + MyNumber.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table.AddCell(TextCell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                cols = new[] { 150, 250, 150, 250 };
                table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.FixedHeight = 20f;

                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("Invoice No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Date", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouDate, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Voucher No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.RefNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Remark", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Remark, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Account", nationalTextFont2);
                table.AddCell(cell);

                Acc myAcc = new Acc();
                myAcc.Branch = short.Parse(Session["Branch"].ToString());
                myAcc.Code = myJv.CrCode.ToString();
                myAcc.GetAcc(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myAcc.Name1, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Invoice Type", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.InvType == 0 ? "Cash Invoice" : "Credit Invoice", nationalTextFont2);
                table.AddCell(cell);

                document.Add(table);
                //-------------------------------------------------------------------------------------------
                // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                int ColCount = 7;
                cols = new[] { 50, 100, 250, 100, 100, 100, 100 };
                table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.FixedHeight = 20f;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("SL", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part No", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part Name", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Unit", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Qty", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Price", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Amount", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                double Quan = 0;
                double Amount = 0;
                if (VouData != null && VouData.Count() > 0)
                {
                    foreach (vSTP inv in VouData)
                    {

                        cell.Phrase = new iTextSharp.text.Phrase(inv.FNo.ToString(), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITCode, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.UnitName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Quan), nationalTextFont2);
                        table.AddCell(cell);
                        Quan += (double)inv.Quan;

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Price), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Amount), nationalTextFont2);
                        table.AddCell(cell);
                        Amount += (double)inv.Amount;
                    }
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("Amount", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Quan), nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Amount), nationalTextFont2);
                    table.AddCell(cell);

                    //------------------------------------------------------------------------------
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(moh.doTax(myJv.VouDate, 2), nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", (vJv != null ? vJv.Amount : 0)), nationalTextFont2);
                    table.AddCell(cell);
                    //-------------------------------------------------------------------------------------
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Amount + (vJv != null ? vJv.Amount : 0)), nationalTextFont2);
                    table.AddCell(cell);
                }
                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                table = new PdfPTable(7);
                table.TotalWidth = document.PageSize.Width; //100f;
                cols = new[] { 50, 200, 50, 200, 50, 200, 50 };
                table.SetWidths(cols);
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell = new PdfPCell();
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Data Entry By", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Receiver", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Accountant", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(page.UserName, nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);
                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage205 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";

                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\DTNASKH1.TTF";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 300 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 200, 200, 200, 200 };
                footerTbl.SetWidths(cols2);
                //footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                cell.PaddingRight = 5;
                cell.Phrase = new iTextSharp.text.Phrase("Printed Date " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Printed By " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("No of Print " + PageNo, footer);
                footerTbl.AddCell(cell);

                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Page No " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page
                cell.PaddingLeft = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 206 Print of Issue Note
        public void PrintIssueNote(int MyNumber)
        {
            try
            {
                String UserName = "";
                List<vSTS> VouData = new List<vSTS>();
                STS myJv = new STS();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.Ftype = 701;
                myJv.VouLoc = short.Parse(AreaNo);
                myJv.VouNo = MyNumber;
                myJv = myJv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString).FirstOrDefault();
                if (myJv == null)
                {
                    return;
                }
                else
                {
                    TblUsers ax = new TblUsers();
                    if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    ax.UserName = myJv.UserName;
                    ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                          where uitm.UserName == ax.UserName
                          select uitm).FirstOrDefault();
                    if (ax != null)
                    {
                        UserName = ax.FName;
                    }
                    VouData = myJv.Find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                }

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage206 page = new pdfPage206();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                Shop myShop = new Shop();
                myShop.FType = 2;
                myShop.Bran = 1;
                myShop.Number = short.Parse(AreaNo);
                if (myShop.GetShop(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                {
                    page.vStr4 = myShop.Name1;
                }

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------                    
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------                    
                var cols = new[] { 200, 200, 100, 250 };
                document.Open();
                PdfPTable table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;

                PdfPCell cell22 = new PdfPCell();
                //cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                cell2.Border = 0;
                cell2.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont16);
                table.AddCell(cell2);

                cell2.Phrase = new iTextSharp.text.Phrase(" Issue Note ", nationalTextFont16);
                table.AddCell(cell2);

                cell22.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/" + int.Parse(AreaNo).ToString(), nationalTextFont16);
                table.AddCell(cell22);

                var TextCell = new PdfPCell(table.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = int.Parse(AreaNo).ToString() + "/" + MyNumber.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table.AddCell(TextCell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                cols = new[] { 150, 250, 150, 250 };
                table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.FixedHeight = 20f;

                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("Note No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Note Date", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouDate, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("J.Order No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.RefNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                Cars myCar = new Cars();
                myCar.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["Cars" + Session["CNN2"].ToString()] == null) Cache.Insert("Cars" + Session["CNN2"].ToString(), myCar.GetAll21(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myCar.CarsType = int.Parse(myJv.ExpRef.Substring(0, 2));
                myCar.Code = myJv.ExpRef;
                myCar = (from sitm in (List<Cars>)(Cache["Cars" + Session["CNN2"].ToString()])
                         where sitm.Code == myCar.Code
                         select sitm).FirstOrDefault();

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Car No", nationalTextFont2);
                table.AddCell(cell);


                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myCar == null ? myJv.ExpRef : myCar.Name2, nationalTextFont2);
                table.AddCell(cell);

                //
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Remark", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Remark, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont2);
                table.AddCell(cell);

                document.Add(table);
                //-------------------------------------------------------------------------------------------
                // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                int ColCount = 7;
                cols = new[] { 50, 100, 300, 80, 80, 100, 100 };
                table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.FixedHeight = 20f;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("SL", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part No", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part Name", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Unit", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Qty", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Price", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Amount", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                double Quan = 0, Amount = 0;
                if (VouData != null && VouData.Count() > 0)
                {
                    foreach (vSTS inv in VouData)
                    {

                        cell.Phrase = new iTextSharp.text.Phrase(inv.FNo.ToString(), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITCode, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.UnitName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Quan), nationalTextFont2);
                        table.AddCell(cell);
                        Quan += (double)inv.Quan;

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Price), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Amount), nationalTextFont2);
                        table.AddCell(cell);
                        Amount += (double)inv.Amount;


                    }
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Quan), nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Amount), nationalTextFont2);
                    table.AddCell(cell);

                }
                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                table = new PdfPTable(7);
                table.TotalWidth = document.PageSize.Width; //100f;
                cols = new[] { 50, 200, 50, 200, 50, 200, 50 };
                table.SetWidths(cols);
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell = new PdfPCell();
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Store Employee", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Receiver", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Accountant", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(page.UserName, nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);
                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage206 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";

                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\DTNASKH1.TTF";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 300 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 200, 200, 200, 200 };
                footerTbl.SetWidths(cols2);
                //footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                cell.PaddingRight = 5;
                cell.Phrase = new iTextSharp.text.Phrase("Printed Date " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Printed By " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("No of Print " + PageNo, footer);
                footerTbl.AddCell(cell);

                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Page No " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page
                cell.PaddingLeft = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 207 Print of Used Import Note
        public void PrintUImportNote(int MyNumber)
        {
            try
            {
                String UserName = "";
                List<vSTP> VouData = new List<vSTP>();
                STP myJv = new STP();
                myJv.Branch = short.Parse(Session["Branch"].ToString());
                myJv.Ftype = 503;
                myJv.VouLoc = short.Parse(AreaNo);
                myJv.VouNo = MyNumber;
                myJv = myJv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString).FirstOrDefault();
                if (myJv == null)
                {
                    return;
                }
                else
                {
                    TblUsers ax = new TblUsers();
                    if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    ax.UserName = myJv.UserName;
                    ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                          where uitm.UserName == ax.UserName
                          select uitm).FirstOrDefault();
                    if (ax != null)
                    {
                        UserName = ax.FName;
                    }
                    VouData = myJv.Find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                }

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage207 page = new pdfPage207();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                Shop myShop = new Shop();
                myShop.FType = 2;
                myShop.Bran = 1;
                myShop.Number = short.Parse(AreaNo);
                if (myShop.GetShop(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                {
                    page.vStr4 = myShop.Name1;
                }

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------                    
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------                                    
                document.Open();
                var cols = new[] { 200, 200, 100, 250 };
                PdfPTable table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;

                PdfPCell cell22 = new PdfPCell();
                //cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                cell2.Border = 0;
                cell2.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont16);
                table.AddCell(cell2);

                cell2.Phrase = new iTextSharp.text.Phrase(" Used Import Note ", nationalTextFont16);
                table.AddCell(cell2);

                cell22.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString() + "/" + int.Parse(AreaNo).ToString(), nationalTextFont16);
                table.AddCell(cell22);

                var TextCell = new PdfPCell(table.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = int.Parse(AreaNo).ToString() + "/" + MyNumber.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table.AddCell(TextCell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                cols = new[] { 150, 250, 150, 250 };
                table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.FixedHeight = 20f;

                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("Note No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Note Date", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.VouDate, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("J.Order No", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.RefNo.ToString(), nationalTextFont2);
                table.AddCell(cell);

                Cars myCar = new Cars();
                myCar.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["Cars" + Session["CNN2"].ToString()] == null) Cache.Insert("Cars" + Session["CNN2"].ToString(), myCar.GetAll21(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myCar.CarsType = int.Parse(myJv.ExpRef.Substring(0, 2));
                myCar.Code = myJv.ExpRef;
                myCar = (from sitm in (List<Cars>)(Cache["Cars" + Session["CNN2"].ToString()])
                         where sitm.Code == myCar.Code
                         select sitm).FirstOrDefault();

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Car No", nationalTextFont2);
                table.AddCell(cell);


                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myCar == null ? myJv.ExpRef : myCar.Name2, nationalTextFont2);
                table.AddCell(cell);

                //
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Remark", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Remark, nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont2);
                table.AddCell(cell);

                document.Add(table);
                //-------------------------------------------------------------------------------------------
                // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                int ColCount = 7;
                cols = new[] { 50, 100, 300, 80, 80, 100, 100 };
                table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.FixedHeight = 20f;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("SL", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part No", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Part Name", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Unit", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Qty", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Price", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("Amount", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                double Quan = 0, Amount = 0;
                if (VouData != null && VouData.Count() > 0)
                {
                    foreach (vSTP inv in VouData)
                    {

                        cell.Phrase = new iTextSharp.text.Phrase(inv.FNo.ToString(), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITCode, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.ITName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(inv.UnitName2, nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Quan), nationalTextFont2);
                        table.AddCell(cell);
                        Quan += (double)inv.Quan;

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Price), nationalTextFont2);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", inv.Amount), nationalTextFont2);
                        table.AddCell(cell);
                        Amount += (double)inv.Amount;


                    }
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Quan), nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Amount), nationalTextFont2);
                    table.AddCell(cell);

                }
                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                table = new PdfPTable(7);
                table.TotalWidth = document.PageSize.Width; //100f;
                cols = new[] { 50, 200, 50, 200, 50, 200, 50 };
                table.SetWidths(cols);
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell = new PdfPCell();
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Store Employee", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Receiver", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Accountant", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(page.UserName, nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);
                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage207 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";

                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\DTNASKH1.TTF";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 300 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + vStr4, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 200, 200, 200, 200 };
                footerTbl.SetWidths(cols2);
                //footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                cell.PaddingRight = 5;
                cell.Phrase = new iTextSharp.text.Phrase("Printed Date " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Printed By " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("No of Print " + PageNo, footer);
                footerTbl.AddCell(cell);

                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Page No " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page
                cell.PaddingLeft = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 222 Print Claim
        public void PrintClaim(int MyNumber)
        {
            try
            {
                List<Claim> lJv = new List<Claim>();
                Claim myJv = new Claim();
                myJv.DocNo = MyNumber;
                string UserName = "";
                string vDate = "";
                foreach (Claim itm in myJv.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                {
                    if (itm.FNo == 1)
                    {
                        TblUsers ax = new TblUsers();
                        if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        ax.UserName = itm.UserName;
                        ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                              where uitm.UserName == ax.UserName
                              select uitm).FirstOrDefault();
                        if (ax != null)
                        {
                            UserName = ax.FName;
                        }
                        vDate = itm.DocDate;
                    }

                    if (itm.InvLoc == 0)
                    {
                        Jv mJv = new Jv();
                        mJv.Branch = short.Parse(Session["Branch"].ToString());
                        mJv.FType = 100;
                        mJv.LocNumber = 1;
                        mJv.LocType = 1;
                        mJv.Number = (int)itm.InvNo;
                        mJv = (from sitm in mJv.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString)
                               where sitm.DbCode == itm.CustCode
                               select sitm).FirstOrDefault();
                        if (mJv != null)
                        {
                            lJv.Add(new Claim
                            {
                                DocNo = itm.DocNo,
                                FNo = itm.FNo,
                                State = itm.State,
                                UserName = itm.UserName,
                                UserDate = itm.UserDate,
                                Ref = itm.Ref,
                                Flag = itm.Flag,
                                InvNo2 = itm.InvNo.ToString(),
                                amount = mJv.Amount,
                                FDate = itm.FDate,
                                EDate = itm.EDate,
                                Customer = itm.Customer,
                                InvNo = itm.InvNo,
                                InvLoc = itm.InvLoc,
                                Qty = itm.Qty,
                                DocDate = mJv.FDate,
                                Destination = "تسوية",
                                Source = "تسوية",
                                CustCode = itm.CustCode
                            });
                        }

                    }
                    else
                    {
                        if (itm.Flag == "L")
                        {
                            LShipment inv1 = new LShipment();
                            inv1.Branch = short.Parse(Session["Branch"].ToString());
                            inv1.VouLoc = moh.MakeMask(itm.InvLoc.ToString(), 5);
                            inv1.VouNo = (int)itm.InvNo;
                            inv1 = inv1.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                            if (inv1 != null)
                            {
                                Cities myCity = new Cities();
                                myCity.Branch = short.Parse(Session["Branch"].ToString());
                                myCity.Code = inv1.PlaceofLoading;
                                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                          where sitm.Code == myCity.Code
                                          select sitm).FirstOrDefault();

                                Cities myCity2 = new Cities();
                                myCity2.Branch = short.Parse(Session["Branch"].ToString());
                                myCity2.Code = inv1.Destination;
                                myCity2 = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                          where sitm.Code == myCity2.Code
                                          select sitm).FirstOrDefault();


                                lJv.Add(new Claim
                                {
                                    DocNo = itm.DocNo,
                                    FNo = itm.FNo,
                                    State = itm.State,
                                    UserName = itm.UserName,
                                    UserDate = itm.UserDate,
                                    Customer = itm.Customer,
                                    Ref = itm.Ref,
                                    Flag = itm.Flag,
                                    InvNo2 = (char)0x202A + itm.Flag + (char)0x202A + itm.InvLoc.ToString() + (char)0x202A + "/" + (char)0x202A + itm.InvNo.ToString() + (char)0x202A,
                                    amount = inv1.CustomerAmount,
                                    FDate = itm.FDate,
                                    EDate = itm.EDate,
                                    InvNo = itm.InvNo,
                                    InvLoc = itm.InvLoc,
                                    Qty = inv1.Qty,
                                    DocDate = inv1.GDate,
                                    Destination = myCity2.Name1,
                                    Source = myCity.Name1,
                                    CustCode = itm.CustCode
                                });
                            }
                        }
                        else if (itm.Flag == "E")
                        {
                            Shipment inv2 = new Shipment();
                            inv2.Branch = short.Parse(Session["Branch"].ToString());
                            inv2.VouLoc = moh.MakeMask(itm.InvLoc.ToString(), 5);
                            inv2.VouNo = (int)itm.InvNo;
                            inv2 = inv2.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                            if (inv2 != null)
                            {
                                Cities myCity = new Cities();
                                myCity.Branch = short.Parse(Session["Branch"].ToString());
                                myCity.Code = inv2.PlaceofLoading;
                                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                          where sitm.Code == myCity.Code
                                          select sitm).FirstOrDefault();

                                Cities myCity2 = new Cities();
                                myCity2.Branch = short.Parse(Session["Branch"].ToString());
                                myCity2.Code = inv2.Destination;
                                myCity2 = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                          where sitm.Code == myCity2.Code
                                          select sitm).FirstOrDefault();


                                lJv.Add(new Claim
                                {
                                    DocNo = itm.DocNo,
                                    FNo = itm.FNo,
                                    State = itm.State,
                                    UserName = itm.UserName,
                                    UserDate = itm.UserDate,
                                    Ref = itm.Ref,
                                    Flag = itm.Flag,
                                    InvNo2 = (char)0x202A + itm.Flag + (char)0x202A + itm.InvLoc.ToString() + (char)0x202A + "/" + (char)0x202A + itm.InvNo.ToString() + (char)0x202A,
                                    amount = inv2.CustomerAmount,
                                    FDate = itm.FDate,
                                    EDate = itm.EDate,
                                    Customer = itm.Customer,
                                    InvNo = itm.InvNo,
                                    InvLoc = itm.InvLoc,
                                    Qty = inv2.Qty,
                                    DocDate = inv2.GDate,
                                    Destination = myCity2.Name1,
                                    Source = myCity.Name1,
                                    CustCode = itm.CustCode
                                });
                            }
                        }
                        else
                        {
                            Invoice inv = new Invoice();
                            inv.Branch = 1;
                            inv.VouLoc = moh.MakeMask(itm.InvLoc.ToString(), 5);
                            inv.VouNo = (int)itm.InvNo;
                            inv = inv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                            if (inv != null)
                            {
                                Cities myCity = new Cities();
                                myCity.Branch = 1;
                                myCity.Code = inv.PlaceofLoading;
                                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                          where sitm.Code == myCity.Code
                                          select sitm).FirstOrDefault();

                                Cities myCity2 = new Cities();
                                myCity2.Branch = 1;
                                myCity2.Code = inv.Destination;
                                myCity2 = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                                          where sitm.Code == myCity2.Code
                                          select sitm).FirstOrDefault();

                                lJv.Add(new Claim
                                {
                                    DocNo = itm.DocNo,
                                    FNo = itm.FNo,
                                    State = true,
                                    UserName = itm.UserName,
                                    UserDate = itm.UserDate,
                                    amount = inv.CustomerAmount,
                                    InvNo2 = (char)0x202A + itm.Flag + (char)0x202A + itm.InvLoc.ToString() + (char)0x202A + "/" + (char)0x202A + itm.InvNo.ToString() + (char)0x202A,
                                    FDate = itm.FDate,
                                    EDate = itm.EDate,
                                    Customer = itm.Customer,
                                    Ref = itm.Ref,
                                    Flag = itm.Flag,
                                    tax = inv.Tax,
                                    InvNo = itm.InvNo,
                                    InvLoc = itm.InvLoc,
                                    Qty = inv.Qty,
                                    DocDate = inv.GDate,
                                    Destination = myCity2.Name1,
                                    Source = myCity.Name1,
                                    CustCode = itm.CustCode
                                });
                            }
                        }
                    }
                }

                if (lJv == null || lJv.Count == 0) return;

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 70, 30);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage222 page = new pdfPage222();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.vStr1 = lJv[0].FDate;
                page.vStr2 = lJv[0].EDate;

                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                page.vStr3 = "الإدارة المالية";

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont10 = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16U = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.UNDERLINE);
                iTextSharp.text.Font nationalTextFont14B = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.BLUE);

                document.Open();

                document.Add(new iTextSharp.text.pdf.draw.LineSeparator(1F, 100F, iTextSharp.text.BaseColor.RED, iTextSharp.text.Element.ALIGN_CENTER, 1));
                int ColCount = 5;
                var cols = new[] { 200,110,170,110,200 };
                PdfPTable table10 = new PdfPTable(ColCount);
                table10.TotalWidth = document.PageSize.Width; //100f;
                table10.SetWidths(cols);

                PdfPCell cell00 = new PdfPCell();
                cell00.FixedHeight = 20f;
                cell00.Border = 0;
                cell00.ArabicOptions = ColumnText.DIGITS_EN2AN;


                PdfPCell cell = new PdfPCell();
                cell.FixedHeight = 20f;
                cell.Border = 0;
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                
                table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell.Phrase = new iTextSharp.text.Phrase("التاريخ: " + HDate.DatetoHjiri(vDate) + " هـ" + "\n" + "الموافق: " + vDate + " م", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                cell00.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell00.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell00.Border = 1;
                cell00.Phrase = new iTextSharp.text.Phrase("فاتورة مالية مجمعة", nationalTextFont14);
                table10.AddCell(cell00);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Border = 0;

                var TextCell = new PdfPCell(table10.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //TextCell.Border = 0;
                TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = lJv[0].DocNo.ToString();               
                bc128.GenerateChecksum = true;
                bc128.AltText = lJv[0].DocNo.ToString();               
                bc128.StartStopText = true;
                
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(120);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);
                table10.AddCell(TextCell);
                document.Add(table10);


                ColCount = 1;
                cols = new[] { 800 };
                table10 = new PdfPTable(ColCount);
                table10.TotalWidth = document.PageSize.Width; //100f;
                table10.SetWidths(cols);
                table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //Acc myAcc = new Acc();
                //myAcc.Branch = 1;
                //myAcc.Code = lJv[0].CustCode;
                //myAcc.GetAcc(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont16);
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table10.AddCell(cell);
                string vsstr = "";
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                if (lJv[0].CustCode == "120301063" || lJv[0].CustCode == "120301064" || lJv[0].CustCode == "120301065"
                    || lJv[0].CustCode == "120301027" || lJv[0].CustCode == "120301058")

                {
                    vsstr = "السادة / " + "شركة الحلول العربية للخدمات اللوجستية" + "          المحترمين";
                    cell.Phrase = new iTextSharp.text.Phrase(vsstr, nationalTextFont16);
                    table10.AddCell(cell);

                    vsstr = (lJv[0].CustCode == "120301063" ? "عن نقل سيارات الجميح                             الرقم الضريبي ":
                             lJv[0].CustCode == "120301064" ? "عن نقل سيارات نيسان                              الرقم الضريبي ":
                             lJv[0].CustCode == "120301065" ? "عن نقل سيارات بيجو                               الرقم الضريبي ":
                             lJv[0].CustCode == "120301027" ? "عن نقل سيارات هونداي                             الرقم الضريبي ": 
                                                              "عن نقل سيارات شنجان                              الرقم الضريبي "); //lJv[0].CustCode == "120301058" );


                    cell.Phrase = new iTextSharp.text.Phrase(vsstr + "310475081700003", nationalTextFont14);
                    table10.AddCell(cell);
                }
                else
                {
                    vsstr = "السادة / " + lJv[0].Customer + "          المحترمين";
                    cell.Phrase = new iTextSharp.text.Phrase(vsstr, nationalTextFont16);
                    table10.AddCell(cell);
                }
                if (lJv[0].CustCode == "120301069")
                {
                    cell.Phrase = new iTextSharp.text.Phrase("         الرقم الضريبي " + "300692378510003", nationalTextFont14);
                    table10.AddCell(cell);

                }
                else
                {
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                    table10.AddCell(cell);
                }

                cell.Phrase = new iTextSharp.text.Phrase("السلام عليكم ورحمة الله وبركاتة", nationalTextFont14);
                table10.AddCell(cell);


                PdfPCell cell0 = new PdfPCell();
                cell0.Border = 0;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                double x = (double)lJv.Sum(p => p.amount);
                if (string.IsNullOrEmpty(lJv[0].FDate))
                {
                    cell0.Phrase = new iTextSharp.text.Phrase("مرفق لكم كشف فواتير الشحن في الفاتورة الضريبية المرفقة والتي تمت خلال الفترة  بمبلغ " , nationalTextFont14);
                    table10.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", x) + " ريال " + moh.NTOC(x, 1), nationalTextFont14);
                    table10.AddCell(cell0);
                }
                else
                {
                    cell.Phrase = new iTextSharp.text.Phrase("مرفق لكم كشف فواتير الشحن في الفاتورة الضريبية المرفقة والتي تمت خلال الفترة من تاريخ ", nationalTextFont14);
                    table10.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(lJv[0].FDate + "  إلى تاريخ  " + lJv[0].EDate + " بمبلغ " + string.Format("{0:N2}", x) + " ريال ", nationalTextFont14);
                    table10.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("مبلغ وقدره " +moh.NTOC(x, 1), nationalTextFont14);
                    table10.AddCell(cell);

                }

                if (false) //lJv[0].DocNo == 702 || lJv[0].DocNo == 812)
                {
                    cell.Phrase = new iTextSharp.text.Phrase("نأمل اسـتلام الفاتورة للمراجعـة وتحويل المبلـغ على  حساب المدير التنفيذي لقطـاع النقـل ", nationalTextFont14);
                    table10.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("السـيد/ عبدالله مثقـب حسـين خبراني والذي يحمل حساب على بنك الراجحي رقم", nationalTextFont14);
                    table10.AddCell(cell);

                    //cell.Phrase = new iTextSharp.text.Phrase("SA49 8000 0454 6080 1032 3344", nationalTextFont14);
                    //table10.AddCell(cell);

                    cell0 = new PdfPCell();

                    cell0.Border = 0;
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;

                    cell0.Phrase = new iTextSharp.text.Phrase("SA49 8000 0454 6080 1032 3344", nationalTextFont);
                    table10.AddCell(cell0);

                    
                }
                else if (false && (lJv[0].CustCode == "120301063" || lJv[0].CustCode == "120301064" || lJv[0].CustCode == "120301065" || lJv[0].CustCode == "120301027" || lJv[0].CustCode == "120301058"))
                {
                    cell.Phrase = new iTextSharp.text.Phrase("نأمـل اســـتلام الفاتـورة للمراجعـة وتحويـل المبلـغ علـى  حســاب المـدير التنفـيذي ", nationalTextFont14);
                    table10.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("السـيد/ إبراهيم عبد العزيز الشـهيل والذي يحمـل حسـاب على بنـك الراجحـي رقـم", nationalTextFont14);
                    table10.AddCell(cell);

                    //cell.Phrase = new iTextSharp.text.Phrase("SA49 8000 0454 6080 1032 3344", nationalTextFont14);
                    //table10.AddCell(cell);

                    cell0 = new PdfPCell();

                    cell0.Border = 0;
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT; // .ALIGN_LEFT;
                    cell0.PaddingLeft = 50;
                    cell0.PaddingRight = 50;
                    cell0.Phrase = new iTextSharp.text.Phrase("SA89 8000 0501 6080 1004 4018", nationalTextFont16);
                    table10.AddCell(cell0);
                    document.Add(table10);



                    cell.Border = 0;
                    ColCount = 1;
                    cols = new[] { 800 };
                    table10 = new PdfPTable(ColCount);
                    table10.TotalWidth = document.PageSize.Width; //100f;
                    table10.SetWidths(cols);
                    table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                    table10.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("ملاحظة: في حالة التحويل البنكي نرجو إرسال صورة قسيمة الايداع على الايميل", nationalTextFont14B);
                    table10.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("naqelat@naqelat.com او على الفاكس رقم 4825357-011", nationalTextFont14B);
                    table10.AddCell(cell);
                }
                else
                {
                    cell.Phrase = new iTextSharp.text.Phrase("نأمل استلام الفاتورة للمراجعة وتسديد المبلغ نقداٌ أو إصدار شيك باسم شركة الناقلات البرية العربية", nationalTextFont14);
                    table10.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("للنقل والتخزين أو التحويل على احد حساباتنا التالية ", nationalTextFont14);
                    table10.AddCell(cell);

                    document.Add(table10);

                    ColCount = 4;
                    cols = new[] { 100, 300, 200, 200 };

                    table10 = new PdfPTable(ColCount);
                    table10.TotalWidth = document.PageSize.Width; //100f;
                    table10.SetWidths(cols);
                    table10.RunDirection = PdfWriter.RUN_DIRECTION_LTR;
                    table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell.Border = 1;
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                    if (false && lJv[0].CustCode != "120301069")
                    {

                        cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                        table10.AddCell(cell);


                        cell0 = new PdfPCell();

                        cell0.Border = 1;
                        cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;


                        cell0.Phrase = new iTextSharp.text.Phrase("SA56 5500 0000 0913 3410 0117", nationalTextFont);
                        table10.AddCell(cell0);

                        cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell0.Phrase = new iTextSharp.text.Phrase("91334100117", nationalTextFont);
                        table10.AddCell(cell0);
                            cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                            cell.Phrase = new iTextSharp.text.Phrase("البنك السعودي الفرنسي", nationalTextFont);
                            table10.AddCell(cell);
                    }

                    /*
                    cell0.Phrase = new iTextSharp.text.Phrase("SA54 5000 0000 0100 3110 6004", nationalTextFont);
                    table10.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("010031106004", nationalTextFont);
                    table10.AddCell(cell0);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell.Phrase = new iTextSharp.text.Phrase("البنك السعودي الهولندي", nationalTextFont);
                    table10.AddCell(cell);
                    //------------------------------
                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell);

                    cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell0.Phrase = new iTextSharp.text.Phrase("SA47 4500 0000 0182 4792 4001", nationalTextFont);
                    table10.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("018247924001", nationalTextFont);
                    table10.AddCell(cell0);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell.Phrase = new iTextSharp.text.Phrase("البنك السعودي البريطاني", nationalTextFont);
                    table10.AddCell(cell);
                    //------------------------------
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;                
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell);

                    cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;                
                    cell0.Phrase = new iTextSharp.text.Phrase("SA20 2000 0002 1300 1743 9940", nationalTextFont);
                    table10.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("2130017439940", nationalTextFont);
                    table10.AddCell(cell0);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell.Phrase = new iTextSharp.text.Phrase("بنك الرياض", nationalTextFont);
                    table10.AddCell(cell);
                    //------------------------------                
                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell);

                    cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell0.Phrase = new iTextSharp.text.Phrase("SA50 8000 0454 6080 1016 5992", nationalTextFont);
                    table10.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("454608010165992", nationalTextFont);
                    table10.AddCell(cell0);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell.Phrase = new iTextSharp.text.Phrase("مصرف الراجحي", nationalTextFont);
                    table10.AddCell(cell);

                    //------------------------------
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell);

                    cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell0.Phrase = new iTextSharp.text.Phrase("SA74 4000 0000 0029 0700 7300", nationalTextFont);
                    table10.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("2907007300", nationalTextFont);
                    table10.AddCell(cell0);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell.Phrase = new iTextSharp.text.Phrase("البنك السعودي الامريكي", nationalTextFont);
                    table10.AddCell(cell);
                    //------------------------------
                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell);

                    cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell0.Phrase = new iTextSharp.text.Phrase("SA56 5500 0000 0913 3410 0117", nationalTextFont);
                    table10.AddCell(cell0);

                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase("91334100117", nationalTextFont);
                    table10.AddCell(cell0);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell.Phrase = new iTextSharp.text.Phrase("البنك السعودي الفرنسي", nationalTextFont);
                    table10.AddCell(cell);

                    //------------------------------
                    //cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                    //cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    //table10.AddCell(cell);

                    //cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                    //cell0.Phrase = new iTextSharp.text.Phrase("SA05 1000 0026 9100 0100 0107", nationalTextFont);
                    //table10.AddCell(cell0);

                    //cell0.Phrase = new iTextSharp.text.Phrase("26910001000107", nationalTextFont);
                    //table10.AddCell(cell0);

                    //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    //cell.Phrase = new iTextSharp.text.Phrase("البنك الاهلي", nationalTextFont);
                    //table10.AddCell(cell);
                     */
                    //------------------------------
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Border = 1;
                    //cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    // cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell0 = new PdfPCell();
                    cell0.Border = 1;

                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);
                    cell0.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase("IBAN", nationalTextFont);
                    table10.AddCell(cell0);

                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell0.Phrase = new iTextSharp.text.Phrase("رقم الحساب", nationalTextFont);
                    table10.AddCell(cell0);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell.Phrase = new iTextSharp.text.Phrase("أسم البنك", nationalTextFont);
                    table10.AddCell(cell);

                    //---------------------------------------------------

                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell0);


                    cell0.Phrase = new iTextSharp.text.Phrase("SA68 6000 0000 3205 9369 5001", nationalTextFont);
                    table10.AddCell(cell0);

                    //cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase("0320593695001", nationalTextFont);
                    table10.AddCell(cell0);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell.Phrase = new iTextSharp.text.Phrase("بنك الجزيرة", nationalTextFont);
                    table10.AddCell(cell);
                    //------------------------------
                    cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242); 
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell);

                    cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);
                    cell0.Phrase = new iTextSharp.text.Phrase("SA56 5500 0000 0913 3410 0117", nationalTextFont);
                    table10.AddCell(cell0);

                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase("91334100117", nationalTextFont);
                    table10.AddCell(cell0);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell.Phrase = new iTextSharp.text.Phrase("البنك السعودي الفرنسي", nationalTextFont);
                    table10.AddCell(cell);
                    //---------------------------------------------------------------------------
                    cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell);

                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont);
                    table10.AddCell(cell);
                    //---------------------------------------------------------------------------
                    document.Add(table10);


                    cell.Border = 0;
                    ColCount = 1;
                    cols = new[] { 800 };
                    table10 = new PdfPTable(ColCount);
                    table10.TotalWidth = document.PageSize.Width; //100f;
                    table10.SetWidths(cols);
                    table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                    table10.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("ملاحظة: في حالة التحويل البنكي نرجو إرسال صورة قسيمة الايداع على الايميل", nationalTextFont14B);
                    table10.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase("naqelat@naqelat.com او على الفاكس رقم 4825357-011", nationalTextFont14B);
                    table10.AddCell(cell);
                }

                cell.Phrase = new iTextSharp.text.Phrase("شاكرين ومقدرين حسن تعاونكم معنا", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                table10.AddCell(cell);

                document.Add(table10);

                ColCount = 7;
                cols = new[] { 25,200,50,200,50,200,25 };
                table10 = new PdfPTable(ColCount);
                table10.TotalWidth = document.PageSize.Width; //100f;
                table10.SetWidths(cols);
                table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("مراقب الفرع", nationalTextFont14);
                table10.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("مدير قطاع النقل", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);
                
                cell.Phrase = new iTextSharp.text.Phrase("رئيس الحسابات", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                //---------------------------------------------------------------------------                
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                //cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                //table10.AddCell(cell);
                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/Sameh.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table10.AddCell(cell20);



                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                //----------------------------------------------------------------------------
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                table10.AddCell(cell);


                cell.Border = 2;
                cell.Phrase = new iTextSharp.text.Phrase(UserName, nationalTextFont14);
                table10.AddCell(cell);


                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Border = 2;
                cell.Phrase = new iTextSharp.text.Phrase("عيـــد رشـــدي", nationalTextFont14);
                table10.AddCell(cell);

                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Border = 2;
                cell.Phrase = new iTextSharp.text.Phrase("سامح رشاد محمد", nationalTextFont14);
                table10.AddCell(cell);

                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                //----------------------------------------------------------------------------
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                table10.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);


                iTextSharp.text.Image logo2 = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/Stamp.png"));
                logo2.ScalePercent(100);
                PdfPCell cell200 = new PdfPCell(logo2);
                //cell20.PaddingTop = 0;
                //cell20.PaddingRight = 30;
                cell200.Border = 0;
                cell200.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                table10.AddCell(cell200);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);
                //----------------------------------------------------------------------------
                document.Add(table10);
                document.NewPage();
                            
                ColCount = 5;
                cols = new[] { 100,125, 350, 125, 100 };
                cell.FixedHeight = 20f;


                PdfPTable table11 = new PdfPTable(ColCount);
                table11.TotalWidth = document.PageSize.Width; //100f;
                table11.SetWidths(cols);
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.Border = 0;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table11.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table11.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("رقم الفاتورة", nationalTextFont);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[0].DocNo.ToString(), nationalTextFont);
                table11.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Phrase = new iTextSharp.text.Phrase("كشف بالفواتير المجمعة", nationalTextFont16U);
                cell.Phrase = new iTextSharp.text.Phrase("فاتورة ضريبية", nationalTextFont16U);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("تاريخ الفاتورة", nationalTextFont);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[0].EDate, nationalTextFont);
                table11.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont16);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);


                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("تاريخ التوريد", nationalTextFont);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(lJv[0].FDate, nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);
                table11.AddCell(cell);
                table11.AddCell(cell);
                table11.AddCell(cell);
                table11.AddCell(cell);

                document.Add(table11);
                //----------------------------------------------------------------------
                ColCount = 4;
                cols = new[] { 180,220,180,220};
                cell.FixedHeight = 20f;

                table11 = new PdfPTable(ColCount);
                table11.TotalWidth = document.PageSize.Width; //100f;
                table11.SetWidths(cols);

                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.Border = 0;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table11.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table11.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("العميل", nationalTextFont);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase("المورد", nationalTextFont);
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                //-----------------------
                Clients myCust = new Clients();
                myCust.Account = lJv[0].CustCode;
                myCust = myCust.Find2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);


                CostCenter myCost = new CostCenter();
                myCost.Branch = 1;
                myCost.Code = "00014";
                myCost = myCost.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الاسم", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCust != null ? myCust.Name1:" "), nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الاسم", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية للنقل والتخزين", nationalTextFont10);
                table11.AddCell(cell);
                //----------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("رقم المبنى", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCust != null ? myCust.Addr1:" "), nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("رقم المبنى", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCost != null ? myCost.Addr1 : " "), nationalTextFont10);
                table11.AddCell(cell);
                //----------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("اسم الشارع", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCust != null ? myCust.Addr2 : " "), nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("اسم الشارع", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCost != null ? myCost.Addr2 : " "), nationalTextFont10);
                table11.AddCell(cell);
                //----------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الحي", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCust != null ? myCust.Addr3 : " "), nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الحي", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCost != null ? myCost.Addr3 : " "), nationalTextFont10);
                table11.AddCell(cell);
                //----------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("المدينة", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCust != null ? myCust.Addr4 : " "), nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("المدينة", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCost != null ? myCost.Addr4 : " "), nationalTextFont10);
                table11.AddCell(cell);
                //----------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("البلد", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCust != null ? myCust.Addr5 : " "), nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("البلد", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCost != null ? myCost.Addr5 : " "), nationalTextFont10);
                table11.AddCell(cell);
                //----------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الرمز البريدي", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCust != null ? myCust.Addr6 : " "), nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الرمز البريدي", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCost != null ? myCost.Addr6 : " "), nationalTextFont10);
                table11.AddCell(cell);
                //----------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الرقم الأضافي للعنوان", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCust != null ? myCust.Addr7 : " "), nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الرقم الأضافي للعنوان", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCost != null ? myCost.Addr7 : " "), nationalTextFont10);
                table11.AddCell(cell);
                //----------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("رقم تسجيل ضريبة القيمة المضافة", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCust != null ? myCust.IdNo : " "), nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("رقم تسجيل ضريبة القيمة المضافة", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase("310330321200003", nationalTextFont10);
                table11.AddCell(cell);
                //----------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("معرف آخر", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCust != null ? myCust.Addr8 : " "), nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("معرف آخر", nationalTextFont10);
                table11.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase((myCost != null ? myCost.Addr8 : " "), nationalTextFont10);
                table11.AddCell(cell);
                //----------------------------
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont10);
                table11.AddCell(cell);
                table11.AddCell(cell);
                table11.AddCell(cell);
                table11.AddCell(cell);
                //--------------------------------
                document.Add(table11);
                //----------------------------------------------------------------------
                /*
                ColCount = 1;
                cols = new[] { 800 };
                table11 = new PdfPTable(ColCount);
                table11.TotalWidth = document.PageSize.Width; //100f;
                table11.SetWidths(cols);
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table11.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table11.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table11.AddCell(cell);

                cell.FixedHeight = 20f;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                if (lJv[0].CustCode == "120301007")
                {
                    vsstr = "السادة / " + lJv[0].Customer + "          المحترمين";
                    cell.Phrase = new iTextSharp.text.Phrase(vsstr, nationalTextFont14);
                    table11.AddCell(cell);

                    Clients myClients = new Clients();
                    myClients.Branch = 1;
                    myClients.Code = "00010";
                    myClients = myClients.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (myClients != null)
                    {
                        vsstr = "                الرقم الضريبي " + myClients.IdNo;
                        cell.Phrase = new iTextSharp.text.Phrase(vsstr, nationalTextFont);
                        table11.AddCell(cell);

                        vsstr = "               عنوان المركز الرئيسي " + myClients.Address;
                        cell.Phrase = new iTextSharp.text.Phrase(vsstr, nationalTextFont);
                        table11.AddCell(cell);

                        //vsstr = "               الهاتف  " + myClients.OfficeNo;
                        //cell.Phrase = new iTextSharp.text.Phrase(vsstr, nationalTextFont14);
                        //table11.AddCell(cell);
                    }
                }
                else
                {
                    vsstr = "السادة / " + lJv[0].Customer + "          المحترمين";
                    cell.Phrase = new iTextSharp.text.Phrase(vsstr, nationalTextFont14);
                    table11.AddCell(cell);

                    if (lJv[0].CustCode == "120301069")
                    {
                        cell.Phrase = new iTextSharp.text.Phrase("             الرقم الضريبي " + "300692378510003", nationalTextFont14);
                        table11.AddCell(cell);

                    }
                }

                document.Add(table11);
                 */


                ColCount = 8;
                cols = new[] { 150,100,90,90,90,175,100,50 };
                table11 = new PdfPTable(ColCount);
                table11.TotalWidth = document.PageSize.Width; //100f;
                table11.SetWidths(cols);
                table11.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table11.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell = new PdfPCell();
                cell.FixedHeight = 20f;
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("م", nationalTextFont10);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("اتفاقية الشحن", nationalTextFont10);
                table11.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase("شحن من - إلى", nationalTextFont10);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont10);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الضريبة", nationalTextFont10);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الشحنة", nationalTextFont10);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont10);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("المرجع", nationalTextFont10);
                table11.AddCell(cell);

                double amount0 = 0, Tax = 0, Qty = 0;
                foreach(Claim itm in lJv)
                {
                    cell.BackgroundColor = ( cell.BackgroundColor == iTextSharp.text.BaseColor.WHITE ?  new iTextSharp.text.BaseColor(242, 242, 242) : iTextSharp.text.BaseColor.WHITE) ;  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                    cell.Phrase = new iTextSharp.text.Phrase(itm.FNo.ToString(), nationalTextFont10);
                    table11.AddCell(cell);

                    // Arabic  (char)0x202B;
                    // English  (char)0x202A;
                    cell.Phrase = new iTextSharp.text.Phrase(itm.InvNo2, nationalTextFont10);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(itm.Source + " - " + itm.Destination, nationalTextFont10);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.amount0), nationalTextFont10);
                    table11.AddCell(cell);
                    amount0 += (double)itm.amount0;

                    cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.tax), nationalTextFont10);
                    table11.AddCell(cell);
                    Tax += (double)itm.tax;

                    cell.Phrase = new iTextSharp.text.Phrase(itm.InvNo2.Contains("L") ? "بضاعة" : itm.InvNo2.Contains("E") ? "طرود" :                        
                        itm.Qty.ToString() + (itm.Qty < 3 ? " سيارة" : " سيارات") , nationalTextFont10);
                    table11.AddCell(cell);
                    Qty += (double)itm.Qty;

                    cell.Phrase = new iTextSharp.text.Phrase(itm.DocDate, nationalTextFont);
                    table11.AddCell(cell);

                    cell.Phrase = new iTextSharp.text.Phrase(itm.Ref, nationalTextFont10);
                    table11.AddCell(cell);
                 }
                cell.BackgroundColor = (cell.BackgroundColor == iTextSharp.text.BaseColor.WHITE ? new iTextSharp.text.BaseColor(242, 242, 242) : iTextSharp.text.BaseColor.WHITE);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                table11.AddCell(cell);

                // cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", x), nationalTextFont);
                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", amount0), nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Tax), nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(Qty.ToString(), nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Colspan = 3;
                cell.BackgroundColor = (cell.BackgroundColor == iTextSharp.text.BaseColor.WHITE ? new iTextSharp.text.BaseColor(242, 242, 242) : iTextSharp.text.BaseColor.WHITE);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("إجمالي تكاليف الشحن", nationalTextFont);
                table11.AddCell(cell);

                cell.Colspan = 1;
                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", amount0), nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Colspan = 3;
                cell.BackgroundColor = (cell.BackgroundColor == iTextSharp.text.BaseColor.WHITE ? new iTextSharp.text.BaseColor(242, 242, 242) : iTextSharp.text.BaseColor.WHITE);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase(moh.doTax(lJv[0].EDate, 1), nationalTextFont);
                table11.AddCell(cell);

                cell.Colspan = 1;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Tax), nationalTextFont);
                table11.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Colspan = 3;
                cell.BackgroundColor = (cell.BackgroundColor == iTextSharp.text.BaseColor.WHITE ? new iTextSharp.text.BaseColor(242, 242, 242) : iTextSharp.text.BaseColor.WHITE);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("الإجمالي شامل الضريبة", nationalTextFont);
                table11.AddCell(cell);

                cell.Colspan = 2;
                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", x), nationalTextFont);
                table11.AddCell(cell);


                cell.Colspan = 1;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table11.AddCell(cell);



                cell.Colspan = 8;
                cell.BackgroundColor = (cell.BackgroundColor == iTextSharp.text.BaseColor.WHITE ? new iTextSharp.text.BaseColor(242, 242, 242) : iTextSharp.text.BaseColor.WHITE);  //iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("مبلغ وقدرة " + moh.NTOC(x,1), nationalTextFont);
                table11.AddCell(cell);

                document.Add(table11);

                ColCount = 2;
                cell.Border = 0;
                cell.Colspan = 1;
                cols = new[] { 300,500 };
                table10 = new PdfPTable(ColCount);
                table10.TotalWidth = document.PageSize.Width; //100f;
                table10.SetWidths(cols);
                table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                table10.AddCell(cell);
                //---------------------------------------------------------------------------
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                //----------------------------------------------------------------------------


                cell.Phrase = new iTextSharp.text.Phrase("مراقب الفرع", nationalTextFont14);
                table10.AddCell(cell);

//---------------------------------------------------------------------------
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                table10.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont14);
                table10.AddCell(cell);

                //----------------------------------------------------------------------------
                cell.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont14);
                table10.AddCell(cell);


                cell.Border = 2;
                cell.Phrase = new iTextSharp.text.Phrase(UserName, nationalTextFont14);
                table10.AddCell(cell);




                //-----------------------------------------------------------------------
                MessagingToolkit.QRCode.Codec.QRCodeEncoder encoder = new MessagingToolkit.QRCode.Codec.QRCodeEncoder();
                encoder.QRCodeVersion = 0;
                System.Drawing.Bitmap obj = new System.Drawing.Bitmap(encoder.Encode("شركة الناقلات البرية العربية للنقل والتخزين" + System.Environment.NewLine + "310330321200003" + System.Environment.NewLine + lJv[0].EDate + System.Environment.NewLine + string.Format("{0:N2}", Tax) + System.Environment.NewLine + string.Format("{0:N2}", x), System.Text.Encoding.UTF8));
                MemoryStream ms = new MemoryStream();
                obj.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                byte[] byteImage = ms.ToArray();
                System.Drawing.Image sdi = System.Drawing.Image.FromStream(ms);
                iTextSharp.text.Image logo2000 = iTextSharp.text.Image.GetInstance(sdi, System.Drawing.Imaging.ImageFormat.Png);
                logo2000.ScalePercent(30);

                PdfPCell cell2000 = new PdfPCell(logo2000);
                cell2000.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2000.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell2000.PaddingTop = 0;
                cell2000.PaddingRight = 0;
                cell2000.Colspan = 2;
                cell2000.Border = 0;
                table10.AddCell(cell2000);

                document.Add(table10);
                document.Close();                
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage222 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 225, 250, 225 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;



                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //if(moh.doTax) cell2.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية" + "\n" + "للنقل والتخزين - " + vStr3 + "\n" + "الرقم الضريبي#310330321200003", nationalTextFont16);
                //else cell2.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية" + "\n" + "للنقل والتخزين - " + vStr3, nationalTextFont16);
                cell2.Phrase = new iTextSharp.text.Phrase("شركة الناقلات البرية العربية" + "\n" + "للنقل والتخزين - " + vStr3 + "\n" + "الرقم الضريبي#310330321200003", nationalTextFont16);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);


                cell2.PaddingRight = 0;
                vStr1 = " ";
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);


                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion
        //--------------- الشئون الادارية ------------------------------------------------------------------------------------------------------------------------------------------

        #region 951 Print of Numbers
        public void PrintMyNo(int Loc,int MyNumber)            
        {
            try
            {
                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 200f, iTextSharp.text.Font.NORMAL);

                document.Open();
                int ColCount = 1;
                var cols = new[] { 800 };

                for (int i = 1; i <= (MyNumber + 3); i++)
                {
                    PdfPTable table10 = new PdfPTable(ColCount);
                    table10.TotalWidth = document.PageSize.Width; //100f;
                    table10.SetWidths(cols);
                    PdfPCell cell = new PdfPCell();
                    cell.Border = 0;
                    cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    table10.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    table10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                    //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                    iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                    //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                    logo.ScalePercent(90);
                    //create instance of a table cell to contain the logo
                    PdfPCell cell20 = new PdfPCell(logo);
                    //align the logo to the right of the cell
                    cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    //add a bit of padding to bring it away from the right edge
                    cell20.PaddingTop = 0;
                    // cell20.PaddingRight = 30;
                    //remove the border
                    cell20.Border = 0;
                    //Add the cell to the table
                    table10.AddCell(cell20);

                    cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                    cell.Phrase = new iTextSharp.text.Phrase(i.ToString() + "/" + Loc.ToString(), nationalTextFont);
                    table10.AddCell(cell);

                    var TextCell = new PdfPCell(table10.DefaultCell);
                    TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                    //TextCell.Border = 0;
                    TextCell.PaddingTop = 50;
                    TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                    PdfContentByte cb = writer.DirectContent;
                    var bc128 = new Barcode128();
                    bc128.CodeType = Barcode.CODE128;
                    bc128.Code = Loc.ToString() + "/" + MyNumber.ToString();
                    bc128.GenerateChecksum = true;
                    bc128.AltText = "";
                    bc128.StartStopText = true;

                    TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                    //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                    var bi = bc128.CreateImageWithBarcode(cb, null, null);
                    bi.ScalePercent(300);
                    bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                    TextCell.AddElement(bi);
                    table10.AddCell(TextCell);

                    document.Add(table10);                
                    document.NewPage();
                }
                // document.Add(table10);                
                document.Close();

            }
            catch (Exception ex)
            {
                Session.Add("Error", ex);
                Response.Redirect("GeneralServerError.aspx",false);
            }
        }
        #endregion

        #region 952 Print of Numbers
        public void PrintMyNo2(int Loc, int MyNumber)
        {
            try
            {
                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 70, 20);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage952 page = new pdfPage952();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------                    
                //document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------                    
                var cols = new[] { 200, 300,200};
                document.Open();
                PdfPTable table = new PdfPTable(3);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;

                PdfPCell cell22 = new PdfPCell();
                cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                cell2.Border = 0;
                cell2.Phrase = new iTextSharp.text.Phrase("  ", nationalTextFont2);
                table.AddCell(cell2);

                cell2.Phrase = new iTextSharp.text.Phrase(" سند استلام و تسليم طرود ", nationalTextFont14);
                table.AddCell(cell2);

                var TextCell = new PdfPCell(table.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = Loc.ToString();
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                table.AddCell(TextCell);
                document.Add(table);
                //-------------------------------------------------------------------------------------------
                // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                cols = new[] { 150, 250, 150, 250 };
                table = new PdfPTable(4);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.FixedHeight = 20f;

                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("رقم البيان", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(Loc.ToString(), nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase("03/08/1437 هـ", nationalTextFont2);
                table.AddCell(cell);

                 document.Add(table);
                //-------------------------------------------------------------------------------------------
                 // document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));
                //-------------------------------------------------------------------------------------------
                int ColCount = 3;
                cols = new[] { 400, 250, 150 };
                table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.FixedHeight = 18f;

                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("تسلسل", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("رقم الصندوق", nationalTextFont2);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("ملاحظات", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                bool vWhite = true; ;                
                for (int i = 1 ; i < 31 ; i++)
                {
                    if (vWhite)
                    {
                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                    }
                    else
                    {
                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);        
                    }
                    vWhite = !vWhite;

                    cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    table.AddCell(cell);
                    table.AddCell(cell);
                    table.AddCell(cell);
                }
                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                table = new PdfPTable(5);
                table.TotalWidth = document.PageSize.Width; //100f;
                cols = new[] { 50, 300, 50, 300, 50 };
                table.SetWidths(cols);
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("المرسل", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("المستلم", nationalTextFont2);
                table.AddCell(cell);

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                table.AddCell(cell);
                //-------------------------------------------------------

                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //-------------------------------------------------------
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase("_______________", nationalTextFont);
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);
                document.Close();
            }
            catch (Exception)
            {
            }
        }


        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage952 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";

                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\DTNASKH1.TTF";
                //string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\arial.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 300 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 200, 200, 200, 200 };
                footerTbl.SetWidths(cols2);
                //footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                cell.PaddingRight = 5;
                cell.Phrase = new iTextSharp.text.Phrase("Printed Date " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Printed By " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("No of Print " + PageNo, footer);
                footerTbl.AddCell(cell);

                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("Page No " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page
                cell.PaddingLeft = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }
        #endregion

        #region 953 Print of Payment Request
        public void PrintReqPay(int MyNumber)
        {
            try
            {
                PayReq myJv = new PayReq();
                myJv.VouNo = MyNumber;
                myJv = myJv.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage953 page = new pdfPage953();
                writer.PageEvent = page;
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vComapnyName = mySetting.CompanyName;
                }
                page.vStr1 = MyNumber.ToString();
                page.vStr2 = myJv.GDate;
                page.vStr3 = "الإدارة المالية";
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                document.Open();
                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.UNDERLINE);

                int ColCount = 1;
                var cols = new[] { 800 };
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.FixedHeight = 20f;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("طلب دفع", nationalTextFont16);
                cell.Border = 0;
                table.AddCell(cell);
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                document.Add(table);

                ColCount = 5;
                cols = new[] { 200, 150, 100, 200, 150 };
                table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.FixedHeight = 20f;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell.Phrase = new iTextSharp.text.Phrase("رقم الطلب", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Border = 0;
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString(), nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myJv.HDate + " هـ", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الموافق", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myJv.GDate, nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("نوع المستند", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase((myJv.FType == 0 ? "نقداً" : myJv.FType == 1 ?  "شيك عادي" : myJv.FType == 2 ? "شيك مصدق" : "تحويل بنكي" ), nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2} ريال", myJv.Amount), nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table.AddCell(cell);

                cell.Colspan = 1;
                cell.Phrase = new iTextSharp.text.Phrase("مبلغ وقدرة", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell.Colspan = 4;
                cell.Phrase = new iTextSharp.text.Phrase(moh.NTOC((double)myJv.Amount,1), nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table.AddCell(cell);

                cell.Colspan = 1;
                cell.Phrase = new iTextSharp.text.Phrase("لأمـر", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell.Colspan = 4;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Person, nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table.AddCell(cell);

                cell.Colspan = 1;
                cell.Phrase = new iTextSharp.text.Phrase("مقابل", nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table.AddCell(cell);

                cell.Colspan = 4;
                cell.Phrase = new iTextSharp.text.Phrase(myJv.Remark, nationalTextFont);
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table.AddCell(cell);

                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                PdfPTable table5 = new PdfPTable(5);
                table5.TotalWidth = 100f;

                var cols5 = new[] { 175, 75, 175, 75,175 };
                table5.SetWidths(cols5);
                PdfPCell cell5 = new PdfPCell();
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell5.Border = 0;
                table5.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الجهة الطالبة", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("مدير الإدارة/القسم", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الحسـابات", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الموظف:", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الموظف:", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;               
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الموظف:", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;               
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;               
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);


                cell5.Phrase = new iTextSharp.text.Phrase("رئيس الحسابات", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);


                cell5.Phrase = new iTextSharp.text.Phrase("يعتمد/المدير العام", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("____________________", nationalTextFont);
                table5.AddCell(cell5);
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                cell5.Phrase = new iTextSharp.text.Phrase("____________________", nationalTextFont);
                table5.AddCell(cell5);


                document.Add(table5);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                document.Close();
            }
            catch (Exception)
            {
            }
        }
        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage953 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vComapnyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 200 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.Phrase = new iTextSharp.text.Phrase(vComapnyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase("   ", nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }

        #endregion

        #region 9101 Print of eService
        public void PrinteVou(string DocType,int MyNumber)
        {
            try
            {
                eServices myService = new eServices();
                myService.DocType = short.Parse(DocType);
                myService.DocNo = MyNumber;
                myService = myService.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myService == null) return;

                string vName = "", vJob = "", vSection = "", vNat = "", vManage = "", vCostCenter = "", vEmpImagePath = "" ;
                SEmp myEmp = new SEmp();
                myEmp.EmpCode = (int)myService.EmpCode;
                myEmp = myEmp.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myEmp != null)
                {
                    vName = myEmp.Name;
                    vManage = myEmp.Manag1;

                    if(vManage != "")
                    {
                        TblUsers myuser = new TblUsers();
                        if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), myuser.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        myuser.UserName = vManage;
                        myuser = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                                  where uitm.UserName == myuser.UserName
                                  select uitm).FirstOrDefault();
                        if (myuser != null)
                        {
                            vManage = myuser.FName;
                        }
                    }


                    Acc myAcc = new Acc();
                    myAcc.Branch = 1;
                    myAcc.Code = "12050" + myEmp.EmpCode.ToString();
                    if (myAcc.GetAcc(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                    {
                        CostCenter cs = new CostCenter();
                        cs.Branch = 1;
                        if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), cs.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        cs.Code = myAcc.CostCenter;
                        cs = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                              where citm.Code == cs.Code
                              select citm).FirstOrDefault();
                        if (cs != null)
                        {
                            vCostCenter = cs.Name1;
                        }                        
                    }

                    Codes myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 1;
                    myCode.Code = (int)myEmp.Nat;
                    if (Cache["LastCodes" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCodes" + Session["CNN2"].ToString(), myCode.GetAll2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCode = (from itm in (List<Codes>)(Cache["LastCodes" + Session["CNN2"].ToString()])
                              where itm.Ftype == myCode.Ftype && itm.Code == myCode.Code
                              select itm).FirstOrDefault();
                    if (myCode != null) vNat = myCode.Name1;

                    myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 2;
                    myCode.Code = (int)myEmp.Job;
                    if (Cache["LastCodes" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCodes" + Session["CNN2"].ToString(), myCode.GetAll2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCode = (from itm in (List<Codes>)(Cache["LastCodes" + Session["CNN2"].ToString()])
                              where itm.Ftype == myCode.Ftype && itm.Code == myCode.Code
                              select itm).FirstOrDefault();
                    if (myCode != null) vJob = myCode.Name1;

                    myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 3;
                    myCode.Code = (int)myEmp.Section;
                    if (Cache["LastCodes" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCodes" + Session["CNN2"].ToString(), myCode.GetAll2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCode = (from itm in (List<Codes>)(Cache["LastCodes" + Session["CNN2"].ToString()])
                              where itm.Ftype == myCode.Ftype && itm.Code == myCode.Code
                              select itm).FirstOrDefault();
                    if (myCode != null) vSection = myCode.Name1;
                }


                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage9101 page = new pdfPage9101();
                writer.PageEvent = page;
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vComapnyName = mySetting.CompanyName;
                }
                page.vStr1 = (DocType == "101" ?  "إشعار مباشرة عمل" : "");
                page.vStr3 = "الشئون الإدارية";
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                document.Open();
                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont10 = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.UNDERLINE);
                iTextSharp.text.Font nationalTextFont140 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);

                int ColCount = 7;
                var cols = new[] { 275,20, 105, 20, 270,10, 110 };
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.MinimumHeight = 20f;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Border = 0;

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //

                cell.Phrase = new iTextSharp.text.Phrase("رقـم الإشعــار", nationalTextFont);                
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString(), nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myService.DocDate + " " + myService.DocTime , nationalTextFont);
                table.AddCell(cell);
                //
                cell.Phrase = new iTextSharp.text.Phrase("نـوع المباشـرة", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase((myService.FType == 1 ? "بعد العودة من الإجازة" : 
                                                          myService.FType == 2 ? "قادم بفيزا عمل" :
                                                          myService.FType == 3 ? "قادم نقل كفالة" : "تعيين جديد"), nationalTextFont);

                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الرقم الوظيفي", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(myService.EmpCode.ToString(), nationalTextFont);
                table.AddCell(cell);
                //
                cell.Phrase = new iTextSharp.text.Phrase("اسـم الموظـف", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vName, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الجنسـية", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vNat, nationalTextFont);
                table.AddCell(cell);
                //

                cell.Phrase = new iTextSharp.text.Phrase("مسمى الوظيفة", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vJob, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("القسـم", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vSection + "/" + vCostCenter, nationalTextFont);
                table.AddCell(cell);

                //
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);

                //
                cell.Phrase = new iTextSharp.text.Phrase("مباشرة العمل", nationalTextFont14);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont140);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);

                //
                cell.Colspan = 7;
                cell.Phrase = new iTextSharp.text.Phrase("إنه في يوم " + moh.Days[((int)DateTime.Parse(myService.SDate).DayOfWeek) + 1] + " الموافق " + myService.SDate + " م باشر المذكور أعلاه العمل " , nationalTextFont140);
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                table.AddCell(cell);
                //
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont140);
                table.AddCell(cell);
                //
                cell.Colspan = 1;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("الملاحظات" , nationalTextFont14);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Colspan = 5;
                cell.Phrase = new iTextSharp.text.Phrase(myService.Notes, nationalTextFont140);
                table.AddCell(cell);

                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));







                PdfPTable table5 = new PdfPTable(6);
                table5.TotalWidth = document.PageSize.Width;

                var cols5 = new[] { 25,225, 25, 225, 25, 225 };
                table5.SetWidths(cols5);
                PdfPCell cell5 = new PdfPCell();
                cell5.MinimumHeight = 20f;
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell5.Border = 0;

                table5.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase("توقيع الموظف", nationalTextFont140);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell5.FixedHeight = 25f;                

                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الرئيس المباشر", nationalTextFont140);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                //cell5.Phrase = new iTextSharp.text.Phrase("الشئون الإدارية", nationalTextFont140);
                cell5.Phrase = new iTextSharp.text.Phrase("شئون الموظفين", nationalTextFont140);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell5.Phrase = new iTextSharp.text.Phrase("الاسم: " + vName, nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الاسم: " + vManage, nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الاسم:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                //



                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);                
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
               
                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                //
                
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont140);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("يعتمد", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.Colspan = 2;
                table5.AddCell(cell5);

                //
                cell5.Colspan = 1;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);


                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase("مدير الشئون الإدارية", nationalTextFont140);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                //

                cell5.Colspan = 1;
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell20);
                table5.AddCell(cell5);


                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                //
                cell5.Colspan = 1;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase("عبدالله مثقب خبراني", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                //
                document.Add(table5);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                document.Close();
            }
            catch (Exception)
            {
            }
        }
        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage9101 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vComapnyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 200 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.Phrase = new iTextSharp.text.Phrase(vComapnyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }

        #endregion

        #region 9201 Print of eService
        public void PrinteVou201(string DocType, int MyNumber)
        {
            try
            {
                string vFType = "";
                eServices myService = new eServices();
                myService.DocType = short.Parse(DocType);
                myService.DocNo = MyNumber;
                myService = myService.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myService == null) return;
                else
                {
                    Codes myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 10;
                    myCode.Code = (int)myService.FType;
                    if (Cache["LastCodes" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCodes" + Session["CNN2"].ToString(), myCode.GetAll2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCode = (from itm in (List<Codes>)(Cache["LastCodes" + Session["CNN2"].ToString()])
                              where itm.Ftype == myCode.Ftype && itm.Code == myCode.Code
                              select itm).FirstOrDefault();
                    if (myCode != null) vFType = myCode.Name1;
                }

                string vName = "", vJob = "", vSection = "", vNat = "", vManage = "", vCostCenter = "", vEmpImagePath = "";
                SEmp myEmp = new SEmp();
                myEmp.EmpCode = (int)myService.EmpCode;
                myEmp = myEmp.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myEmp != null)
                {
                    vName = myEmp.Name;
                    vManage = myEmp.Manag1;

                    if (vManage != "")
                    {
                        TblUsers myuser = new TblUsers();
                        if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), myuser.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        myuser.UserName = vManage;
                        myuser = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                                  where uitm.UserName == myuser.UserName
                                  select uitm).FirstOrDefault();
                        if (myuser != null)
                        {
                            vManage = myuser.FName;
                        }
                    }


                    Acc myAcc = new Acc();
                    myAcc.Branch = 1;
                    myAcc.Code = "12050" + myEmp.EmpCode.ToString();
                    if (myAcc.GetAcc(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                    {
                        CostCenter cs = new CostCenter();
                        cs.Branch = 1;
                        if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), cs.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        cs.Code = myAcc.CostCenter;
                        cs = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                              where citm.Code == cs.Code
                              select citm).FirstOrDefault();
                        if (cs != null)
                        {
                            vCostCenter = cs.Name1;
                        }
                    }

                    Codes myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 1;
                    myCode.Code = (int)myEmp.Nat;
                    if (Cache["LastCodes" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCodes" + Session["CNN2"].ToString(), myCode.GetAll2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCode = (from itm in (List<Codes>)(Cache["LastCodes" + Session["CNN2"].ToString()])
                              where itm.Ftype == myCode.Ftype && itm.Code == myCode.Code
                              select itm).FirstOrDefault();
                    if (myCode != null) vNat = myCode.Name1;

                    myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 2;
                    myCode.Code = (int)myEmp.Job;
                    myCode = myCode.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (myCode != null) vJob = myCode.Name1;

                    myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 3;
                    myCode.Code = (int)myEmp.Section;
                    myCode = myCode.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (myCode != null) vSection = myCode.Name1;
                }


                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage9201 page = new pdfPage9201();
                writer.PageEvent = page;
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vComapnyName = mySetting.CompanyName;
                }
                page.vStr1 = "طلب أجازة";
                page.vStr3 = "الشئون الإدارية";
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                document.Open();
                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont10 = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.UNDERLINE);
                iTextSharp.text.Font nationalTextFont140 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);

                int ColCount = 7;
                var cols = new[] { 275, 20, 105, 20, 270, 10, 110 };
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.MinimumHeight = 20f;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Border = 0;

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //

                cell.Phrase = new iTextSharp.text.Phrase("رقـم الطلــــب", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString(), nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myService.DocDate + " " + myService.DocTime, nationalTextFont);
                table.AddCell(cell);
                //
                cell.Phrase = new iTextSharp.text.Phrase("نـوع الأجازة", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(vFType, nationalTextFont);

                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الرقم الوظيفي", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(myService.EmpCode.ToString(), nationalTextFont);
                table.AddCell(cell);
                //
                cell.Phrase = new iTextSharp.text.Phrase("اسـم الموظـف", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vName, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الجنسـية", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vNat, nationalTextFont);
                table.AddCell(cell);
                //

                cell.Phrase = new iTextSharp.text.Phrase("مسمى الوظيفة", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vJob, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("القسـم", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vSection + "/" + vCostCenter, nationalTextFont);
                table.AddCell(cell);

                //
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);

                //
                cell.Phrase = new iTextSharp.text.Phrase("تبدأ من", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myService.SDate, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("تنتهي في", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myService.EDate, nationalTextFont);
                table.AddCell(cell);


                //
                cell.Phrase = new iTextSharp.text.Phrase("عدد الايام", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myService.VacDays.ToString(), nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);

                //
                cell.Colspan = 1;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("الملاحظات", nationalTextFont14);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Colspan = 5;
                cell.Phrase = new iTextSharp.text.Phrase(myService.Notes, nationalTextFont140);
                table.AddCell(cell);

                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));







                PdfPTable table5 = new PdfPTable(6);
                table5.TotalWidth = document.PageSize.Width;

                var cols5 = new[] { 25, 225, 25, 225, 25, 225 };
                table5.SetWidths(cols5);
                PdfPCell cell5 = new PdfPCell();
                cell5.MinimumHeight = 20f;
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell5.Border = 0;

                table5.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase("توقيع الموظف", nationalTextFont140);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell5.FixedHeight = 25f;

                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الرئيس المباشر", nationalTextFont140);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                //cell5.Phrase = new iTextSharp.text.Phrase("الشئون الإدارية", nationalTextFont140);
                cell5.Phrase = new iTextSharp.text.Phrase("شئون الموظفين", nationalTextFont140);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell5.Phrase = new iTextSharp.text.Phrase("الاسم: " + vName, nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الاسم: " + vManage, nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الاسم:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                //



                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                //

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont140);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("يعتمد", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.Colspan = 2;
                table5.AddCell(cell5);

                //
                cell5.Colspan = 1;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);


                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase("مدير الشئون الإدارية", nationalTextFont140);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                //

                cell5.Colspan = 1;
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell20);
                table5.AddCell(cell5);


                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                //
                cell5.Colspan = 1;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase("عبدالله مثقب خبراني", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                //
                document.Add(table5);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                document.Close();
            }
            catch (Exception)
            {
            }
        }
        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage9201 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vComapnyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 200 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.Phrase = new iTextSharp.text.Phrase(vComapnyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }

        #endregion


        #region 9301 Print of eService
        public void PrinteVou301(string DocType, int MyNumber)
        {
            try
            {
                string vFType = "";
                eServices myService = new eServices();
                myService.DocType = short.Parse(DocType);
                myService.DocNo = MyNumber;
                myService = myService.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myService == null) return;
                else
                {
                    /*
                    Codes myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 10;
                    myCode.Code = (int)myService.FType;
                    if (Cache["LastCodes" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCodes" + Session["CNN2"].ToString(), myCode.GetAll2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCode = (from itm in (List<Codes>)(Cache["LastCodes" + Session["CNN2"].ToString()])
                              where itm.Ftype == myCode.Ftype && itm.Code == myCode.Code
                              select itm).FirstOrDefault();
                    if (myCode != null) vFType = myCode.Name1;
                     */
                    if (myService.FType == 0) vFType = "لإنتهاء الخدمة";
                    else if (myService.FType == 1) vFType = "للإجازة العادية";
                    else if (myService.FType == 2) vFType = "للإجازة الاضطرارية";
                    else if (myService.FType == 3) vFType = "لأسباب أخرى" + " " + myService.Notes2;
                }

                string vName = "", vJob = "", vSection = "", vNat = "", vManage = "", vCostCenter = "", vEmpImagePath = "";
                SEmp myEmp = new SEmp();
                myEmp.EmpCode = (int)myService.EmpCode;
                myEmp = myEmp.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myEmp != null)
                {
                    vName = myEmp.Name;
                    vManage = myEmp.Manag1;

                    if (vManage != "")
                    {
                        TblUsers myuser = new TblUsers();
                        if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), myuser.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        myuser.UserName = vManage;
                        myuser = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                                  where uitm.UserName == myuser.UserName
                                  select uitm).FirstOrDefault();
                        if (myuser != null)
                        {
                            vManage = myuser.FName;
                        }
                    }


                    Acc myAcc = new Acc();
                    myAcc.Branch = 1;
                    myAcc.Code = "12050" + myEmp.EmpCode.ToString();
                    if (myAcc.GetAcc(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                    {
                        CostCenter cs = new CostCenter();
                        cs.Branch = 1;
                        if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), cs.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        cs.Code = myAcc.CostCenter;
                        cs = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                              where citm.Code == cs.Code
                              select citm).FirstOrDefault();
                        if (cs != null)
                        {
                            vCostCenter = cs.Name1;
                        }
                    }

                    Codes myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 1;
                    myCode.Code = (int)myEmp.Nat;
                    if (Cache["LastCodes" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCodes" + Session["CNN2"].ToString(), myCode.GetAll2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCode = (from itm in (List<Codes>)(Cache["LastCodes" + Session["CNN2"].ToString()])
                              where itm.Ftype == myCode.Ftype && itm.Code == myCode.Code
                              select itm).FirstOrDefault();
                    if (myCode != null) vNat = myCode.Name1;

                    myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 2;
                    myCode.Code = (int)myEmp.Job;
                    myCode = myCode.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (myCode != null) vJob = myCode.Name1;

                    myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 3;
                    myCode.Code = (int)myEmp.Section;
                    myCode = myCode.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (myCode != null) vSection = myCode.Name1;
                }


                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage9301 page = new pdfPage9301();
                writer.PageEvent = page;
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vComapnyName = mySetting.CompanyName;
                }
                page.vStr1 = "طلب إخلاء طرف";
                page.vStr3 = "الشئون الإدارية";
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                document.Open();
                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont10 = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.UNDERLINE);
                iTextSharp.text.Font nationalTextFont140 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);

                int ColCount = 7;
                var cols = new[] { 260, 20, 105, 10, 260, 10, 150 };
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.MinimumHeight = 20f;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Border = 0;

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //

                cell.Phrase = new iTextSharp.text.Phrase("رقـم الطلــــب", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString(), nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myService.DocDate + " " + myService.DocTime, nationalTextFont);
                table.AddCell(cell);
                //
                cell.Phrase = new iTextSharp.text.Phrase("سبب إخلاء الطرف", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(vFType, nationalTextFont);

                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الرقم الوظيفي", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(myService.EmpCode.ToString(), nationalTextFont);
                table.AddCell(cell);
                //
                cell.Phrase = new iTextSharp.text.Phrase("اسـم الموظـف", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vName, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الجنسـية", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vNat, nationalTextFont);
                table.AddCell(cell);
                //

                cell.Phrase = new iTextSharp.text.Phrase("مسمى الوظيفة", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vJob, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("القسـم", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vSection + "/" + vCostCenter, nationalTextFont);
                table.AddCell(cell);

                //
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);

                //
                cell.Phrase = new iTextSharp.text.Phrase("تاريخ إخلاء الطرف", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myService.SDate, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);

                //---------------------------------------------------------------------------------------------------
                cell.Colspan = 1;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("الملاحظات", nationalTextFont14);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Colspan = 5;
                cell.Phrase = new iTextSharp.text.Phrase(myService.Notes, nationalTextFont140);
                table.AddCell(cell);

                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));







                PdfPTable table5 = new PdfPTable(6);
                table5.TotalWidth = document.PageSize.Width;

                var cols5 = new[] { 25, 225, 25, 225, 25, 225 };
                table5.SetWidths(cols5);
                PdfPCell cell5 = new PdfPCell();
                cell5.MinimumHeight = 20f;
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell5.Border = 0;

                table5.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase("توقيع الموظف", nationalTextFont140);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell5.FixedHeight = 25f;

                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الرئيس المباشر", nationalTextFont140);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                //cell5.Phrase = new iTextSharp.text.Phrase("الشئون الإدارية", nationalTextFont140);
                cell5.Phrase = new iTextSharp.text.Phrase("شئون الموظفين", nationalTextFont140);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell5.Phrase = new iTextSharp.text.Phrase("الاسم: " + vName, nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الاسم: " + vManage, nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الاسم:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                //



                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                //

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont140);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("يعتمد", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.Colspan = 2;
                table5.AddCell(cell5);

                //
                cell5.Colspan = 1;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);


                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase("مدير الشئون الإدارية", nationalTextFont140);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                //

                cell5.Colspan = 1;
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell20);
                table5.AddCell(cell5);


                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                //
                cell5.Colspan = 1;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase("عبدالله مثقب خبراني", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                //
                document.Add(table5);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                document.Close();
            }
            catch (Exception)
            {
            }
        }
        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage9301 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vComapnyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 200 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.Phrase = new iTextSharp.text.Phrase(vComapnyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }

        #endregion


        #region 9401 Print of eService
        public void PrinteVou401(string DocType, int MyNumber)
        {
            try
            {
                string vFType = "";
                eServices myService = new eServices();
                myService.DocType = short.Parse(DocType);
                myService.DocNo = MyNumber;
                myService = myService.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myService == null) return;
                else
                {
                    /*
                    Codes myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 10;
                    myCode.Code = (int)myService.FType;
                    if (Cache["LastCodes" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCodes" + Session["CNN2"].ToString(), myCode.GetAll2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCode = (from itm in (List<Codes>)(Cache["LastCodes" + Session["CNN2"].ToString()])
                              where itm.Ftype == myCode.Ftype && itm.Code == myCode.Code
                              select itm).FirstOrDefault();
                    if (myCode != null) vFType = myCode.Name1;
                     
                    if (myService.FType == 0) vFType = "لإنتهاء الخدمة";
                    else if (myService.FType == 1) vFType = "للإجازة العادية";
                    else if (myService.FType == 2) vFType = "للإجازة الاضطرارية";
                    else if (myService.FType == 3) vFType = "لأسباب أخرى" + " " + myService.Notes2;
                     */
                }

                string vName = "", vJob = "", vSection = "", vNat = "", vManage = "", vCostCenter = "", vEmpImagePath = "",vCostCenter2 = "";
                SEmp myEmp = new SEmp();
                myEmp.EmpCode = (int)myService.EmpCode;
                myEmp = myEmp.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                if (myEmp != null)
                {
                    vName = myEmp.Name;
                    vManage = myEmp.Manag1;

                    if (vManage != "")
                    {
                        TblUsers myuser = new TblUsers();
                        if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), myuser.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        myuser.UserName = vManage;
                        myuser = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                                  where uitm.UserName == myuser.UserName
                                  select uitm).FirstOrDefault();
                        if (myuser != null)
                        {
                            vManage = myuser.FName;
                        }
                    }


                    Acc myAcc = new Acc();
                    myAcc.Branch = 1;
                    myAcc.Code = "12050" + myEmp.EmpCode.ToString();
                    if (myAcc.GetAcc(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString))
                    {
                        CostCenter cs = new CostCenter();
                        cs.Branch = 1;
                        if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), cs.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                        cs.Code = myAcc.CostCenter;
                        cs = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                              where citm.Code == cs.Code
                              select citm).FirstOrDefault();
                        if (cs != null)
                        {
                            vCostCenter = cs.Name1;
                        }
                    }

                    Codes myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 1;
                    myCode.Code = (int)myEmp.Nat;
                    if (Cache["LastCodes" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCodes" + Session["CNN2"].ToString(), myCode.GetAll2(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCode = (from itm in (List<Codes>)(Cache["LastCodes" + Session["CNN2"].ToString()])
                              where itm.Ftype == myCode.Ftype && itm.Code == myCode.Code
                              select itm).FirstOrDefault();
                    if (myCode != null) vNat = myCode.Name1;

                    myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 2;
                    myCode.Code = (int)myEmp.Job;
                    myCode = myCode.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (myCode != null) vJob = myCode.Name1;

                    myCode = new Codes();
                    myCode.Branch = short.Parse(Session["Branch"].ToString());
                    myCode.Ftype = 3;
                    myCode.Code = (int)myEmp.Section;
                    myCode = myCode.Find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (myCode != null) vSection = myCode.Name1;
                }

                string vName2 = "";
                if ((int)myService.Field1 > 0)
                {                    
                    myEmp = new SEmp();
                    myEmp.EmpCode = (int)myService.Field1;
                    myEmp = myEmp.find(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString);
                    if (myEmp != null)
                    {
                        vName2 = myEmp.Name;
                    }
                }

                CostCenter mycs = new CostCenter();
                mycs.Branch = 1;
                if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), mycs.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mycs.Code = myService.Field01;
                mycs = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                        where citm.Code == mycs.Code
                      select citm).FirstOrDefault();
                if (mycs != null)
                {
                    vCostCenter2 = mycs.Name1;
                }


                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 50);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage9401 page = new pdfPage9401();
                writer.PageEvent = page;
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {   
                    page.vComapnyName = mySetting.CompanyName;
                }
                page.vStr1 = "طلب نقل موظف";
                page.vStr3 = "الشئون الإدارية";
                page.PageNo = "1";
                page.UserName = Session["FullUser"].ToString();
                document.Open();
                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont10 = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.UNDERLINE);
                iTextSharp.text.Font nationalTextFont140 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);

                int ColCount = 7;
                var cols = new[] { 260, 20, 105, 10, 260, 10, 150 };
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.MinimumHeight = 20f;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                cell.Border = 0;

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                //

                cell.Phrase = new iTextSharp.text.Phrase("رقـم الطلــــب", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(MyNumber.ToString(), nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myService.DocDate + " " + myService.DocTime, nationalTextFont);
                table.AddCell(cell);
                //
                cell.Phrase = new iTextSharp.text.Phrase("تفيدكم علماً بطلب نقل الموظف", nationalTextFont);
                cell.Colspan = 3;
                table.AddCell(cell);

                cell.Colspan = 1;
                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الرقم الوظيفي", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);


                cell.Phrase = new iTextSharp.text.Phrase(myService.EmpCode.ToString(), nationalTextFont);
                table.AddCell(cell);
                //
                cell.Phrase = new iTextSharp.text.Phrase("اسـم الموظـف", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vName, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الجنسـية", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vNat, nationalTextFont);
                table.AddCell(cell);
                //

                cell.Phrase = new iTextSharp.text.Phrase("مسمى الوظيفة", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vJob, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("القسـم", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vSection + "/" + vCostCenter, nationalTextFont);
                table.AddCell(cell);

                //

                cell.Phrase = new iTextSharp.text.Phrase("مع صلاحيات", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myService.Notes2, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("إلى فرع", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vCostCenter2, nationalTextFont);
                table.AddCell(cell);

                //

                cell.Phrase = new iTextSharp.text.Phrase("بدلاً من الموظف", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myService.Field1.ToString(), nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("الاسم", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(vName2, nationalTextFont);
                table.AddCell(cell);

                //
                cell.Phrase = new iTextSharp.text.Phrase("اعتياراً من تاريخ", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(myService.SDate, nationalTextFont);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);
                table.AddCell(cell);

                //---------------------------------------------------------------------------------------------------
                cell.Colspan = 1;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell.Phrase = new iTextSharp.text.Phrase("الملاحظات", nationalTextFont14);
                table.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase(":", nationalTextFont);
                table.AddCell(cell);

                cell.Colspan = 5;
                cell.Phrase = new iTextSharp.text.Phrase(myService.Notes, nationalTextFont140);
                table.AddCell(cell);

                document.Add(table);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));







                PdfPTable table5 = new PdfPTable(6);
                table5.TotalWidth = document.PageSize.Width;

                var cols5 = new[] { 25, 225, 25, 225, 25, 225 };
                table5.SetWidths(cols5);
                PdfPCell cell5 = new PdfPCell();
                cell5.MinimumHeight = 20f;
                cell5.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell5.Border = 0;

                table5.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase("توقيع الموظف", nationalTextFont140);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell5.FixedHeight = 25f;

                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الرئيس المباشر", nationalTextFont140);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                //cell5.Phrase = new iTextSharp.text.Phrase("الشئون الإدارية", nationalTextFont140);
                cell5.Phrase = new iTextSharp.text.Phrase("شئون الموظفين", nationalTextFont140);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell5.Phrase = new iTextSharp.text.Phrase("الاسم: " + vName, nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الاسم: " + vManage, nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("الاسم:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                //



                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell20);
                table5.AddCell(cell5);

                //
                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("التوقيع:", nationalTextFont10);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                //

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont140);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase("يعتمد", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.Colspan = 2;
                table5.AddCell(cell5);

                //
                cell5.Colspan = 1;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;

                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);


                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase("مدير الشئون الإدارية", nationalTextFont140);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.LIGHT_GRAY;
                table5.AddCell(cell5);

                //

                cell5.Colspan = 1;
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/2001.png"));
                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(100);

                //create instance of a table cell to contain the logo
                cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;
                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell20);
                table5.AddCell(cell5);


                //
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);

                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                //
                cell5.Colspan = 1;
                cell5.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);
                table5.AddCell(cell5);

                cell5.Colspan = 2;
                cell5.Phrase = new iTextSharp.text.Phrase("عبدالله مثقب خبراني", nationalTextFont);
                cell5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell5.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                table5.AddCell(cell5);
                //
                document.Add(table5);
                document.Add(new iTextSharp.text.Phrase("            ", nationalTextFont));

                document.Close();
            }
            catch (Exception)
            {
            }
        }
        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage9401 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, UserName, PageNo, vComapnyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);

                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(3);
                var cols2 = new[] { 200, 300, 200 };
                headerTbl.SetWidths(cols2);

                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document
                headerTbl.TotalWidth = doc.PageSize.Width;

                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.Phrase = new iTextSharp.text.Phrase(vComapnyName + "\n" + vStr3, nationalTextFont);
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase(vStr1, nationalTextFont);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 175, 175, 275, 175 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }

        #endregion


        #region 555 Print of Invoice Online
        public void PrintInvOnline(int MyNumber)
        {
            try
            {
                InvOnLine myInv = new InvOnLine();
                myInv.Branch = short.Parse(Session["Branch"].ToString());
                myInv.VouLoc = "00000";
                myInv.VouNo = MyNumber;
                myInv = myInv.Find(WebConfigurationManager.ConnectionStrings["MyCnn"].ConnectionString);
                if (myInv == null) return;

                InvOnLineDetails sinv = new InvOnLineDetails();
                sinv.Branch = short.Parse(Session["Branch"].ToString());
                sinv.VouLoc = "00000";
                sinv.VouNo = MyNumber;
                List<InvOnLineDetails> VouData = new List<InvOnLineDetails>();
                VouData = sinv.Find(WebConfigurationManager.ConnectionStrings["MyCnn"].ConnectionString);

                iTextSharp.text.Document document = new iTextSharp.text.Document(iTextSharp.text.PageSize.A4, -50, -50, 80, 40);
                HttpContext.Current.Response.ContentType = "application/pdf";
                PdfWriter writer = PdfWriter.GetInstance(document, HttpContext.Current.Response.OutputStream);
                pdfPage555 page = new pdfPage555();
                MyConfig mySetting = new MyConfig();
                mySetting.Branch = short.Parse(Session["Branch"].ToString());
                if (Cache["MyConfig" + Session["CNN2"].ToString()] == null) Cache.Insert("MyConfig" + Session["CNN2"].ToString(), mySetting.Get(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                mySetting = (MyConfig)(Cache["MyConfig" + Session["CNN2"].ToString()]);
                if (mySetting != null)
                {
                    page.vCompanyName = mySetting.CompanyName;
                }

                writer.PageEvent = page;
                page.PageNo = "1";
                page.UserName = "الموقع الالكتروني";
                page.vStr4 = "";                    //((Label)this.Master.FindControl("LblBranchName")).Text;    //Session["AreaName"].ToString();
                page.vStr2 = "";
                page.vStr3 = MyNumber.ToString();
                page.vStr5 = "00000";
                page.vStr6 = myInv.GDate;

                string arialunicodepath = Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont8 = new iTextSharp.text.Font(nationalBase, 8f, iTextSharp.text.Font.NORMAL); iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont2 = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont12 = new iTextSharp.text.Font(nationalBase, 12f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont14 = new iTextSharp.text.Font(nationalBase, 14f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                //-------------------------------------------------------------------------------------------
                document.Open();
                //-------------------------------------------------------------------------------------------

                int ColCount = 3;
                var cols = new[] { 80, 550, 70 };
                PdfPTable table = new PdfPTable(ColCount);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("التاريخ", nationalTextFont);
                table.AddCell(cell);

                PdfPTable TblInside = new PdfPTable(3);
                var colsInside = new[] { 100, 340, 100 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                PdfPCell cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                PdfPCell cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase(HDate.RotateDate2(myInv.HDate) + " هـ ", nationalTextFont);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase((myInv.ShipType2 == 0 ? " - نوع الشحن : شحن عادي " : myInv.ShipType2 == 1 ? " - نوع الشحن : سطحه " : myInv.ShipType2 == 2 ? "نوع الشحن : سطحه هيدلوريك  - " : "نوع الشحن : سطحه هيدلوريك مغطاه - ") + (myInv.VouType == 0 ? "ذهاب" : "ذهاب و عوده"), nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.GDate + " م ", nationalTextFont);
                TblInside.AddCell(cell0);

                table.AddCell(cellInside);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.Phrase = new iTextSharp.text.Phrase("Date", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);     // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n\r\n" + "بيانات المرسل و المرسل إليه", nationalTextFont);
                table.AddCell(cell);

                TblInside = new PdfPTable(3);
                colsInside = new[] { 140, 300, 100 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("الاســم:", nationalTextFont);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Name, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consigner Name", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("رقم الهوية:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.IDNo + " " + (myInv.IDType == 0 ? "هوية مقيم" : "هوية وطنية"), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("I.D.No./Iqama", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مصدرها/تاريخها:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.IDFrom + "   " + myInv.IDDate, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Place of Issue/Date", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("العنوان:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Address + (myInv.MobileNo != "" ? " جوال رقم " + myInv.MobileNo : ""), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Address", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مكان الشحن:", nationalTextFont);
                TblInside.AddCell(cell0);

                string City = "";
                Cities myCity = new Cities();
                myCity.Branch = short.Parse(Session["Branch"].ToString());
                myCity.Code = myInv.PlaceofLoading;
                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                          where sitm.Code == myCity.Code
                          select sitm).FirstOrDefault();
                if (myCity != null) City = myCity.Name1;

                cell0.Phrase = new iTextSharp.text.Phrase(City, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Place of Loading", nationalTextFont2);
                TblInside.AddCell(cell0);

                City = "";
                myCity = new Cities();
                myCity.Branch = short.Parse(Session["Branch"].ToString());
                myCity.Code = myInv.Destination;
                if (Cache["Cities" + Session["CNN2"].ToString()] == null) Cache.Insert("Cities" + Session["CNN2"].ToString(), myCity.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                myCity = (from sitm in (List<Cities>)(Cache["Cities" + Session["CNN2"].ToString()])
                          where sitm.Code == myCity.Code
                          select sitm).FirstOrDefault();
                if (myCity != null) City = myCity.Name1;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("جهه الترحيل:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(City, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Destination", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("أسم المستلم:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.RecName, nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consignee Name", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("عنوان المستلم:", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.RecAddress + (myInv.RecMobileNo != "" ? " جوال رقم " + myInv.RecMobileNo : ""), nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Consignee Address", nationalTextFont2);
                TblInside.AddCell(cell0);

                table.AddCell(cellInside);


                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n\r\n" + "Consigner and Consignee Information", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n" + "بيانات السيارة المرسلة", nationalTextFont);
                table.AddCell(cell);

                TblInside = new PdfPTable(6);
                colsInside = new[] { 60, 60, 100, 80, 100, 80 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cellInside.PaddingRight = 0;

                cell0 = new PdfPCell();
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.FixedHeight = 15f;
                //cell0.Border = 0;
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("نوع السيارة", nationalTextFont);
                cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("الطراز", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("الموديل", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("الهيكل/اللوحة", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("اللون", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("السعر", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Brand Name", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Type", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Model", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Plate/Chassis", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Color", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Price", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                double Total = 0;
                foreach (InvOnLineDetails itm in VouData)
                {
                    string CarType = "";
                    CarType myCarType = new CarType();
                    myCarType.Branch = short.Parse(Session["Branch"].ToString());
                    myCarType.Code = itm.CarType;
                    myCarType = myCarType.find(WebConfigurationManager.ConnectionStrings["MyCnn"].ConnectionString);
                    if (myCarType != null) CarType = myCarType.Name1;

                    cell0.Phrase = new iTextSharp.text.Phrase(CarType, nationalTextFont2);
                    TblInside.AddCell(cell0);

                    CarType = "";
                    myCarType = new CarType();
                    myCarType.Branch = short.Parse(Session["Branch"].ToString());
                    myCarType.Code = itm.Model;
                    myCarType = myCarType.find(WebConfigurationManager.ConnectionStrings["MyCnn"].ConnectionString);
                    if (myCarType != null) CarType = myCarType.Name1;

                    cell0.Phrase = new iTextSharp.text.Phrase(CarType, nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(itm.Brand, nationalTextFont2);
                    TblInside.AddCell(cell0);

                    //cell0.Phrase = new iTextSharp.text.Phrase(itm.PlateNo, nationalTextFont2);
                    //TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(itm.ChassisNo, nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(itm.Color, nationalTextFont2);
                    TblInside.AddCell(cell0);

                    cell0.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", itm.Price), nationalTextFont2);
                    TblInside.AddCell(cell0);
                    Total += (double)itm.Price;
                }

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("عدد السيارات", nationalTextFont);
                cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Qty.ToString(), nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Total of Cars", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("المبلغ", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Total), nationalTextFont);
                TblInside.AddCell(cell0);

                //-------------------------------------------------------------------------------------------------------------------
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("نوع الخصم", nationalTextFont);
                cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(myInv.DiscountTerm, nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Discount Term", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("الخصم", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Discount", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myInv.Discount), nationalTextFont);
                TblInside.AddCell(cell0);

                //-------------------------------------------------------------------------------------------------------------------
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("الصافي", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Net", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Total - myInv.Discount), nationalTextFont);
                TblInside.AddCell(cell0);
                //-------------------------------------------------------------------------------------------------------------------
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase(moh.doTax(myInv.GDate, 1), nationalTextFont);
                cell0.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myInv.Tax), nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(moh.doTax(myInv.GDate, 2), nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("الاجمالي", nationalTextFont);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("Total", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", Total - myInv.Discount + myInv.Tax), nationalTextFont);
                TblInside.AddCell(cell0);
                //-------------------------------------------------------------------------------------------------------------------
                table.AddCell(cellInside);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("\r\n\r\n" + "The Consignment Information", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("طريقة الدفع", nationalTextFont);
                table.AddCell(cell);

                TblInside = new PdfPTable(6);
                colsInside = new[] { 90, 90, 90, 40, 140, 90 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase(myInv.Payment == 0 ? "نقداً:" : "شبكة:", nationalTextFont);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                TblInside.AddCell(cell0);

                PdfPCell cell90 = new PdfPCell();
                cell90.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell90.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                if ((double)myInv.CashAmount == 0)
                {
                    cell90.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myInv.CashAmount), nationalTextFont);
                }
                else
                {
                    cell90.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2} ريال", myInv.CashAmount), nationalTextFont);
                }
                TblInside.AddCell(cell90);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Cash", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("آجل فرع:", nationalTextFont);
                TblInside.AddCell(cell0);

                if (myInv.Payment == 0)
                {
                    CostCenter myCostCenter = new CostCenter();
                    myCostCenter.Branch = short.Parse(Session["Branch"].ToString());
                    if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), myCostCenter.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCostCenter.Code = myInv.Site;
                    myCostCenter = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                                    where citm.Code == myCostCenter.Code
                                    select citm).FirstOrDefault();
                    if (myCostCenter != null) cell0.Phrase = new iTextSharp.text.Phrase(myCostCenter.Name1, nationalTextFont);
                    else cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                }
                else if (myInv.Payment == 2)
                {
                    CostCenter myCostCenter = new CostCenter();
                    myCostCenter.Branch = short.Parse(Session["Branch"].ToString());
                    if (Cache["LastCostCenter" + Session["CNN2"].ToString()] == null) Cache.Insert("LastCostCenter" + Session["CNN2"].ToString(), myCostCenter.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                    myCostCenter.Code = myInv.Site2;
                    myCostCenter = (from citm in (List<CostCenter>)(Cache["LastCostCenter" + Session["CNN2"].ToString()])
                                    where citm.Code == myCostCenter.Code
                                    select citm).FirstOrDefault();
                    if (myCostCenter != null) cell0.Phrase = new iTextSharp.text.Phrase(myCostCenter.Name1, nationalTextFont);
                    else cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                }
                else cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);

                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                TblInside.AddCell(cell0);

                if (myInv.SiteAmount == 0)
                {
                    cell90.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myInv.SiteAmount), nationalTextFont);
                }
                else
                {
                    cell90.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2} ريال", myInv.SiteAmount), nationalTextFont);
                }
                TblInside.AddCell(cell90);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Credit", nationalTextFont2);
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("على حساب العميل:", nationalTextFont);
                TblInside.AddCell(cell0);

                if (myInv.Customer == "-1") cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                else
                {
                    Acc myacc = new Acc();
                    myacc.Branch = short.Parse(Session["Branch"].ToString());
                    myacc.Code = myInv.Customer;
                    if (myacc.GetAcc2(WebConfigurationManager.ConnectionStrings["MyCnn"].ConnectionString))
                    {
                        cell0.Phrase = new iTextSharp.text.Phrase(myacc.Name1, nationalTextFont);
                    }
                    else cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                }
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                TblInside.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("", nationalTextFont);
                TblInside.AddCell(cell0);

                if (myInv.CustomerAmount == 0)
                {
                    cell90.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2}", myInv.CustomerAmount), nationalTextFont);
                }
                else
                {
                    cell90.Phrase = new iTextSharp.text.Phrase(string.Format("{0:N2} ريال", myInv.CustomerAmount), nationalTextFont);
                }
                TblInside.AddCell(cell90);
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("Bill to Co", nationalTextFont2);
                TblInside.AddCell(cell0);
                table.AddCell(cellInside);

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("Method of Payment", nationalTextFont2);
                table.AddCell(cell);

                //-------------------------------------------------------------------------------------------

                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("حالة السيارة" + "\r\n\r\n\r\n\r\n" + "العودة خلال ستة شهور فقط", nationalTextFont);
                table.AddCell(cell);

                TblInside = new PdfPTable(1);
                colsInside = new[] { 550 };
                TblInside.SetWidths(colsInside);
                TblInside.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cellInside = new PdfPCell(TblInside);
                cellInside.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside.PaddingRight = 0;

                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/Car.jpg"));
                logo.ScalePercent(38);
                PdfPCell cell20 = new PdfPCell(logo);
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell20.PaddingTop = 5;
                cell20.PaddingBottom = 5;
                cell20.PaddingRight = 0;
                cell20.Border = 0;
                TblInside.AddCell(cell20);

                //--------------
                PdfPTable TblInside20 = new PdfPTable(8);
                colsInside = new[] { 125, 30, 30, 125, 125, 30, 30, 125 };
                TblInside20.SetWidths(colsInside);
                TblInside20.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                TblInside20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                PdfPCell cellInside20 = new PdfPCell(TblInside20);
                cellInside20.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside20.PaddingRight = 0;
                cellInside20.Border = 0;

                cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell90 = new PdfPCell();
                cell90.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell90.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell90.PaddingTop = 3;
                //cell90.PaddingBottom = 3;
                //cell90.PaddingLeft = 1;
                //cell90.PaddingRight = 1;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("الاســتـمــــارة", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access1 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Registration", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("الايـــريــــال", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access2 ? "X" : "  ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Anten", nationalTextFont2);
                TblInside20.AddCell(cell0);

                //cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                //cell0.Phrase = new iTextSharp.text.Phrase("الكــنـداســـة", nationalTextFont2);
                //TblInside20.AddCell(cell0);
                //cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access3 ? "X" : " ", nationalTextFont2);
                //TblInside20.AddCell(cell90);
                //cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                //TblInside20.AddCell(cell0);                
                //cell0.Phrase = new iTextSharp.text.Phrase("Silencer", nationalTextFont2);
                //TblInside20.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("راديـو و مسـجــل", nationalTextFont);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access4 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Radio Casete", nationalTextFont2);
                TblInside20.AddCell(cell0);

                //cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                //cell0.Phrase = new iTextSharp.text.Phrase("سقف السيارة الخارجي", nationalTextFont2);
                //TblInside20.AddCell(cell0);
                //cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access5 ? "X" : " ", nationalTextFont2);
                //TblInside20.AddCell(cell90);
                //cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                //TblInside20.AddCell(cell0);
                //cell0.Phrase = new iTextSharp.text.Phrase("Top Roof", nationalTextFont2);
                //TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("الاطـار الاحتيــاطي", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access6 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("Spare Tyre", nationalTextFont2);
                TblInside20.AddCell(cell0);

                /*
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("مرآة جانبية يمين يسار", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access7 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access8 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Side Mirror", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("طاسات كفرات أمامية", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access9 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access10 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Wheel Cover Front", nationalTextFont2);
                TblInside20.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("لوحات أمامية وخلفية", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access11 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access12 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Number Plates", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("طاسات كفرات خلفية", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access13 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access14 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Wheel Cover Rear", nationalTextFont2);
                TblInside20.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("انوار أمامية وخلفية", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access15 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access16 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Head & Back Lights", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell0.Phrase = new iTextSharp.text.Phrase("زجاج أمامي وخلفي", nationalTextFont2);
                TblInside20.AddCell(cell0);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access17 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell90.Phrase = new iTextSharp.text.Phrase((bool)myInv.Access18 ? "X" : " ", nationalTextFont2);
                TblInside20.AddCell(cell90);
                cell0.Phrase = new iTextSharp.text.Phrase("Wind Screen", nationalTextFont2);
                TblInside20.AddCell(cell0);
                 */

                TblInside.AddCell(cellInside20);
                //--------------

                cell0 = new PdfPCell();
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell0.Border = 0;
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("علامة (X) تعني ملاحظة على السيارة", nationalTextFont2);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.Phrase = new iTextSharp.text.Phrase("1- " + myInv.Remark1, nationalTextFont2);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);

                //cell0.Phrase = new iTextSharp.text.Phrase("2- " + myInv.Remark2, nationalTextFont2);
                //cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                //TblInside.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("المرفقات: " + myInv.Attached, nationalTextFont2);
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                TblInside.AddCell(cell0);

                //--------------
                PdfPTable TblInside2 = new PdfPTable(3);
                colsInside = new[] { 120, 210, 210 };
                TblInside2.SetWidths(colsInside);
                TblInside2.RunDirection = PdfWriter.RUN_DIRECTION_LTR;
                TblInside2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                PdfPCell cellInside2 = new PdfPCell(TblInside2);
                cellInside2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell330.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cellInside2.PaddingRight = 0;
                cellInside2.Border = 0;

                cell0 = new PdfPCell();
                cell0.FixedHeight = 14f;
                //cell320.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell0.Border = 0;

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell0.BackgroundColor = iTextSharp.text.BaseColor.WHITE;

                //-----------------------------------------------------------------------
                MessagingToolkit.QRCode.Codec.QRCodeEncoder encoder = new MessagingToolkit.QRCode.Codec.QRCodeEncoder();
                encoder.QRCodeVersion = 0;
                System.Drawing.Bitmap obj = new System.Drawing.Bitmap(encoder.Encode("شركة الناقلات البرية العربية للنقل والتخزين" + System.Environment.NewLine + "310330321200003" + System.Environment.NewLine + myInv.GDate + " " + myInv.FTime + System.Environment.NewLine + string.Format("{0:N2}", myInv.Tax) + System.Environment.NewLine + string.Format("{0:N2}", (Total - myInv.Discount + myInv.Tax)), System.Text.Encoding.UTF8));
                MemoryStream ms = new MemoryStream();
                obj.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                byte[] byteImage = ms.ToArray();
                System.Drawing.Image sdi = System.Drawing.Image.FromStream(ms);
                iTextSharp.text.Image logo2 = iTextSharp.text.Image.GetInstance(sdi, System.Drawing.Imaging.ImageFormat.Png);
                logo2.ScalePercent(30);

                PdfPCell cell200 = new PdfPCell(logo2);
                cell200.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell200.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                cell200.PaddingTop = 0;
                cell200.PaddingRight = 0;
                cell200.Rowspan = 6;
                cell200.Border = 0;
                TblInside2.AddCell(cell200);


                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell0.Phrase = new iTextSharp.text.Phrase("مرسل السيارة", nationalTextFont2);
                TblInside2.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                string UserName = "";
                TblUsers ax = new TblUsers();
                if (Cache["Users" + Session["CNN2"].ToString()] == null) Cache.Insert("Users" + Session["CNN2"].ToString(), ax.GetAll(WebConfigurationManager.ConnectionStrings[Session["CNN"].ToString()].ConnectionString));
                ax.UserName = myInv.UserName;
                ax = (from uitm in (List<TblUsers>)(Cache["Users" + Session["CNN2"].ToString()])
                      where uitm.UserName == ax.UserName
                      select uitm).FirstOrDefault();
                if (ax != null)
                {
                    UserName = ax.FName;
                }
                cell0.Phrase = new iTextSharp.text.Phrase("موظف الأستقبال: " + UserName, nationalTextFont2);
                TblInside2.AddCell(cell0);
                //---------------------------------------------------------------------------------------------
                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("(قرأت الشروط بالخلف و أوافق عليها)", nationalTextFont2);
                TblInside2.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("التوقيع", nationalTextFont2);
                TblInside2.AddCell(cell0);
                //--------------------------------------------------------------------------------------------

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("الاســم: " + myInv.Name, nationalTextFont2);
                TblInside2.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside2.AddCell(cell0);

                //----------------------------------------------------------------------------------------
                //cell0.Phrase = new iTextSharp.text.Phrase("الاســم: " + myInv.RecName, nationalTextFont2);
                //TblInside2.AddCell(cell0);

                cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell0.Phrase = new iTextSharp.text.Phrase("التوقيع", nationalTextFont2);
                TblInside2.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("المستلم: " + myInv.RecName, nationalTextFont2);
                TblInside2.AddCell(cell0);

                //---------------------------------------------------------------------------------------
                cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                TblInside2.AddCell(cell0);

                cell0.Phrase = new iTextSharp.text.Phrase("التوقيع", nationalTextFont2);
                TblInside2.AddCell(cell0);
                //---------------------------------------------------------------------------------------
                //cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                //TblInside2.AddCell(cell0);
                //TblInside2.AddCell(cell0);
                //---------------------------------------------------------------------------------------

                
                for (int r = ((int)myInv.Qty - 1); r < 10; r++)
                {
                    cell0.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                    cell0.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                    TblInside2.AddCell(cell0);
                    TblInside2.AddCell(cell0);
                    TblInside2.AddCell(cell0);
                }
                TblInside.AddCell(cellInside2);

                table.AddCell(cellInside);
                //--------------
                cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Phrase = new iTextSharp.text.Phrase("Status of Consignment Vehicle", nationalTextFont2);
                table.AddCell(cell);
                //------------------------------------------------------------------------------------------
                document.Add(table);

                PdfPTable foot = new PdfPTable(20);
                colsInside = new[] { 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30 };
                foot.TotalWidth = document.PageSize.Width; //100f;
                foot.SetWidths(colsInside);
                foot.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                foot.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell901 = new PdfPCell(foot);
                cell901.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell901.Phrase = new iTextSharp.text.Phrase("X", nationalTextFont2);
                cell901.Border = 0;

                PdfPCell cell902 = new PdfPCell(foot);
                cell902.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont2);
                cell902.Border = 0;

                //0
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S1 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S2 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S3 ? cell901 : cell902);

                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S4 ? cell901 : cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S5 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S6 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                //1
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S7 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S8 ? cell901 : cell902);
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S9 ? cell901 : cell902);
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S10 ? cell901 : cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S11 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S12 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S13 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S14 ? cell901 : cell902);

                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S15 ? cell901 : cell902);

                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S16 ? cell901 : cell902);

                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S17 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                //2
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S18 ? cell901 : cell902);
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S19 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S21 ? cell901 : cell902);

                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S22 ? cell901 : cell902);

                foot.AddCell(cell902);

                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S23 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                //3
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                //4
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                //5
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S24 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S25 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S26 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S27 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S28 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                //6
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S29 ? cell901 : cell902);


                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S30 ? cell901 : cell902);


                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S31 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S32 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S33 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                //7
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S34 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S35 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S36 ? cell901 : cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S37 ? cell901 : cell902);

                foot.AddCell(cell902);

                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                cell902.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                foot.AddCell(cell902);  //foot.AddCell((bool)myInv.S38 ? cell901 : cell902);

                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                //8
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                //9
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);
                foot.AddCell(cell902);

                foot.WriteSelectedRows(0, foot.Rows.Count(), 0, 500 - (15 * ((int)myInv.Qty - 1)), writer.DirectContent);


                foot = new PdfPTable(5);
                colsInside = new[] { 23, 75, 500, 65, 23 };
                foot.TotalWidth = document.PageSize.Width; //100f;
                foot.SetWidths(colsInside);
                foot.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                foot.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                cell901 = new PdfPCell(foot);
                cell901.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell901.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell901.FixedHeight = 15f;
                cell901.Border = 0;

                //0
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess1, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess2, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                //1
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess3, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess4, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                //2
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess5, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess6, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                //3
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess7 + " " + myInv.sAccess8, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess9 + " " + myInv.sAccess10, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                //4
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess11 + " " + myInv.sAccess12, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess13 + " " + myInv.sAccess14, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                //5
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess15 + " " + myInv.sAccess16, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);  //cell901.Phrase = new iTextSharp.text.Phrase(myInv.sAccess17 + " " + myInv.sAccess18, nationalTextFont8);
                foot.AddCell(cell901);
                cell901.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont8);
                foot.AddCell(cell901);

                foot.WriteSelectedRows(0, foot.Rows.Count(), 0, 407 - (15 * ((int)myInv.Qty - 1)), writer.DirectContent);


                cols = new[] { 700 };
                table = new PdfPTable(1);
                table.TotalWidth = document.PageSize.Width; //100f;
                table.SetWidths(cols);
                cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell.Border = 0;
                cell.Phrase = new iTextSharp.text.Phrase("شركة ناقلات البرية - لمتابعة شحنتك على موقعنا www.naqelat.net للاستفسار اتصل على 0115283100 100 خط \n الرقم الموحد 920028833 (تخضع المكالمة لرسوم شركة الأتصالات) ", nationalTextFont);
                table.AddCell(cell);
                //-------------------------------------------------------------------------------------------
                document.Add(table);

                if (Request.QueryString["DoubleSide"] != null)
                {
                    if (Request.QueryString["DoubleSide"].ToString() == "1")
                    {
                        document.NewPage();
                        ColCount = 3;
                        cols = new[] { 28, 350, 322 };
                        table = new PdfPTable(ColCount);
                        table.TotalWidth = document.PageSize.Width; //100f;
                        table.SetWidths(cols);
                        cell = new PdfPCell();
                        cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                        //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                        table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        nationalTextFont = new iTextSharp.text.Font(nationalBase, 11f, iTextSharp.text.Font.NORMAL);
                        cell.Border = 0;

                        cell.BackgroundColor = new iTextSharp.text.BaseColor(242, 242, 242);  // iTextSharp.text.BaseColor.LIGHT_GRAY;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        cell.Phrase = new iTextSharp.text.Phrase("شروط النقل البري", nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase("LAND TRANSIT CONDITIONS", nationalTextFont);
                        table.AddCell(cell);

                        cell.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                        table.AddCell(cell);

                        cell.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("1- تعنى العبارة (المقاول) و (الناقل) في هذه الشروط – مؤسسة الناقلات البرية العربية – أو و كلائه وأي شخص أو أشخاص يقومون بنقل السيارات بموجب عقد من الباطن مع المقاول", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("In these Land Transit Condition the 'Contractor' or 'Transporter' means Arab Land Transporters Est. And includes the servants. Agents and any person or persons effecting the transport of vehicles for Contractor and/or under a sub-contract with the Contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[1]", nationalTextFont);
                        table.AddCell(cell);


                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("2- شروط النقل هذه جزء لا يتحزأ من مستندات العقد المبرم مع العميل – ووثيقة رسمية لا يحق لأي شخص تعديل أي منها في أي وجه من الأوجه إلا بموجب أتفاق مستبق وتفويضاً صريحاً بذلك من المقاول", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("These Land Transit Conditions are part of the Contract documents. Witch are executed with the customer. Therefore no one will have any authority to vary these conditions in any way unless he is expressly authorized to do so by the contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[2]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("3- يجب على العميل التأكد من صحة كافة البيانات المعبأة من قبله أو من يمثله والموضحة في هذه الاتفاقية وإذا اتضح عدم صحة أي من هذه البيانات فإن العميل سيتحمل كافة ما ينتج عن ذلك.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("It is the customer's responsibility to make sure of the required relevant information that he or his representative should fill out on the cover side of this contract, if any given information are wrong customer is responsible for consequence", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[3]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("4- تقتصر مسؤولية المقاول إزاء العميل عن ضرر سيارته / سياراته على المسؤولية التي تغطيها بوليصة التأمين ولا يكون الناقل مسؤولاً عن الأضرار غير المباشرة أو المترتبة عن الخسائر والأضرار الناتجة عن تعرض السيارة للأعطال الميكانيكية و الكهربائية أو كسر بالزجاج أو أي أضرار أخرى ناتجة بسبب حادث مروري قبل استلام السيارة من قبل الناقل ، كما لا يتحمل الناقل أي مسؤولية تجاه تلف أو فقدان الأمتعة الشخصية داخل السيارة.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor's liability to the customer for damage or loss of his vehicle/vehicles shall be limited to that covered by the Contractor's  Land Transit Insurance policy. The Contractor shall not be limited to that covered by the Contract's land Transit Insurance police. The Contractor shall not be liable forindirect  or consequential damage to the vehicle/vehicles; or  loss or damage happen Electro-Mechanical work or break down of grass or any other damage due to traffic accident before receiving the vehicle by Transporter. Also the Transporter is not liable for the loss or damage to the personal effects or luggage inside the vehicle", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[4]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("5- على المقاول أن يبذل كل جهد معقول لضمان توريد السيارة / السيارات بأمان إلى العنوان الموضح على وجه هذه الاتفاقية وتسليمها إلى العميل أو من ينوب عنه.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor  shall  make reasonable effect to see that the vehicle/vehicles are safely delivered at the address indicated on the cover side of this contract  to an apparently member of the consignee's staff", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[5]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("6- الناقل غير مسؤول عن أي أضرار للسيارة بعد استلام العميل لها أو من ينوب عنه وتقتصر مسؤولية الناقل في الفترة من تاريخ الاستلام إلى تاريخ التسليم.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor shall  not be liable  for any damage or loss to the vehicle after receipt by customer or his representative. The Transporter liability towards vehicle/vehicles are only limited during the period from the date of received to the time of delivery", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[6]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("7- يلتزم العميل باستلام سيارته أو من ينوب عنه مباشرة في موقع التسليم للمقاول والمدن في هذه الاتفاقية وفي مدة أقصاها سبعة أيام من تاريخ وصول السيارة وبعد هذا التاريخ مباشرة يلتزم العميل بدفع مبلغ وقدره (10) ريالات رسوم أرضية عن كل يوم تأخير.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The costumer is obliged to receive his vehicle from Contractor's place of delivery mentioned in this contract within seven days of arrived .After passing this date the costumer has to pay demurrage charges SR: 10 per each day", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[7]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("8- يمنع منعاً باتاً وضع أي مواد قالبة للاشتعال أو أسلحة غير مرخصة أو أي ممنوعات أخرى يحظر تداولها طبقاً للأنظمة المعمول بها في المملكة العربية السعودية داخل السيارة المنقولة ويتحمل العميل كامل المسؤولية تجاه ما يترتب على ذلك ، كما أنه الناقل غير مسؤول عن ترك أي أشياء ثمينة من قبل العميل داخل السيارة عند نقلها.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("It is totally prohibited to place inside the transported vehicle any inflammable item or arms without license or any other forbidden goods according  to the law of Kingdom  of Saudi Arabia and the customer shall be fully responsible for violating this act. Also the Transporter is not responsible for any valuable things left out by customer in the vehicle", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[8]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("9- تدفع رسوم النقل الخاصة بالمقابل بواسطة العميل دون أن يؤثر ذلك على حقوق المقاول ضد المرسل أو المرسل إليه أو أي شخص أخر ويجب ألا يؤخذ أي أدعاء كمبرر لتأخير أو احتجاز مدفوعات مستحقة للمقاول أو مسؤوليات يتكبدها المقاول.", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The Contractor 's charge shall by  payable by the customer without prejudice to the Contractor 's right against the consignor, consignee or any other person. A claim or counterclaim shall not be made the reason for deferring or withholding payment of money or liabilities owing to the Contractor", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[9]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("10- على العميل أن يبري ذمة المقاول ويحميه ضد كل الدعاوي والتكاليف والمطالبات التي تقدم من أي جهة كانت و تتجاوز قيمتها المسؤوليات القانونية للمقاول وفقاً لأحكام هذه الشروط", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("The customer shall save harmless and keep the Contractor indemnified from and against all claim, cost and demands by whosoever made or preferred in excess of the legal liabilities of the Contractor under the terms of these conditions", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[10]", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                        cell.Phrase = new iTextSharp.text.Phrase("11- في حالة الغاء اتفاقية الشحن يلتزم العميل بسداد مبلغ 50 ريال مصاريف أدارية", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("In case of cancellation shipping invoice customer shall pay an amount of SR 50 administrative expenses", nationalTextFont);
                        table.AddCell(cell);

                        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        cell.Phrase = new iTextSharp.text.Phrase("[11]", nationalTextFont);
                        table.AddCell(cell);

                        document.Add(table);
                    }
                }

                document.Close();
            }
            catch (Exception)
            {
            }
        }

        // *************************************************** ITextSharp ****************************************************************
        public class pdfPage555 : iTextSharp.text.pdf.PdfPageEventHelper
        {
            public string vStr1, vStr2, vStr3, vStr4, vStr5, vStr6, UserName, PageNo, vCompanyName;
            //I create a font object to use within my footer
            protected iTextSharp.text.Font footer
            {
                get
                {
                    // create a basecolor to use for the footer font, if needed.
                    iTextSharp.text.BaseColor grey = new iTextSharp.text.BaseColor(128, 128, 128);
                    string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                    BaseFont nationalBase;
                    nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    iTextSharp.text.Font font = new iTextSharp.text.Font(nationalBase, 10f, iTextSharp.text.Font.NORMAL, iTextSharp.text.BaseColor.WHITE);
                    return font;
                }
            }
            //override the OnStartPage event handler to add our header
            public override void OnStartPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                string arialunicodepath = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                string arialunicodepath2 = HttpContext.Current.Server.MapPath("Fonts") + @"\mohammad_bold_art_1.ttf";
                BaseFont nationalBase;
                BaseFont nationalBase2;
                nationalBase = BaseFont.CreateFont(arialunicodepath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                nationalBase2 = BaseFont.CreateFont(arialunicodepath2, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                iTextSharp.text.Font nationalTextFont = new iTextSharp.text.Font(nationalBase, 16f, iTextSharp.text.Font.NORMAL);
                iTextSharp.text.Font nationalTextFont16 = new iTextSharp.text.Font(nationalBase2, 14f, iTextSharp.text.Font.NORMAL);


                //I use a PdfPtable with 1 column to position my header where I want it
                PdfPTable headerTbl = new PdfPTable(4);
                var cols2 = new[] { 325, 100, 450, 325 };
                headerTbl.TotalWidth = doc.PageSize.Width;
                headerTbl.SetWidths(cols2);
                headerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                headerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //set the width of the table to be the same as the document


                PdfPCell cell2 = new PdfPCell();
                cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell2.Border = 0;
                cell2.PaddingRight = 15;
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.Phrase = new iTextSharp.text.Phrase(vCompanyName + "\n" + "VAT#310330321200003", nationalTextFont16);

                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                string vStr = moh.MakeMask(DateTime.Parse(vStr6).Month.ToString(), 2) + moh.MakeMask(DateTime.Parse(vStr6).Day.ToString(), 2) + "" + vStr3 + "" + (100 + int.Parse(vStr5)).ToString();
                int r = 0;
                for (int i = 0; i < vStr.Length; i++)
                {
                    r += int.Parse(vStr[i].ToString());
                }
                vStr = moh.MakeMask(r.ToString(), 2) + vStr;

                cell2.PaddingRight = 0;
                cell2.Phrase = new iTextSharp.text.Phrase("\n" + "إتفاقية شحن (فاتورة) \n رقم " + vStr, nationalTextFont16);
                cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                headerTbl.AddCell(cell2);

                var TextCell = new PdfPCell(headerTbl.DefaultCell);
                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //TextCell.Border = 0;
                TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                PdfContentByte cb = writer.DirectContent;
                var bc128 = new Barcode128();
                bc128.CodeType = Barcode.CODE128;
                bc128.Code = vStr2 + vStr3;
                bc128.GenerateChecksum = true;
                bc128.AltText = "";
                bc128.StartStopText = true;


                //bc128.BarHeight = 8;
                //bc128.Extended = true; 

                //bc128.Baseline = 20;   // Doesn't affect rendering.
                //bc128.Size = 20;       // Doesn't affect rendering.
                //bc128.BarHeight = 60;  // DOES affect rendering.
                //bc128.X = 2;                          

                TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.PaddingTop = 10;
                //cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                var bi = bc128.CreateImageWithBarcode(cb, null, null);
                bi.ScalePercent(100);
                bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                TextCell.AddElement(bi);

                //cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                //table.AddCell(cell);
                headerTbl.AddCell(TextCell);



                //var cols = new[] { 200, 150, 150, 300, 350 };
                //document.Open();
                //PdfPTable table = new PdfPTable(5);
                //table.TotalWidth = document.PageSize.Width; //100f;
                //table.SetWidths(cols);
                //PdfPCell cell2 = new PdfPCell();
                //cell2.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell2.Border = 0;
                ////cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                //table.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                //table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //cell2.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                //cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //PdfPCell cell22 = new PdfPCell();
                //cell22.ArabicOptions = ColumnText.DIGITS_EN2AN;
                //cell22.BackgroundColor = iTextSharp.text.BaseColor.WHITE;
                //cell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                //table.AddCell(cell2);

                //cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                //cell2.Phrase = new iTextSharp.text.Phrase("إتفاقية شحن (فاتورة) رقم", nationalTextFont16);
                //table.AddCell(cell2);

                //cell22.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                //cell22.Phrase = new iTextSharp.text.Phrase(txtVouNo.Text + lblBranch.Text, nationalTextFont16);
                //table.AddCell(cell22);

                //cell2.Phrase = new iTextSharp.text.Phrase(" ", nationalTextFont);
                //table.AddCell(cell2);


                //var TextCell = new PdfPCell(table.DefaultCell);
                //TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //TextCell.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                ////TextCell.Border = 0;
                //TextCell.BorderColor = iTextSharp.text.BaseColor.WHITE;
                //PdfContentByte cb = writer.DirectContent;
                //var bc128 = new Barcode128();
                //bc128.CodeType = Barcode.CODE128;
                //bc128.Code = lblBranch.Text + txtVouNo.Text;
                //bc128.GenerateChecksum = true;
                //bc128.AltText = "";
                //bc128.StartStopText = true;


                ////bc128.BarHeight = 8;
                ////bc128.Extended = true; 

                ////bc128.Baseline = 20;   // Doesn't affect rendering.
                ////bc128.Size = 20;       // Doesn't affect rendering.
                ////bc128.BarHeight = 60;  // DOES affect rendering.
                ////bc128.X = 2;                          

                //TextCell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                ////cell.AddElement(bc128.CreateImageWithBarcode(cb, null, null));                    
                //var bi = bc128.CreateImageWithBarcode(cb, null, null);
                //bi.ScalePercent(100);
                //bi.Alignment = iTextSharp.text.Element.ALIGN_CENTER;
                //TextCell.AddElement(bi);

                ////cell.Image = bc128.CreateImageWithBarcode(cb, null, null);                    
                ////table.AddCell(cell);
                //table.AddCell(TextCell);
                //document.Add(table);


                //I use an image logo in the header so I need to get an instance of the image to be able to insert it. I believe this is something you couldn't do with older versions of iTextSharp
                iTextSharp.text.Image logo = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("images/logo_naqlyat.png"));

                //I used a large version of the logo to maintain the quality when the size was reduced. I guess you could reduce the size manually and use a smaller version, but I used iTextSharp to reduce the scale. As you can see, I reduced it down to 7% of original size.
                logo.ScalePercent(70);

                //create instance of a table cell to contain the logo
                PdfPCell cell20 = new PdfPCell(logo);

                //align the logo to the right of the cell
                cell20.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                //add a bit of padding to bring it away from the right edge
                cell20.PaddingTop = 0;
                cell20.PaddingRight = 30;

                //remove the border
                cell20.Border = 0;

                //Add the cell to the table
                headerTbl.AddCell(cell20);
                headerTbl.WriteSelectedRows(0, -1, -1, (doc.PageSize.Height - 20), writer.DirectContent);
            }

            //override the OnPageEnd event handler to add our footer
            public override void OnEndPage(PdfWriter writer, iTextSharp.text.Document doc)
            {
                //I use a PdfPtable with 2 columns to position my footer where I want it
                PdfPTable footerTbl = new PdfPTable(4);
                var cols2 = new[] { 200, 200, 200, 200 };
                footerTbl.SetWidths(cols2);
                footerTbl.RunDirection = PdfWriter.RUN_DIRECTION_RTL;
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                //set the width of the table to be the same as the document
                footerTbl.TotalWidth = doc.PageSize.Width;
                //Center the table on the page
                footerTbl.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                PdfPCell cell = new PdfPCell();
                cell.ArabicOptions = ColumnText.DIGITS_EN2AN;
                cell.BackgroundColor = iTextSharp.text.BaseColor.RED;
                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                //set cell border to 0
                cell.Border = 2;

                //add some padding to bring away from the edge
                cell.PaddingRight = 5;
                if (moh.PrintDateofPrint) cell.Phrase = new iTextSharp.text.Phrase("تاريخ الطباعة : " + String.Format("{0:dd/MM/yyyy}", moh.Nows()), footer);
                else cell.Phrase = new iTextSharp.text.Phrase(" ", footer);
                //add cell to table
                footerTbl.AddCell(cell);

                //create new instance of cell to hold the text
                //cell = new PdfPCell();

                //align the text to the right of the cell
                //cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("طبعت بواسطة " + UserName, footer);

                // add some padding to take away from the edge of the page
                //cell.PaddingRight = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                cell.Phrase = new iTextSharp.text.Phrase("عدد مرات الطباعة " + PageNo, footer);
                footerTbl.AddCell(cell);

                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                cell.Phrase = new iTextSharp.text.Phrase("صفحة رقم " + writer.PageNumber.ToString(), footer);

                // add some padding to take away from the edge of the page
                cell.PaddingLeft = 5;

                //add the cell to the table
                footerTbl.AddCell(cell);

                //write the rows out to the PDF output stream.
                footerTbl.WriteSelectedRows(0, -1, 0, (doc.BottomMargin - 10), writer.DirectContent);
            }
        }


        #endregion

    }
}